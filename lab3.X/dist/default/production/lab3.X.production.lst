

Microchip MPLAB XC8 Assembler V2.32 build 20210201212658 
                                                                                               Thu Aug 05 11:59:54 2021

Microchip MPLAB XC8 C Compiler v2.32 (Free license) build 20210201212658 Og1 
     1                           	processor	16F887
     2                           	pagewidth 120
     3                           	opt	flic
     4                           	psect	strings,global,class=STRING,delta=2,noexec
     5                           	psect	cinit,global,class=CODE,merge=1,delta=2
     6                           	psect	bssCOMMON,global,class=COMMON,space=1,delta=1,noexec
     7                           	psect	bssBANK0,global,class=BANK0,space=1,delta=1,noexec
     8                           	psect	bssBANK1,global,class=BANK1,space=1,delta=1,noexec
     9                           	psect	cstackBANK1,global,class=BANK1,space=1,delta=1,noexec
    10                           	psect	cstackCOMMON,global,class=COMMON,space=1,delta=1,noexec
    11                           	psect	cstackBANK0,global,class=BANK0,space=1,delta=1,noexec
    12                           	psect	maintext,global,class=CODE,split=1,delta=2
    13                           	psect	text1,local,class=CODE,merge=1,delta=2
    14                           	psect	text2,local,class=CODE,merge=1,delta=2
    15                           	psect	text3,local,class=CODE,merge=1,delta=2
    16                           	psect	text4,local,class=CODE,merge=1,delta=2
    17                           	psect	text5,local,class=CODE,merge=1,delta=2
    18                           	psect	text6,local,class=CODE,merge=1,delta=2
    19                           	psect	text7,local,class=CODE,merge=1,delta=2,group=3
    20                           	psect	text8,local,class=CODE,merge=1,delta=2
    21                           	psect	text9,local,class=CODE,merge=1,delta=2,group=2
    22                           	psect	text10,local,class=CODE,merge=1,delta=2,group=2
    23                           	psect	text11,local,class=CODE,merge=1,delta=2
    24                           	psect	text12,local,class=CODE,merge=1,delta=2,group=3
    25                           	psect	text13,local,class=CODE,merge=1,delta=2,group=3
    26                           	psect	text14,local,class=CODE,merge=1,delta=2,group=1
    27                           	psect	text15,local,class=CODE,merge=1,delta=2
    28                           	psect	text16,local,class=CODE,merge=1,delta=2,group=2
    29                           	psect	text17,local,class=CODE,merge=1,delta=2,group=2
    30                           	psect	text18,local,class=CODE,merge=1,delta=2,group=3
    31                           	psect	text19,local,class=CODE,merge=1,delta=2,group=3
    32                           	psect	text20,local,class=CODE,merge=1,delta=2,group=2
    33                           	psect	text21,local,class=CODE,merge=1,delta=2
    34                           	psect	intentry,global,class=CODE,delta=2
    35                           	psect	functab,global,class=ENTRY,delta=2
    36                           	psect	config,global,abs,ovrld,class=CONFIG,space=4,delta=2,noexec
    37                           	dabs	1,0x7E,2
    38  0000                     
    39                           ; Version 2.20
    40                           ; Generated 12/02/2020 GMT
    41                           ; 
    42                           ; Copyright Â© 2020, Microchip Technology Inc. and its subsidiaries ("Microchip")
    43                           ; All rights reserved.
    44                           ; 
    45                           ; This software is developed by Microchip Technology Inc. and its subsidiaries ("Microch
      +                          ip").
    46                           ; 
    47                           ; Redistribution and use in source and binary forms, with or without modification, are
    48                           ; permitted provided that the following conditions are met:
    49                           ; 
    50                           ;     1. Redistributions of source code must retain the above copyright notice, this lis
      +                          t of
    51                           ;        conditions and the following disclaimer.
    52                           ; 
    53                           ;     2. Redistributions in binary form must reproduce the above copyright notice, this 
      +                          list
    54                           ;        of conditions and the following disclaimer in the documentation and/or other
    55                           ;        materials provided with the distribution.
    56                           ; 
    57                           ;     3. Microchip's name may not be used to endorse or promote products derived from th
      +                          is
    58                           ;        software without specific prior written permission.
    59                           ; 
    60                           ; THIS SOFTWARE IS PROVIDED BY MICROCHIP "AS IS" AND ANY EXPRESS OR IMPLIED WARRANTIES,
    61                           ; INCLUDING, BUT NOT LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS F
      +                          OR
    62                           ; PURPOSE ARE DISCLAIMED.  IN NO EVENT SHALL MICROCHIP BE LIABLE FOR ANY DIRECT, INDIREC
      +                          T,
    63                           ; INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING BUT NOT LIMITED TO
    64                           ; PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE, DATA OR PROFITS; OR BUSINESS
    65                           ; INTERRUPTION) HOWSOEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT, ST
      +                          RICT
    66                           ; LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE U
      +                          SE OF
    67                           ; THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.
    68                           ; 
    69                           ; 
    70                           ; Code-generator required, PIC16F887 Definitions
    71                           ; 
    72                           ; SFR Addresses
    73  0000                     	;# 
    74  0001                     	;# 
    75  0002                     	;# 
    76  0003                     	;# 
    77  0004                     	;# 
    78  0005                     	;# 
    79  0006                     	;# 
    80  0007                     	;# 
    81  0008                     	;# 
    82  0009                     	;# 
    83  000A                     	;# 
    84  000B                     	;# 
    85  000C                     	;# 
    86  000D                     	;# 
    87  000E                     	;# 
    88  000E                     	;# 
    89  000F                     	;# 
    90  0010                     	;# 
    91  0011                     	;# 
    92  0012                     	;# 
    93  0013                     	;# 
    94  0014                     	;# 
    95  0015                     	;# 
    96  0015                     	;# 
    97  0016                     	;# 
    98  0017                     	;# 
    99  0018                     	;# 
   100  0019                     	;# 
   101  001A                     	;# 
   102  001B                     	;# 
   103  001B                     	;# 
   104  001C                     	;# 
   105  001D                     	;# 
   106  001E                     	;# 
   107  001F                     	;# 
   108  0081                     	;# 
   109  0085                     	;# 
   110  0086                     	;# 
   111  0087                     	;# 
   112  0088                     	;# 
   113  0089                     	;# 
   114  008C                     	;# 
   115  008D                     	;# 
   116  008E                     	;# 
   117  008F                     	;# 
   118  0090                     	;# 
   119  0091                     	;# 
   120  0092                     	;# 
   121  0093                     	;# 
   122  0093                     	;# 
   123  0093                     	;# 
   124  0094                     	;# 
   125  0095                     	;# 
   126  0096                     	;# 
   127  0097                     	;# 
   128  0098                     	;# 
   129  0099                     	;# 
   130  009A                     	;# 
   131  009B                     	;# 
   132  009C                     	;# 
   133  009D                     	;# 
   134  009E                     	;# 
   135  009F                     	;# 
   136  0105                     	;# 
   137  0107                     	;# 
   138  0108                     	;# 
   139  0109                     	;# 
   140  010C                     	;# 
   141  010C                     	;# 
   142  010D                     	;# 
   143  010E                     	;# 
   144  010F                     	;# 
   145  0185                     	;# 
   146  0187                     	;# 
   147  0188                     	;# 
   148  0189                     	;# 
   149  018C                     	;# 
   150  018D                     	;# 
   151  0000                     	;# 
   152  0001                     	;# 
   153  0002                     	;# 
   154  0003                     	;# 
   155  0004                     	;# 
   156  0005                     	;# 
   157  0006                     	;# 
   158  0007                     	;# 
   159  0008                     	;# 
   160  0009                     	;# 
   161  000A                     	;# 
   162  000B                     	;# 
   163  000C                     	;# 
   164  000D                     	;# 
   165  000E                     	;# 
   166  000E                     	;# 
   167  000F                     	;# 
   168  0010                     	;# 
   169  0011                     	;# 
   170  0012                     	;# 
   171  0013                     	;# 
   172  0014                     	;# 
   173  0015                     	;# 
   174  0015                     	;# 
   175  0016                     	;# 
   176  0017                     	;# 
   177  0018                     	;# 
   178  0019                     	;# 
   179  001A                     	;# 
   180  001B                     	;# 
   181  001B                     	;# 
   182  001C                     	;# 
   183  001D                     	;# 
   184  001E                     	;# 
   185  001F                     	;# 
   186  0081                     	;# 
   187  0085                     	;# 
   188  0086                     	;# 
   189  0087                     	;# 
   190  0088                     	;# 
   191  0089                     	;# 
   192  008C                     	;# 
   193  008D                     	;# 
   194  008E                     	;# 
   195  008F                     	;# 
   196  0090                     	;# 
   197  0091                     	;# 
   198  0092                     	;# 
   199  0093                     	;# 
   200  0093                     	;# 
   201  0093                     	;# 
   202  0094                     	;# 
   203  0095                     	;# 
   204  0096                     	;# 
   205  0097                     	;# 
   206  0098                     	;# 
   207  0099                     	;# 
   208  009A                     	;# 
   209  009B                     	;# 
   210  009C                     	;# 
   211  009D                     	;# 
   212  009E                     	;# 
   213  009F                     	;# 
   214  0105                     	;# 
   215  0107                     	;# 
   216  0108                     	;# 
   217  0109                     	;# 
   218  010C                     	;# 
   219  010C                     	;# 
   220  010D                     	;# 
   221  010E                     	;# 
   222  010F                     	;# 
   223  0185                     	;# 
   224  0187                     	;# 
   225  0188                     	;# 
   226  0189                     	;# 
   227  018C                     	;# 
   228  018D                     	;# 
   229  0000                     	;# 
   230  0001                     	;# 
   231  0002                     	;# 
   232  0003                     	;# 
   233  0004                     	;# 
   234  0005                     	;# 
   235  0006                     	;# 
   236  0007                     	;# 
   237  0008                     	;# 
   238  0009                     	;# 
   239  000A                     	;# 
   240  000B                     	;# 
   241  000C                     	;# 
   242  000D                     	;# 
   243  000E                     	;# 
   244  000E                     	;# 
   245  000F                     	;# 
   246  0010                     	;# 
   247  0011                     	;# 
   248  0012                     	;# 
   249  0013                     	;# 
   250  0014                     	;# 
   251  0015                     	;# 
   252  0015                     	;# 
   253  0016                     	;# 
   254  0017                     	;# 
   255  0018                     	;# 
   256  0019                     	;# 
   257  001A                     	;# 
   258  001B                     	;# 
   259  001B                     	;# 
   260  001C                     	;# 
   261  001D                     	;# 
   262  001E                     	;# 
   263  001F                     	;# 
   264  0081                     	;# 
   265  0085                     	;# 
   266  0086                     	;# 
   267  0087                     	;# 
   268  0088                     	;# 
   269  0089                     	;# 
   270  008C                     	;# 
   271  008D                     	;# 
   272  008E                     	;# 
   273  008F                     	;# 
   274  0090                     	;# 
   275  0091                     	;# 
   276  0092                     	;# 
   277  0093                     	;# 
   278  0093                     	;# 
   279  0093                     	;# 
   280  0094                     	;# 
   281  0095                     	;# 
   282  0096                     	;# 
   283  0097                     	;# 
   284  0098                     	;# 
   285  0099                     	;# 
   286  009A                     	;# 
   287  009B                     	;# 
   288  009C                     	;# 
   289  009D                     	;# 
   290  009E                     	;# 
   291  009F                     	;# 
   292  0105                     	;# 
   293  0107                     	;# 
   294  0108                     	;# 
   295  0109                     	;# 
   296  010C                     	;# 
   297  010C                     	;# 
   298  010D                     	;# 
   299  010E                     	;# 
   300  010F                     	;# 
   301  0185                     	;# 
   302  0187                     	;# 
   303  0188                     	;# 
   304  0189                     	;# 
   305  018C                     	;# 
   306  018D                     	;# 
   307  0000                     	;# 
   308  0001                     	;# 
   309  0002                     	;# 
   310  0003                     	;# 
   311  0004                     	;# 
   312  0005                     	;# 
   313  0006                     	;# 
   314  0007                     	;# 
   315  0008                     	;# 
   316  0009                     	;# 
   317  000A                     	;# 
   318  000B                     	;# 
   319  000C                     	;# 
   320  000D                     	;# 
   321  000E                     	;# 
   322  000E                     	;# 
   323  000F                     	;# 
   324  0010                     	;# 
   325  0011                     	;# 
   326  0012                     	;# 
   327  0013                     	;# 
   328  0014                     	;# 
   329  0015                     	;# 
   330  0015                     	;# 
   331  0016                     	;# 
   332  0017                     	;# 
   333  0018                     	;# 
   334  0019                     	;# 
   335  001A                     	;# 
   336  001B                     	;# 
   337  001B                     	;# 
   338  001C                     	;# 
   339  001D                     	;# 
   340  001E                     	;# 
   341  001F                     	;# 
   342  0081                     	;# 
   343  0085                     	;# 
   344  0086                     	;# 
   345  0087                     	;# 
   346  0088                     	;# 
   347  0089                     	;# 
   348  008C                     	;# 
   349  008D                     	;# 
   350  008E                     	;# 
   351  008F                     	;# 
   352  0090                     	;# 
   353  0091                     	;# 
   354  0092                     	;# 
   355  0093                     	;# 
   356  0093                     	;# 
   357  0093                     	;# 
   358  0094                     	;# 
   359  0095                     	;# 
   360  0096                     	;# 
   361  0097                     	;# 
   362  0098                     	;# 
   363  0099                     	;# 
   364  009A                     	;# 
   365  009B                     	;# 
   366  009C                     	;# 
   367  009D                     	;# 
   368  009E                     	;# 
   369  009F                     	;# 
   370  0105                     	;# 
   371  0107                     	;# 
   372  0108                     	;# 
   373  0109                     	;# 
   374  010C                     	;# 
   375  010C                     	;# 
   376  010D                     	;# 
   377  010E                     	;# 
   378  010F                     	;# 
   379  0185                     	;# 
   380  0187                     	;# 
   381  0188                     	;# 
   382  0189                     	;# 
   383  018C                     	;# 
   384  018D                     	;# 
   385                           
   386                           	psect	strings
   387  0400                     __pstrings:
   388  0400                     stringtab:
   389  0400                     __stringtab:
   390  0400                     stringcode:	
   391                           ;	String table - string pointers are 1 byte each
   392                           
   393  0400                     stringdir:
   394  0400  3004               	movlw	high stringdir
   395  0401  008A               	movwf	10
   396  0402  0804               	movf	4,w
   397  0403  0A84               	incf	4,f
   398  0404  0782               	addwf	2,f
   399  0405                     __stringbase:
   400  0405  3400               	retlw	0
   401  0406                     __end_of__stringtab:
   402  0406                     _dpowers:
   403  0406  3401               	retlw	1
   404  0407  3400               	retlw	0
   405  0408  340A               	retlw	10
   406  0409  3400               	retlw	0
   407  040A  3464               	retlw	100
   408  040B  3400               	retlw	0
   409  040C  34E8               	retlw	232
   410  040D  3403               	retlw	3
   411  040E  3410               	retlw	16
   412  040F  3427               	retlw	39
   413  0410                     __end_of_dpowers:
   414  001A                     _RCREG	set	26
   415  0019                     _TXREG	set	25
   416  000C                     _PIR1bits	set	12
   417  0018                     _RCSTAbits	set	24
   418  0008                     _PORTD	set	8
   419  0007                     _PORTC	set	7
   420  0006                     _PORTB	set	6
   421  0007                     _PORTCbits	set	7
   422  0013                     _SSPBUF	set	19
   423  0014                     _SSPCON	set	20
   424  001F                     _ADCON0bits	set	31
   425  0064                     _TXIF	set	100
   426  0065                     _RCIF	set	101
   427  008F                     _OSCCONbits	set	143
   428  009A                     _SPBRGH	set	154
   429  0099                     _SPBRG	set	153
   430  0098                     _TXSTAbits	set	152
   431  0086                     _TRISB	set	134
   432  0094                     _SSPSTATbits	set	148
   433  0094                     _SSPSTAT	set	148
   434  009F                     _ADCON1bits	set	159
   435  043A                     _TRISC2	set	1082
   436  043B                     _TRISC3	set	1083
   437  043D                     _TRISC5	set	1085
   438  0187                     _BAUDCTLbits	set	391
   439  0189                     _ANSELH	set	393
   440  0188                     _ANSEL	set	392
   441  0410                     STR_5:
   442  0410  340D               	retlw	13
   443  0411  3420               	retlw	32	;' '
   444  0412  3456               	retlw	86	;'V'
   445  0413  3441               	retlw	65	;'A'
   446  0414  344C               	retlw	76	;'L'
   447  0415  344F               	retlw	79	;'O'
   448  0416  3452               	retlw	82	;'R'
   449  0417  3420               	retlw	32	;' '
   450  0418  3444               	retlw	68	;'D'
   451  0419  3445               	retlw	69	;'E'
   452  041A  344C               	retlw	76	;'L'
   453  041B  3420               	retlw	32	;' '
   454  041C  3450               	retlw	80	;'P'
   455  041D  344F               	retlw	79	;'O'
   456  041E  3454               	retlw	84	;'T'
   457  041F  3445               	retlw	69	;'E'
   458  0420  344E               	retlw	78	;'N'
   459  0421  3443               	retlw	67	;'C'
   460  0422  3449               	retlw	73	;'I'
   461  0423  344F               	retlw	79	;'O'
   462  0424  3445               	retlw	69	;'E'
   463  0425  344D               	retlw	77	;'M'
   464  0426  3454               	retlw	84	;'T'
   465  0427  3452               	retlw	82	;'R'
   466  0428  344F               	retlw	79	;'O'
   467  0429  3420               	retlw	32	;' '
   468  042A  3432               	retlw	50	;'2'
   469  042B  343A               	retlw	58	;':'
   470  042C  3420               	retlw	32	;' '
   471  042D  340D               	retlw	13
   472  042E  3400               	retlw	0
   473  042F                     STR_1:
   474  042F  340D               	retlw	13
   475  0430  3420               	retlw	32	;' '
   476  0431  3456               	retlw	86	;'V'
   477  0432  3441               	retlw	65	;'A'
   478  0433  344C               	retlw	76	;'L'
   479  0434  344F               	retlw	79	;'O'
   480  0435  3452               	retlw	82	;'R'
   481  0436  3420               	retlw	32	;' '
   482  0437  3444               	retlw	68	;'D'
   483  0438  3445               	retlw	69	;'E'
   484  0439  344C               	retlw	76	;'L'
   485  043A  3420               	retlw	32	;' '
   486  043B  3450               	retlw	80	;'P'
   487  043C  344F               	retlw	79	;'O'
   488  043D  3454               	retlw	84	;'T'
   489  043E  3445               	retlw	69	;'E'
   490  043F  344E               	retlw	78	;'N'
   491  0440  3443               	retlw	67	;'C'
   492  0441  3449               	retlw	73	;'I'
   493  0442  344F               	retlw	79	;'O'
   494  0443  344D               	retlw	77	;'M'
   495  0444  3445               	retlw	69	;'E'
   496  0445  3454               	retlw	84	;'T'
   497  0446  3452               	retlw	82	;'R'
   498  0447  344F               	retlw	79	;'O'
   499  0448  3420               	retlw	32	;' '
   500  0449  3431               	retlw	49	;'1'
   501  044A  343A               	retlw	58	;':'
   502  044B  340D               	retlw	13
   503  044C  3400               	retlw	0
   504  044D                     STR_12:
   505  044D  3445               	retlw	69	;'E'
   506  044E  346C               	retlw	108	;'l'
   507  044F  3420               	retlw	32	;' '
   508  0450  346E               	retlw	110	;'n'
   509  0451  3475               	retlw	117	;'u'
   510  0452  346D               	retlw	109	;'m'
   511  0453  3465               	retlw	101	;'e'
   512  0454  3472               	retlw	114	;'r'
   513  0455  346F               	retlw	111	;'o'
   514  0456  3420               	retlw	32	;' '
   515  0457  3465               	retlw	101	;'e'
   516  0458  346C               	retlw	108	;'l'
   517  0459  3465               	retlw	101	;'e'
   518  045A  3467               	retlw	103	;'g'
   519  045B  3469               	retlw	105	;'i'
   520  045C  3464               	retlw	100	;'d'
   521  045D  346F               	retlw	111	;'o'
   522  045E  3420               	retlw	32	;' '
   523  045F  3465               	retlw	101	;'e'
   524  0460  3473               	retlw	115	;'s'
   525  0461  343A               	retlw	58	;':'
   526  0462  3420               	retlw	32	;' '
   527  0463  3425               	retlw	37	;'%'
   528  0464  3464               	retlw	100	;'d'
   529  0465  3400               	retlw	0
   530  0466                     STR_11:
   531  0466  3449               	retlw	73	;'I'
   532  0467  346E               	retlw	110	;'n'
   533  0468  3467               	retlw	103	;'g'
   534  0469  3472               	retlw	114	;'r'
   535  046A  3465               	retlw	101	;'e'
   536  046B  3473               	retlw	115	;'s'
   537  046C  3461               	retlw	97	;'a'
   538  046D  3472               	retlw	114	;'r'
   539  046E  3420               	retlw	32	;' '
   540  046F  3455               	retlw	85	;'U'
   541  0470  346E               	retlw	110	;'n'
   542  0471  3469               	retlw	105	;'i'
   543  0472  3464               	retlw	100	;'d'
   544  0473  3461               	retlw	97	;'a'
   545  0474  3464               	retlw	100	;'d'
   546  0475  3465               	retlw	101	;'e'
   547  0476  3473               	retlw	115	;'s'
   548  0477  343A               	retlw	58	;':'
   549  0478  3420               	retlw	32	;' '
   550  0479  340D               	retlw	13
   551  047A  3400               	retlw	0
   552  047B                     STR_10:
   553  047B  3449               	retlw	73	;'I'
   554  047C  346E               	retlw	110	;'n'
   555  047D  3467               	retlw	103	;'g'
   556  047E  3472               	retlw	114	;'r'
   557  047F  3465               	retlw	101	;'e'
   558  0480  3473               	retlw	115	;'s'
   559  0481  3461               	retlw	97	;'a'
   560  0482  3472               	retlw	114	;'r'
   561  0483  3420               	retlw	32	;' '
   562  0484  3444               	retlw	68	;'D'
   563  0485  3465               	retlw	101	;'e'
   564  0486  3463               	retlw	99	;'c'
   565  0487  3465               	retlw	101	;'e'
   566  0488  346E               	retlw	110	;'n'
   567  0489  3461               	retlw	97	;'a'
   568  048A  3473               	retlw	115	;'s'
   569  048B  343A               	retlw	58	;':'
   570  048C  3420               	retlw	32	;' '
   571  048D  340D               	retlw	13
   572  048E  3400               	retlw	0
   573  048F                     STR_9:
   574  048F  3449               	retlw	73	;'I'
   575  0490  346E               	retlw	110	;'n'
   576  0491  3467               	retlw	103	;'g'
   577  0492  3472               	retlw	114	;'r'
   578  0493  3465               	retlw	101	;'e'
   579  0494  3473               	retlw	115	;'s'
   580  0495  3461               	retlw	97	;'a'
   581  0496  3472               	retlw	114	;'r'
   582  0497  3420               	retlw	32	;' '
   583  0498  3443               	retlw	67	;'C'
   584  0499  3465               	retlw	101	;'e'
   585  049A  346E               	retlw	110	;'n'
   586  049B  3474               	retlw	116	;'t'
   587  049C  3465               	retlw	101	;'e'
   588  049D  346E               	retlw	110	;'n'
   589  049E  3461               	retlw	97	;'a'
   590  049F  343A               	retlw	58	;':'
   591  04A0  340D               	retlw	13
   592  04A1  3400               	retlw	0
   593  04A2                     STR_2:
   594  04A2  3420               	retlw	32	;' '
   595  04A3  3420               	retlw	32	;' '
   596  04A4  3400               	retlw	0
   597  04A5                     STR_3:
   598  04A5  3420               	retlw	32	;' '
   599  04A6  3456               	retlw	86	;'V'
   600  04A7  3400               	retlw	0
   601  042D                     
   602                           	psect	cinit
   603  000F                     start_initialization:	
   604                           ; #config settings
   605                           
   606  000F                     __initialization:
   607                           
   608                           ; Clear objects allocated to COMMON
   609  000F  01FA               	clrf	__pbssCOMMON& (0+127)
   610  0010  01FB               	clrf	(__pbssCOMMON+1)& (0+127)
   611                           
   612                           ; Clear objects allocated to BANK0
   613  0011  1283               	bcf	3,5	;RP0=0, select bank0
   614  0012  1303               	bcf	3,6	;RP1=0, select bank0
   615  0013  01EA               	clrf	__pbssBANK0& (0+127)
   616  0014  01EB               	clrf	(__pbssBANK0+1)& (0+127)
   617  0015  01EC               	clrf	(__pbssBANK0+2)& (0+127)
   618                           
   619                           ; Clear objects allocated to BANK1
   620  0016  1683               	bsf	3,5	;RP0=1, select bank1
   621  0017  1303               	bcf	3,6	;RP1=0, select bank1
   622  0018  01A0               	clrf	__pbssBANK1& (0+127)
   623  0019  01A1               	clrf	(__pbssBANK1+1)& (0+127)
   624  001A  01A2               	clrf	(__pbssBANK1+2)& (0+127)
   625  001B  01A3               	clrf	(__pbssBANK1+3)& (0+127)
   626  001C  01A4               	clrf	(__pbssBANK1+4)& (0+127)
   627  001D  01A5               	clrf	(__pbssBANK1+5)& (0+127)
   628  001E  01A6               	clrf	(__pbssBANK1+6)& (0+127)
   629  001F  01A7               	clrf	(__pbssBANK1+7)& (0+127)
   630  0020  01A8               	clrf	(__pbssBANK1+8)& (0+127)
   631  0021  01A9               	clrf	(__pbssBANK1+9)& (0+127)
   632  0022                     end_of_initialization:	
   633                           ;End of C runtime variable initialization code
   634                           
   635  0022                     __end_of__initialization:
   636  0022  0183               	clrf	3
   637  0023  120A  118A  2DFF   	ljmp	_main	;jump to C main() function
   638                           
   639                           	psect	bssCOMMON
   640  007A                     __pbssCOMMON:
   641  007A                     _tens:
   642  007A                     	ds	1
   643  007B                     _hundreds:
   644  007B                     	ds	1
   645                           
   646                           	psect	bssBANK0
   647  006A                     __pbssBANK0:
   648  006A                     _cen:
   649  006A                     	ds	1
   650  006B                     _residuo:
   651  006B                     	ds	1
   652  006C                     _units:
   653  006C                     	ds	1
   654                           
   655                           	psect	bssBANK1
   656  00A0                     __pbssBANK1:
   657  00A0                     _full:
   658  00A0                     	ds	2
   659  00A2                     _contador:
   660  00A2                     	ds	2
   661  00A4                     _con:
   662  00A4                     	ds	1
   663  00A5                     _var:
   664  00A5                     	ds	1
   665  00A6                     _uni:
   666  00A6                     	ds	1
   667  00A7                     _dec:
   668  00A7                     	ds	1
   669  00A8                     _pot2:
   670  00A8                     	ds	1
   671  00A9                     _pot1:
   672  00A9                     	ds	1
   673                           
   674                           	psect	cstackBANK1
   675  00AA                     __pcstackBANK1:
   676  00AA                     ??_mensaje:
   677                           
   678                           ; 1 bytes @ 0x0
   679  00AA                     	ds	5
   680                           
   681                           	psect	cstackCOMMON
   682  0070                     __pcstackCOMMON:
   683  0070                     ?_isdigit:
   684  0070                     ?_setup:	
   685                           ; 1 bit 
   686                           
   687  0070                     ?_mensaje:	
   688                           ; 1 bytes @ 0x0
   689                           
   690  0070                     ?_spiReceiveWait:	
   691                           ; 1 bytes @ 0x0
   692                           
   693  0070                     ?_spiWrite:	
   694                           ; 1 bytes @ 0x0
   695                           
   696  0070                     ?_spiRead:	
   697                           ; 1 bytes @ 0x0
   698                           
   699  0070                     ?_isr:	
   700                           ; 1 bytes @ 0x0
   701                           
   702  0070                     ??_isr:	
   703                           ; 1 bytes @ 0x0
   704                           
   705  0070                     ?_main:	
   706                           ; 1 bytes @ 0x0
   707                           
   708  0070                     ?_division:	
   709                           ; 1 bytes @ 0x0
   710                           
   711                           
   712                           ; 1 bytes @ 0x0
   713  0070                     	ds	2
   714  0072                     ?_strcat:
   715  0072                     ??_isdigit:	
   716                           ; 1 bytes @ 0x2
   717                           
   718  0072                     ?_spiInit:	
   719                           ; 1 bytes @ 0x2
   720                           
   721  0072                     ??_spiReceiveWait:	
   722                           ; 1 bytes @ 0x2
   723                           
   724  0072                     ??_spiWrite:	
   725                           ; 1 bytes @ 0x2
   726                           
   727  0072                     ??_spiRead:	
   728                           ; 1 bytes @ 0x2
   729                           
   730  0072                     ?_putch:	
   731                           ; 1 bytes @ 0x2
   732                           
   733  0072                     ?___wmul:	
   734                           ; 1 bytes @ 0x2
   735                           
   736  0072                     ?___awdiv:	
   737                           ; 2 bytes @ 0x2
   738                           
   739  0072                     ?___awmod:	
   740                           ; 2 bytes @ 0x2
   741                           
   742  0072                     ?___lwdiv:	
   743                           ; 2 bytes @ 0x2
   744                           
   745  0072                     spiInit@sDataSample:	
   746                           ; 2 bytes @ 0x2
   747                           
   748  0072                     spiWrite@dat:	
   749                           ; 1 bytes @ 0x2
   750                           
   751  0072                     putch@data:	
   752                           ; 1 bytes @ 0x2
   753                           
   754  0072                     _isdigit$1026:	
   755                           ; 1 bytes @ 0x2
   756                           
   757  0072                     strcat@from:	
   758                           ; 1 bytes @ 0x2
   759                           
   760  0072                     ___wmul@multiplier:	
   761                           ; 1 bytes @ 0x2
   762                           
   763  0072                     ___awdiv@divisor:	
   764                           ; 2 bytes @ 0x2
   765                           
   766  0072                     ___awmod@divisor:	
   767                           ; 2 bytes @ 0x2
   768                           
   769  0072                     ___lwdiv@divisor:	
   770                           ; 2 bytes @ 0x2
   771                           
   772                           
   773                           ; 2 bytes @ 0x2
   774  0072                     	ds	1
   775  0073                     ??_strcat:
   776  0073                     ??_putch:	
   777                           ; 1 bytes @ 0x3
   778                           
   779  0073                     spiInit@sClockIdle:	
   780                           ; 1 bytes @ 0x3
   781                           
   782  0073                     isdigit@c:	
   783                           ; 1 bytes @ 0x3
   784                           
   785                           
   786                           ; 1 bytes @ 0x3
   787  0073                     	ds	1
   788  0074                     spiInit@sTransmitEdge:
   789  0074                     strcat@to:	
   790                           ; 1 bytes @ 0x4
   791                           
   792  0074                     ___wmul@multiplicand:	
   793                           ; 1 bytes @ 0x4
   794                           
   795  0074                     ___awdiv@dividend:	
   796                           ; 2 bytes @ 0x4
   797                           
   798  0074                     ___awmod@dividend:	
   799                           ; 2 bytes @ 0x4
   800                           
   801  0074                     ___lwdiv@dividend:	
   802                           ; 2 bytes @ 0x4
   803                           
   804                           
   805                           ; 2 bytes @ 0x4
   806  0074                     	ds	1
   807  0075                     ??_spiInit:
   808  0075                     spiInit@sType:	
   809                           ; 1 bytes @ 0x5
   810                           
   811  0075                     strcat@cp:	
   812                           ; 1 bytes @ 0x5
   813                           
   814                           
   815                           ; 1 bytes @ 0x5
   816  0075                     	ds	1
   817  0076                     ??_setup:
   818  0076                     ??___wmul:	
   819                           ; 1 bytes @ 0x6
   820                           
   821  0076                     ??___awdiv:	
   822                           ; 1 bytes @ 0x6
   823                           
   824  0076                     ??___awmod:	
   825                           ; 1 bytes @ 0x6
   826                           
   827  0076                     ??___lwdiv:	
   828                           ; 1 bytes @ 0x6
   829                           
   830  0076                     ___wmul@product:	
   831                           ; 1 bytes @ 0x6
   832                           
   833                           
   834                           ; 2 bytes @ 0x6
   835  0076                     	ds	1
   836  0077                     ___awmod@counter:
   837  0077                     ___lwdiv@quotient:	
   838                           ; 1 bytes @ 0x7
   839                           
   840                           
   841                           ; 2 bytes @ 0x7
   842  0077                     	ds	1
   843  0078                     ?_atoi:
   844  0078                     ___awmod@sign:	
   845                           ; 2 bytes @ 0x8
   846                           
   847                           
   848                           ; 1 bytes @ 0x8
   849  0078                     	ds	1
   850  0079                     division@valor:
   851  0079                     ___lwdiv@counter:	
   852                           ; 1 bytes @ 0x9
   853                           
   854                           
   855                           ; 1 bytes @ 0x9
   856  0079                     	ds	1
   857                           
   858                           	psect	cstackBANK0
   859  0020                     __pcstackBANK0:
   860  0020                     ??_atoi:
   861  0020                     ?___lwmod:	
   862                           ; 1 bytes @ 0x0
   863                           
   864  0020                     ___awdiv@counter:	
   865                           ; 2 bytes @ 0x0
   866                           
   867  0020                     ___lwmod@divisor:	
   868                           ; 1 bytes @ 0x0
   869                           
   870                           
   871                           ; 2 bytes @ 0x0
   872  0020                     	ds	1
   873  0021                     ___awdiv@sign:
   874                           
   875                           ; 1 bytes @ 0x1
   876  0021                     	ds	1
   877  0022                     atoi@sign:
   878  0022                     ___awdiv@quotient:	
   879                           ; 1 bytes @ 0x2
   880                           
   881  0022                     ___lwmod@dividend:	
   882                           ; 2 bytes @ 0x2
   883                           
   884                           
   885                           ; 2 bytes @ 0x2
   886  0022                     	ds	1
   887  0023                     atoi@a:
   888                           
   889                           ; 2 bytes @ 0x3
   890  0023                     	ds	1
   891  0024                     ??_division:
   892  0024                     ??___lwmod:	
   893                           ; 1 bytes @ 0x4
   894                           
   895                           
   896                           ; 1 bytes @ 0x4
   897  0024                     	ds	1
   898  0025                     ___lwmod@counter:
   899  0025                     atoi@s:	
   900                           ; 1 bytes @ 0x5
   901                           
   902                           
   903                           ; 1 bytes @ 0x5
   904  0025                     	ds	1
   905  0026                     ?__doprnt:
   906  0026                     __doprnt@f:	
   907                           ; 2 bytes @ 0x6
   908                           
   909                           
   910                           ; 1 bytes @ 0x6
   911  0026                     	ds	1
   912  0027                     __doprnt@ap:
   913                           
   914                           ; 1 bytes @ 0x7
   915  0027                     	ds	1
   916  0028                     ??__doprnt:
   917                           
   918                           ; 1 bytes @ 0x8
   919  0028                     	ds	3
   920  002B                     __doprnt@flag:
   921                           
   922                           ; 1 bytes @ 0xB
   923  002B                     	ds	1
   924  002C                     __doprnt@prec:
   925                           
   926                           ; 1 bytes @ 0xC
   927  002C                     	ds	1
   928  002D                     __doprnt@val:
   929                           
   930                           ; 2 bytes @ 0xD
   931  002D                     	ds	2
   932  002F                     __doprnt@c:
   933                           
   934                           ; 1 bytes @ 0xF
   935  002F                     	ds	1
   936  0030                     __doprnt@pb:
   937                           
   938                           ; 1 bytes @ 0x10
   939  0030                     	ds	1
   940  0031                     ?_printf:
   941  0031                     ?_sprintf:	
   942                           ; 2 bytes @ 0x11
   943                           
   944  0031                     sprintf@f:	
   945                           ; 2 bytes @ 0x11
   946                           
   947                           
   948                           ; 1 bytes @ 0x11
   949  0031                     	ds	2
   950  0033                     ??_printf:
   951                           
   952                           ; 1 bytes @ 0x13
   953  0033                     	ds	1
   954  0034                     ??_sprintf:
   955                           
   956                           ; 1 bytes @ 0x14
   957  0034                     	ds	1
   958  0035                     printf@ap:
   959                           
   960                           ; 1 bytes @ 0x15
   961  0035                     	ds	1
   962  0036                     printf@f:
   963  0036                     sprintf@wh:	
   964                           ; 1 bytes @ 0x16
   965                           
   966                           
   967                           ; 1 bytes @ 0x16
   968  0036                     	ds	1
   969  0037                     sprintf@ap:
   970  0037                     printf@pb:	
   971                           ; 1 bytes @ 0x17
   972                           
   973                           
   974                           ; 2 bytes @ 0x17
   975  0037                     	ds	1
   976  0038                     sprintf@pb:
   977                           
   978                           ; 2 bytes @ 0x18
   979  0038                     	ds	2
   980  003A                     ?_concat:
   981  003A                     concat@a:	
   982                           ; 2 bytes @ 0x1A
   983                           
   984                           
   985                           ; 2 bytes @ 0x1A
   986  003A                     	ds	2
   987  003C                     concat@b:
   988                           
   989                           ; 2 bytes @ 0x1C
   990  003C                     	ds	2
   991  003E                     ??_concat:
   992                           
   993                           ; 1 bytes @ 0x1E
   994  003E                     	ds	1
   995  003F                     concat@s2:
   996                           
   997                           ; 20 bytes @ 0x1F
   998  003F                     	ds	20
   999  0053                     concat@s1:
  1000                           
  1001                           ; 20 bytes @ 0x33
  1002  0053                     	ds	20
  1003  0067                     concat@c:
  1004                           
  1005                           ; 2 bytes @ 0x47
  1006  0067                     	ds	2
  1007  0069                     ??_main:
  1008                           
  1009                           ; 1 bytes @ 0x49
  1010  0069                     	ds	1
  1011                           
  1012                           	psect	maintext
  1013  05FF                     __pmaintext:	
  1014 ;;
  1015 ;;Main: autosize = 0, tempsize = 1, incstack = 0, save=0
  1016 ;;
  1017 ;; *************** function _main *****************
  1018 ;; Defined at:
  1019 ;;		line 66 in file "lab3.c"
  1020 ;; Parameters:    Size  Location     Type
  1021 ;;		None
  1022 ;; Auto vars:     Size  Location     Type
  1023 ;;		None
  1024 ;; Return value:  Size  Location     Type
  1025 ;;                  1    wreg      void 
  1026 ;; Registers used:
  1027 ;;		wreg, fsr0l, fsr0h, status,2, status,0, btemp+1, pclath, cstack
  1028 ;; Tracked objects:
  1029 ;;		On entry : B00/0
  1030 ;;		On exit  : 0/0
  1031 ;;		Unchanged: 0/0
  1032 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  1033 ;;      Params:         0       0       0       0       0
  1034 ;;      Locals:         0       0       0       0       0
  1035 ;;      Temps:          0       1       0       0       0
  1036 ;;      Totals:         0       1       0       0       0
  1037 ;;Total ram usage:        1 bytes
  1038 ;; Hardware stack levels required when called: 6
  1039 ;; This function calls:
  1040 ;;		_mensaje
  1041 ;;		_setup
  1042 ;;		_spiRead
  1043 ;;		_spiWrite
  1044 ;; This function is called by:
  1045 ;;		Startup code after reset
  1046 ;; This function uses a non-reentrant model
  1047 ;;
  1048                           
  1049                           
  1050                           ;psect for function _main
  1051  05FF                     _main:
  1052  05FF                     l2284:	
  1053                           ;incstack = 0
  1054                           ; Regs used in _main: [wreg-fsr0h+status,2+status,0+btemp+1+pclath+cstack]
  1055                           
  1056                           
  1057                           ;lab3.c: 68:         SPI_CLOCK_IDLE_LOW, SPI_IDLE_2_ACTIVE);
  1058  05FF  120A  118A  2773  120A  118A  	fcall	_setup
  1059  0604                     l2286:
  1060                           
  1061                           ;lab3.c: 70: ;lab3.c: 71:     TXSTAbits.SYNC = 0;
  1062  0604  1283               	bcf	3,5	;RP0=0, select bank0
  1063  0605  1303               	bcf	3,6	;RP1=0, select bank0
  1064  0606  1107               	bcf	7,2	;volatile
  1065  0607                     l2288:
  1066                           
  1067                           ;lab3.c: 72:     TXSTAbits.BRGH = 1;
  1068  0607  30C7               	movlw	199
  1069  0608  1283               	bcf	3,5	;RP0=0, select bank0
  1070  0609  1303               	bcf	3,6	;RP1=0, select bank0
  1071  060A  00E9               	movwf	??_main
  1072  060B                     u1787:
  1073  060B  2E0C               	nop2
  1074  060C  0BE9               	decfsz	??_main,f
  1075  060D  2E0B               	goto	u1787
  1076  060E  2E0F               	nop2
  1077  060F                     l2290:
  1078                           
  1079                           ;lab3.c: 74:     SPBRG = 25;
  1080  060F  300A               	movlw	10
  1081  0610  120A  158A  27F3  120A  118A  	fcall	_spiWrite
  1082  0615                     l2292:
  1083                           
  1084                           ;lab3.c: 75:     SPBRGH = 1;
  1085  0615  120A  118A  23EA  120A  118A  	fcall	_spiRead
  1086  061A  1283               	bcf	3,5	;RP0=0, select bank0
  1087  061B  1303               	bcf	3,6	;RP1=0, select bank0
  1088  061C  00E9               	movwf	??_main
  1089  061D  0869               	movf	??_main,w
  1090  061E  1683               	bsf	3,5	;RP0=1, select bank1
  1091  061F  1303               	bcf	3,6	;RP1=0, select bank1
  1092  0620  00A9               	movwf	_pot1^(0+128)
  1093  0621                     l2294:
  1094                           
  1095                           ;lab3.c: 76:     RCSTAbits.SPEN = 1;
  1096  0621  30C7               	movlw	199
  1097  0622  1283               	bcf	3,5	;RP0=0, select bank0
  1098  0623  1303               	bcf	3,6	;RP1=0, select bank0
  1099  0624  00E9               	movwf	??_main
  1100  0625                     u1797:
  1101  0625  2E26               	nop2
  1102  0626  0BE9               	decfsz	??_main,f
  1103  0627  2E25               	goto	u1797
  1104  0628  2E29               	nop2
  1105                           
  1106                           ;lab3.c: 77:     RCSTAbits.RX9 = 0;
  1107  0629  300A               	movlw	10
  1108  062A  120A  158A  27F3  120A  118A  	fcall	_spiWrite
  1109                           
  1110                           ;lab3.c: 78:     RCSTAbits.CREN = 1;
  1111  062F  120A  118A  23EA  120A  118A  	fcall	_spiRead
  1112  0634  1283               	bcf	3,5	;RP0=0, select bank0
  1113  0635  1303               	bcf	3,6	;RP1=0, select bank0
  1114  0636  00E9               	movwf	??_main
  1115  0637  0869               	movf	??_main,w
  1116  0638  1683               	bsf	3,5	;RP0=1, select bank1
  1117  0639  1303               	bcf	3,6	;RP1=0, select bank1
  1118  063A  00A8               	movwf	_pot2^(0+128)
  1119  063B                     l2296:
  1120                           
  1121                           ;lab3.c: 79:     TXSTAbits.TX9 = 0;
  1122  063B  30C7               	movlw	199
  1123  063C  1283               	bcf	3,5	;RP0=0, select bank0
  1124  063D  1303               	bcf	3,6	;RP1=0, select bank0
  1125  063E  00E9               	movwf	??_main
  1126  063F                     u1807:
  1127  063F  2E40               	nop2
  1128  0640  0BE9               	decfsz	??_main,f
  1129  0641  2E3F               	goto	u1807
  1130  0642  2E43               	nop2
  1131  0643                     l2298:
  1132                           
  1133                           ;lab3.c: 82:     PIR1bits.TXIF = 0;
  1134  0643  30C7               	movlw	199
  1135  0644  1283               	bcf	3,5	;RP0=0, select bank0
  1136  0645  1303               	bcf	3,6	;RP1=0, select bank0
  1137  0646  00E9               	movwf	??_main
  1138  0647                     u1817:
  1139  0647  2E48               	nop2
  1140  0648  0BE9               	decfsz	??_main,f
  1141  0649  2E47               	goto	u1817
  1142  064A  2E4B               	nop2
  1143  064B                     l2300:
  1144                           
  1145                           ;lab3.c: 83:     OSCCONbits.IRCF0 = 0;
  1146  064B  1283               	bcf	3,5	;RP0=0, select bank0
  1147  064C  1303               	bcf	3,6	;RP1=0, select bank0
  1148  064D  1507               	bsf	7,2	;volatile
  1149  064E                     l2302:
  1150                           
  1151                           ;lab3.c: 84:     OSCCONbits.IRCF1 = 1;
  1152  064E  120A  118A  202F  120A  118A  	fcall	_mensaje
  1153  0653                     l2304:
  1154                           
  1155                           ;lab3.c: 86:     OSCCONbits.SCS = 1;
  1156  0653  1683               	bsf	3,5	;RP0=1, select bank1
  1157  0654  1303               	bcf	3,6	;RP1=0, select bank1
  1158  0655  0820               	movf	_full^(0+128),w
  1159  0656  1283               	bcf	3,5	;RP0=0, select bank0
  1160  0657  1303               	bcf	3,6	;RP1=0, select bank0
  1161  0658  0086               	movwf	6	;volatile
  1162  0659  2E04               	goto	l2286
  1163  065A  120A  118A  280C   	ljmp	start
  1164  065D                     __end_of_main:
  1165                           
  1166                           	psect	text1
  1167  0FF3                     __ptext1:	
  1168 ;; *************** function _spiWrite *****************
  1169 ;; Defined at:
  1170 ;;		line 32 in file "spi.c"
  1171 ;; Parameters:    Size  Location     Type
  1172 ;;  dat             1    wreg     unsigned char 
  1173 ;; Auto vars:     Size  Location     Type
  1174 ;;  dat             1    2[COMMON] unsigned char 
  1175 ;; Return value:  Size  Location     Type
  1176 ;;                  1    wreg      void 
  1177 ;; Registers used:
  1178 ;;		wreg
  1179 ;; Tracked objects:
  1180 ;;		On entry : 0/0
  1181 ;;		On exit  : 0/0
  1182 ;;		Unchanged: 0/0
  1183 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  1184 ;;      Params:         0       0       0       0       0
  1185 ;;      Locals:         1       0       0       0       0
  1186 ;;      Temps:          0       0       0       0       0
  1187 ;;      Totals:         1       0       0       0       0
  1188 ;;Total ram usage:        1 bytes
  1189 ;; Hardware stack levels used: 1
  1190 ;; Hardware stack levels required when called: 1
  1191 ;; This function calls:
  1192 ;;		Nothing
  1193 ;; This function is called by:
  1194 ;;		_main
  1195 ;; This function uses a non-reentrant model
  1196 ;;
  1197                           
  1198                           
  1199                           ;psect for function _spiWrite
  1200  0FF3                     _spiWrite:
  1201                           
  1202                           ;incstack = 0
  1203                           ; Regs used in _spiWrite: [wreg]
  1204                           ;spiWrite@dat stored from wreg
  1205  0FF3  00F2               	movwf	spiWrite@dat
  1206  0FF4                     l1790:
  1207                           
  1208                           ;spi.c: 32: void spiWrite(char dat);spi.c: 33: {;spi.c: 34:     SSPBUF = dat;
  1209  0FF4  0872               	movf	spiWrite@dat,w
  1210  0FF5  1283               	bcf	3,5	;RP0=0, select bank0
  1211  0FF6  1303               	bcf	3,6	;RP1=0, select bank0
  1212  0FF7  0093               	movwf	19	;volatile
  1213  0FF8                     l41:
  1214  0FF8  0008               	return
  1215  0FF9                     __end_of_spiWrite:
  1216                           
  1217                           	psect	text2
  1218  03EA                     __ptext2:	
  1219 ;; *************** function _spiRead *****************
  1220 ;; Defined at:
  1221 ;;		line 45 in file "spi.c"
  1222 ;; Parameters:    Size  Location     Type
  1223 ;;		None
  1224 ;; Auto vars:     Size  Location     Type
  1225 ;;		None
  1226 ;; Return value:  Size  Location     Type
  1227 ;;                  1    wreg      unsigned char 
  1228 ;; Registers used:
  1229 ;;		wreg, status,2, status,0, pclath, cstack
  1230 ;; Tracked objects:
  1231 ;;		On entry : 0/0
  1232 ;;		On exit  : 0/0
  1233 ;;		Unchanged: 0/0
  1234 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  1235 ;;      Params:         0       0       0       0       0
  1236 ;;      Locals:         0       0       0       0       0
  1237 ;;      Temps:          0       0       0       0       0
  1238 ;;      Totals:         0       0       0       0       0
  1239 ;;Total ram usage:        0 bytes
  1240 ;; Hardware stack levels used: 1
  1241 ;; Hardware stack levels required when called: 2
  1242 ;; This function calls:
  1243 ;;		_spiReceiveWait
  1244 ;; This function is called by:
  1245 ;;		_main
  1246 ;; This function uses a non-reentrant model
  1247 ;;
  1248                           
  1249                           
  1250                           ;psect for function _spiRead
  1251  03EA                     _spiRead:
  1252  03EA                     l1792:	
  1253                           ;incstack = 0
  1254                           ; Regs used in _spiRead: [wreg+status,2+status,0+pclath+cstack]
  1255                           
  1256                           
  1257                           ;spi.c: 47:     spiReceiveWait();
  1258  03EA  120A  118A  27F9  120A  118A  	fcall	_spiReceiveWait
  1259  03EF                     l1794:
  1260                           
  1261                           ;spi.c: 48:     return(SSPBUF);
  1262  03EF  1283               	bcf	3,5	;RP0=0, select bank0
  1263  03F0  1303               	bcf	3,6	;RP1=0, select bank0
  1264  03F1  0813               	movf	19,w	;volatile
  1265  03F2                     l49:
  1266  03F2  0008               	return
  1267  03F3                     __end_of_spiRead:
  1268                           
  1269                           	psect	text3
  1270  07F9                     __ptext3:	
  1271 ;; *************** function _spiReceiveWait *****************
  1272 ;; Defined at:
  1273 ;;		line 27 in file "spi.c"
  1274 ;; Parameters:    Size  Location     Type
  1275 ;;		None
  1276 ;; Auto vars:     Size  Location     Type
  1277 ;;		None
  1278 ;; Return value:  Size  Location     Type
  1279 ;;                  1    wreg      void 
  1280 ;; Registers used:
  1281 ;;		None
  1282 ;; Tracked objects:
  1283 ;;		On entry : 0/0
  1284 ;;		On exit  : 0/0
  1285 ;;		Unchanged: 0/0
  1286 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  1287 ;;      Params:         0       0       0       0       0
  1288 ;;      Locals:         0       0       0       0       0
  1289 ;;      Temps:          0       0       0       0       0
  1290 ;;      Totals:         0       0       0       0       0
  1291 ;;Total ram usage:        0 bytes
  1292 ;; Hardware stack levels used: 1
  1293 ;; Hardware stack levels required when called: 1
  1294 ;; This function calls:
  1295 ;;		Nothing
  1296 ;; This function is called by:
  1297 ;;		_spiRead
  1298 ;; This function uses a non-reentrant model
  1299 ;;
  1300                           
  1301                           
  1302                           ;psect for function _spiReceiveWait
  1303  07F9                     _spiReceiveWait:
  1304  07F9                     l1760:	
  1305                           ;incstack = 0
  1306                           ; Regs used in _spiReceiveWait: []
  1307                           
  1308  07F9                     l35:	
  1309                           ;spi.c: 29:     while ( !SSPSTATbits.BF );
  1310                           
  1311  07F9  1683               	bsf	3,5	;RP0=1, select bank1
  1312  07FA  1303               	bcf	3,6	;RP1=0, select bank1
  1313  07FB  1C14               	btfss	20,0	;volatile
  1314  07FC  2FFE               	goto	u1271
  1315  07FD  2FFF               	goto	u1270
  1316  07FE                     u1271:
  1317  07FE  2FF9               	goto	l35
  1318  07FF                     u1270:
  1319  07FF                     l38:
  1320  07FF  0008               	return
  1321  0800                     __end_of_spiReceiveWait:
  1322                           
  1323                           	psect	text4
  1324  0773                     __ptext4:	
  1325 ;; *************** function _setup *****************
  1326 ;; Defined at:
  1327 ;;		line 91 in file "lab3.c"
  1328 ;; Parameters:    Size  Location     Type
  1329 ;;		None
  1330 ;; Auto vars:     Size  Location     Type
  1331 ;;		None
  1332 ;; Return value:  Size  Location     Type
  1333 ;;                  1    wreg      void 
  1334 ;; Registers used:
  1335 ;;		wreg, status,2, status,0, pclath, cstack
  1336 ;; Tracked objects:
  1337 ;;		On entry : 0/0
  1338 ;;		On exit  : 0/0
  1339 ;;		Unchanged: 0/0
  1340 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  1341 ;;      Params:         0       0       0       0       0
  1342 ;;      Locals:         0       0       0       0       0
  1343 ;;      Temps:          0       0       0       0       0
  1344 ;;      Totals:         0       0       0       0       0
  1345 ;;Total ram usage:        0 bytes
  1346 ;; Hardware stack levels used: 1
  1347 ;; Hardware stack levels required when called: 2
  1348 ;; This function calls:
  1349 ;;		_spiInit
  1350 ;; This function is called by:
  1351 ;;		_main
  1352 ;; This function uses a non-reentrant model
  1353 ;;
  1354                           
  1355                           
  1356                           ;psect for function _setup
  1357  0773                     _setup:
  1358  0773                     l1798:	
  1359                           ;incstack = 0
  1360                           ; Regs used in _setup: [wreg+status,2+status,0+pclath+cstack]
  1361                           
  1362                           
  1363                           ;lab3.c: 93:     units = residuo%10;
  1364  0773  1683               	bsf	3,5	;RP0=1, select bank3
  1365  0774  1703               	bsf	3,6	;RP1=1, select bank3
  1366  0775  0188               	clrf	8	;volatile
  1367                           
  1368                           ;lab3.c: 94:     hundreds = hundreds + 48;
  1369  0776  0189               	clrf	9	;volatile
  1370  0777                     l1800:
  1371                           
  1372                           ;lab3.c: 95:     tens = tens + 48;
  1373  0777  1683               	bsf	3,5	;RP0=1, select bank1
  1374  0778  1303               	bcf	3,6	;RP1=0, select bank1
  1375  0779  1107               	bcf	7,2	;volatile
  1376                           
  1377                           ;lab3.c: 96:     units = units + 48;
  1378  077A  0186               	clrf	6	;volatile
  1379                           
  1380                           ;lab3.c: 97: }
  1381  077B  1283               	bcf	3,5	;RP0=0, select bank0
  1382  077C  1303               	bcf	3,6	;RP1=0, select bank0
  1383  077D  0186               	clrf	6	;volatile
  1384                           
  1385                           ;lab3.c: 98: 
  1386  077E  0187               	clrf	7	;volatile
  1387                           
  1388                           ;lab3.c: 99: void mensaje (void){
  1389  077F  0188               	clrf	8	;volatile
  1390  0780                     l1802:
  1391                           
  1392                           ;lab3.c: 100:     division(pot1);
  1393  0780  1507               	bsf	7,2	;volatile
  1394  0781                     l1804:
  1395                           
  1396                           ;lab3.c: 101:     _delay((unsigned long)((250)*(4000000/4000.0)));
  1397  0781  01F2               	clrf	spiInit@sDataSample
  1398  0782  01F3               	clrf	spiInit@sClockIdle
  1399  0783  01F4               	clrf	spiInit@sTransmitEdge
  1400  0784  3020               	movlw	32
  1401  0785  120A  118A  23C2  120A  118A  	fcall	_spiInit
  1402  078A                     l1806:
  1403                           
  1404                           ;lab3.c: 105:     _delay((unsigned long)((250)*(4000000/4000.0)));
  1405  078A  1683               	bsf	3,5	;RP0=1, select bank1
  1406  078B  1303               	bcf	3,6	;RP1=0, select bank1
  1407  078C  1218               	bcf	24,4	;volatile
  1408  078D                     l1808:
  1409                           
  1410                           ;lab3.c: 106:     TXREG = hundreds;
  1411  078D  1518               	bsf	24,2	;volatile
  1412  078E                     l1810:
  1413                           
  1414                           ;lab3.c: 107:     _delay((unsigned long)((250)*(4000000/4000.0)));
  1415  078E  1683               	bsf	3,5	;RP0=1, select bank3
  1416  078F  1703               	bsf	3,6	;RP1=1, select bank3
  1417  0790  1187               	bcf	7,3	;volatile
  1418  0791                     l1812:
  1419                           
  1420                           ;lab3.c: 108:     TXREG = 46;
  1421  0791  3019               	movlw	25
  1422  0792  1683               	bsf	3,5	;RP0=1, select bank1
  1423  0793  1303               	bcf	3,6	;RP1=0, select bank1
  1424  0794  0099               	movwf	25	;volatile
  1425  0795                     l1814:
  1426                           
  1427                           ;lab3.c: 109:     _delay((unsigned long)((250)*(4000000/4000.0)));
  1428  0795  3001               	movlw	1
  1429  0796  009A               	movwf	26	;volatile
  1430  0797                     l1816:
  1431                           
  1432                           ;lab3.c: 110:     TXREG = tens;
  1433  0797  1283               	bcf	3,5	;RP0=0, select bank0
  1434  0798  1303               	bcf	3,6	;RP1=0, select bank0
  1435  0799  1798               	bsf	24,7	;volatile
  1436  079A                     l1818:
  1437                           
  1438                           ;lab3.c: 111:     _delay((unsigned long)((250)*(4000000/4000.0)));
  1439  079A  1318               	bcf	24,6	;volatile
  1440  079B                     l1820:
  1441                           
  1442                           ;lab3.c: 112:     TXREG = units;
  1443  079B  1618               	bsf	24,4	;volatile
  1444  079C                     l1822:
  1445                           
  1446                           ;lab3.c: 113:     _delay((unsigned long)((250)*(4000000/4000.0)));
  1447  079C  1683               	bsf	3,5	;RP0=1, select bank1
  1448  079D  1303               	bcf	3,6	;RP1=0, select bank1
  1449  079E  1318               	bcf	24,6	;volatile
  1450  079F                     l1824:
  1451                           
  1452                           ;lab3.c: 114:     printf(" V");
  1453  079F  1698               	bsf	24,5	;volatile
  1454  07A0                     l1826:
  1455                           
  1456                           ;lab3.c: 115:     _delay((unsigned long)((250)*(4000000/4000.0)));
  1457  07A0  1283               	bcf	3,5	;RP0=0, select bank0
  1458  07A1  1303               	bcf	3,6	;RP1=0, select bank0
  1459  07A2  128C               	bcf	12,5	;volatile
  1460  07A3                     l1828:
  1461                           
  1462                           ;lab3.c: 116:     printf("\r");
  1463  07A3  120C               	bcf	12,4	;volatile
  1464  07A4                     l1830:
  1465                           
  1466                           ;lab3.c: 117: 
  1467  07A4  1683               	bsf	3,5	;RP0=1, select bank1
  1468  07A5  1303               	bcf	3,6	;RP1=0, select bank1
  1469  07A6  120F               	bcf	15,4	;volatile
  1470  07A7                     l1832:
  1471                           
  1472                           ;lab3.c: 118:     division(pot2);
  1473  07A7  168F               	bsf	15,5	;volatile
  1474  07A8                     l1834:
  1475                           
  1476                           ;lab3.c: 119:     _delay((unsigned long)((250)*(4000000/4000.0)));
  1477  07A8  170F               	bsf	15,6	;volatile
  1478  07A9                     l1836:
  1479                           
  1480                           ;lab3.c: 120:     printf("\r VALOR DEL POTENCIOEMTRO 2: \r");
  1481  07A9  140F               	bsf	15,0	;volatile
  1482  07AA                     l151:
  1483  07AA  0008               	return
  1484  07AB                     __end_of_setup:
  1485                           
  1486                           	psect	text5
  1487  03C2                     __ptext5:	
  1488 ;; *************** function _spiInit *****************
  1489 ;; Defined at:
  1490 ;;		line 10 in file "spi.c"
  1491 ;; Parameters:    Size  Location     Type
  1492 ;;  sType           1    wreg     enum E1264
  1493 ;;  sDataSample     1    2[COMMON] enum E1272
  1494 ;;  sClockIdle      1    3[COMMON] enum E1276
  1495 ;;  sTransmitEdg    1    4[COMMON] enum E1280
  1496 ;; Auto vars:     Size  Location     Type
  1497 ;;  sType           1    5[COMMON] enum E1264
  1498 ;; Return value:  Size  Location     Type
  1499 ;;                  1    wreg      void 
  1500 ;; Registers used:
  1501 ;;		wreg, status,2, status,0
  1502 ;; Tracked objects:
  1503 ;;		On entry : 0/0
  1504 ;;		On exit  : 0/0
  1505 ;;		Unchanged: 0/0
  1506 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  1507 ;;      Params:         3       0       0       0       0
  1508 ;;      Locals:         1       0       0       0       0
  1509 ;;      Temps:          0       0       0       0       0
  1510 ;;      Totals:         4       0       0       0       0
  1511 ;;Total ram usage:        4 bytes
  1512 ;; Hardware stack levels used: 1
  1513 ;; Hardware stack levels required when called: 1
  1514 ;; This function calls:
  1515 ;;		Nothing
  1516 ;; This function is called by:
  1517 ;;		_setup
  1518 ;; This function uses a non-reentrant model
  1519 ;;
  1520                           
  1521                           
  1522                           ;psect for function _spiInit
  1523  03C2                     _spiInit:
  1524                           
  1525                           ;incstack = 0
  1526                           ; Regs used in _spiInit: [wreg+status,2+status,0]
  1527                           ;spiInit@sType stored from wreg
  1528  03C2  00F5               	movwf	spiInit@sType
  1529  03C3                     l1750:
  1530                           
  1531                           ;spi.c: 10: void spiInit(Spi_Type sType, Spi_Data_Sample sDataSample, Spi_Clock_Idle sCl
      +                          ockIdle, Spi_Transmit_Edge sTransmitEdge);spi.c: 11: {;spi.c: 12:     TRISC5 = 0;
  1532  03C3  1683               	bsf	3,5	;RP0=1, select bank1
  1533  03C4  1303               	bcf	3,6	;RP1=0, select bank1
  1534  03C5  1287               	bcf	7,5	;volatile
  1535                           
  1536                           ;spi.c: 13:     if(sType & 0b00000100)
  1537  03C6  1D75               	btfss	spiInit@sType,2
  1538  03C7  2BC9               	goto	u1261
  1539  03C8  2BCA               	goto	u1260
  1540  03C9                     u1261:
  1541  03C9  2BCE               	goto	l1756
  1542  03CA                     u1260:
  1543  03CA                     l1752:
  1544                           
  1545                           ;spi.c: 14:     {;spi.c: 15:         SSPSTAT = sTransmitEdge;
  1546  03CA  0874               	movf	spiInit@sTransmitEdge,w
  1547  03CB  0094               	movwf	20	;volatile
  1548  03CC                     l1754:
  1549                           
  1550                           ;spi.c: 16:         TRISC3 = 1;
  1551  03CC  1587               	bsf	7,3	;volatile
  1552                           
  1553                           ;spi.c: 17:     }
  1554  03CD  2BD2               	goto	l31
  1555  03CE                     l1756:
  1556                           
  1557                           ;spi.c: 19:     {;spi.c: 20:         SSPSTAT = sDataSample | sTransmitEdge;
  1558  03CE  0872               	movf	spiInit@sDataSample,w
  1559  03CF  0474               	iorwf	spiInit@sTransmitEdge,w
  1560  03D0  0094               	movwf	20	;volatile
  1561  03D1                     l1758:
  1562                           
  1563                           ;spi.c: 21:         TRISC3 = 0;
  1564  03D1  1187               	bcf	7,3	;volatile
  1565  03D2                     l31:	
  1566                           ;spi.c: 22:     }
  1567                           
  1568                           
  1569                           ;spi.c: 24:     SSPCON = sType | sClockIdle;
  1570  03D2  0875               	movf	spiInit@sType,w
  1571  03D3  0473               	iorwf	spiInit@sClockIdle,w
  1572  03D4  1283               	bcf	3,5	;RP0=0, select bank0
  1573  03D5  1303               	bcf	3,6	;RP1=0, select bank0
  1574  03D6  0094               	movwf	20	;volatile
  1575  03D7                     l32:
  1576  03D7  0008               	return
  1577  03D8                     __end_of_spiInit:
  1578                           
  1579                           	psect	text6
  1580  002F                     __ptext6:	
  1581 ;; *************** function _mensaje *****************
  1582 ;; Defined at:
  1583 ;;		line 133 in file "lab3.c"
  1584 ;; Parameters:    Size  Location     Type
  1585 ;;		None
  1586 ;; Auto vars:     Size  Location     Type
  1587 ;;		None
  1588 ;; Return value:  Size  Location     Type
  1589 ;;                  1    wreg      void 
  1590 ;; Registers used:
  1591 ;;		wreg, fsr0l, fsr0h, status,2, status,0, btemp+1, pclath, cstack
  1592 ;; Tracked objects:
  1593 ;;		On entry : 0/0
  1594 ;;		On exit  : 0/0
  1595 ;;		Unchanged: 0/0
  1596 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  1597 ;;      Params:         0       0       0       0       0
  1598 ;;      Locals:         0       0       0       0       0
  1599 ;;      Temps:          0       0       5       0       0
  1600 ;;      Totals:         0       0       5       0       0
  1601 ;;Total ram usage:        5 bytes
  1602 ;; Hardware stack levels used: 1
  1603 ;; Hardware stack levels required when called: 5
  1604 ;; This function calls:
  1605 ;;		_concat
  1606 ;;		_division
  1607 ;;		_printf
  1608 ;; This function is called by:
  1609 ;;		_main
  1610 ;; This function uses a non-reentrant model
  1611 ;;
  1612                           
  1613                           
  1614                           ;psect for function _mensaje
  1615  002F                     _mensaje:
  1616  002F                     l2188:	
  1617                           ;incstack = 0
  1618                           ; Regs used in _mensaje: [wreg-fsr0h+status,2+status,0+btemp+1+pclath+cstack]
  1619                           
  1620                           
  1621                           ;lab3.c: 134:     printf("\r");
  1622  002F  1683               	bsf	3,5	;RP0=1, select bank1
  1623  0030  1303               	bcf	3,6	;RP1=0, select bank1
  1624  0031  0829               	movf	_pot1^(0+128),w
  1625  0032  120A  118A  252B  120A  118A  	fcall	_division
  1626  0037                     l2190:
  1627                           
  1628                           ;lab3.c: 135: 
  1629  0037  3002               	movlw	2
  1630  0038  1683               	bsf	3,5	;RP0=1, select bank1
  1631  0039  1303               	bcf	3,6	;RP1=0, select bank1
  1632  003A  00AC               	movwf	(??_mensaje^(0+128)+2)
  1633  003B  3045               	movlw	69
  1634  003C  00AB               	movwf	(??_mensaje^(0+128)+1)
  1635  003D  30A9               	movlw	169
  1636  003E  00AA               	movwf	??_mensaje^(0+128)
  1637  003F                     u1827:
  1638  003F  0BAA               	decfsz	??_mensaje^(0+128),f
  1639  0040  283F               	goto	u1827
  1640  0041  0BAB               	decfsz	(??_mensaje^(0+128)+1),f
  1641  0042  283F               	goto	u1827
  1642  0043  0BAC               	decfsz	(??_mensaje^(0+128)+2),f
  1643  0044  283F               	goto	u1827
  1644  0045                     l2192:
  1645                           
  1646                           ;lab3.c: 136:     printf("Ingresar Centena:\r");
  1647  0045  302A               	movlw	(low ((STR_1-__stringbase)| (0+32768)))& (0+255)
  1648  0046  120A  118A  23A7  120A  118A  	fcall	_printf
  1649  004B                     l2194:
  1650                           
  1651                           ;lab3.c: 137:       defensa1:
  1652  004B  3002               	movlw	2
  1653  004C  1683               	bsf	3,5	;RP0=1, select bank1
  1654  004D  1303               	bcf	3,6	;RP1=0, select bank1
  1655  004E  00AC               	movwf	(??_mensaje^(0+128)+2)
  1656  004F  3045               	movlw	69
  1657  0050  00AB               	movwf	(??_mensaje^(0+128)+1)
  1658  0051  30A9               	movlw	169
  1659  0052  00AA               	movwf	??_mensaje^(0+128)
  1660  0053                     u1837:
  1661  0053  0BAA               	decfsz	??_mensaje^(0+128),f
  1662  0054  2853               	goto	u1837
  1663  0055  0BAB               	decfsz	(??_mensaje^(0+128)+1),f
  1664  0056  2853               	goto	u1837
  1665  0057  0BAC               	decfsz	(??_mensaje^(0+128)+2),f
  1666  0058  2853               	goto	u1837
  1667  0059                     l2196:
  1668                           
  1669                           ;lab3.c: 138:        while(RCIF == 0);
  1670  0059  309D               	movlw	(low ((STR_2-__stringbase)| (0+32768)))& (0+255)
  1671  005A  120A  118A  23A7  120A  118A  	fcall	_printf
  1672  005F                     l2198:
  1673                           
  1674                           ;lab3.c: 139:         cen = RCREG -48;
  1675  005F  3002               	movlw	2
  1676  0060  1683               	bsf	3,5	;RP0=1, select bank1
  1677  0061  1303               	bcf	3,6	;RP1=0, select bank1
  1678  0062  00AC               	movwf	(??_mensaje^(0+128)+2)
  1679  0063  3045               	movlw	69
  1680  0064  00AB               	movwf	(??_mensaje^(0+128)+1)
  1681  0065  30A9               	movlw	169
  1682  0066  00AA               	movwf	??_mensaje^(0+128)
  1683  0067                     u1847:
  1684  0067  0BAA               	decfsz	??_mensaje^(0+128),f
  1685  0068  2867               	goto	u1847
  1686  0069  0BAB               	decfsz	(??_mensaje^(0+128)+1),f
  1687  006A  2867               	goto	u1847
  1688  006B  0BAC               	decfsz	(??_mensaje^(0+128)+2),f
  1689  006C  2867               	goto	u1847
  1690  006D                     l2200:
  1691                           
  1692                           ;lab3.c: 140: 
  1693  006D  087B               	movf	_hundreds,w
  1694  006E  1283               	bcf	3,5	;RP0=0, select bank0
  1695  006F  1303               	bcf	3,6	;RP1=0, select bank0
  1696  0070  0099               	movwf	25	;volatile
  1697  0071                     l2202:
  1698                           
  1699                           ;lab3.c: 141:        while(RCREG > '2'){
  1700  0071  3002               	movlw	2
  1701  0072  1683               	bsf	3,5	;RP0=1, select bank1
  1702  0073  1303               	bcf	3,6	;RP1=0, select bank1
  1703  0074  00AC               	movwf	(??_mensaje^(0+128)+2)
  1704  0075  3045               	movlw	69
  1705  0076  00AB               	movwf	(??_mensaje^(0+128)+1)
  1706  0077  30A9               	movlw	169
  1707  0078  00AA               	movwf	??_mensaje^(0+128)
  1708  0079                     u1857:
  1709  0079  0BAA               	decfsz	??_mensaje^(0+128),f
  1710  007A  2879               	goto	u1857
  1711  007B  0BAB               	decfsz	(??_mensaje^(0+128)+1),f
  1712  007C  2879               	goto	u1857
  1713  007D  0BAC               	decfsz	(??_mensaje^(0+128)+2),f
  1714  007E  2879               	goto	u1857
  1715  007F                     l2204:
  1716                           
  1717                           ;lab3.c: 142:            goto defensa1;
  1718  007F  302E               	movlw	46
  1719  0080  1283               	bcf	3,5	;RP0=0, select bank0
  1720  0081  1303               	bcf	3,6	;RP1=0, select bank0
  1721  0082  0099               	movwf	25	;volatile
  1722  0083                     l2206:
  1723                           
  1724                           ;lab3.c: 143:        }
  1725  0083  3002               	movlw	2
  1726  0084  1683               	bsf	3,5	;RP0=1, select bank1
  1727  0085  1303               	bcf	3,6	;RP1=0, select bank1
  1728  0086  00AC               	movwf	(??_mensaje^(0+128)+2)
  1729  0087  3045               	movlw	69
  1730  0088  00AB               	movwf	(??_mensaje^(0+128)+1)
  1731  0089  30A9               	movlw	169
  1732  008A  00AA               	movwf	??_mensaje^(0+128)
  1733  008B                     u1867:
  1734  008B  0BAA               	decfsz	??_mensaje^(0+128),f
  1735  008C  288B               	goto	u1867
  1736  008D  0BAB               	decfsz	(??_mensaje^(0+128)+1),f
  1737  008E  288B               	goto	u1867
  1738  008F  0BAC               	decfsz	(??_mensaje^(0+128)+2),f
  1739  0090  288B               	goto	u1867
  1740  0091                     l2208:
  1741                           
  1742                           ;lab3.c: 144: 
  1743  0091  087A               	movf	_tens,w
  1744  0092  1283               	bcf	3,5	;RP0=0, select bank0
  1745  0093  1303               	bcf	3,6	;RP1=0, select bank0
  1746  0094  0099               	movwf	25	;volatile
  1747  0095                     l2210:
  1748                           
  1749                           ;lab3.c: 145:     printf("Ingresar Decenas: \r");
  1750  0095  3002               	movlw	2
  1751  0096  1683               	bsf	3,5	;RP0=1, select bank1
  1752  0097  1303               	bcf	3,6	;RP1=0, select bank1
  1753  0098  00AC               	movwf	(??_mensaje^(0+128)+2)
  1754  0099  3045               	movlw	69
  1755  009A  00AB               	movwf	(??_mensaje^(0+128)+1)
  1756  009B  30A9               	movlw	169
  1757  009C  00AA               	movwf	??_mensaje^(0+128)
  1758  009D                     u1877:
  1759  009D  0BAA               	decfsz	??_mensaje^(0+128),f
  1760  009E  289D               	goto	u1877
  1761  009F  0BAB               	decfsz	(??_mensaje^(0+128)+1),f
  1762  00A0  289D               	goto	u1877
  1763  00A1  0BAC               	decfsz	(??_mensaje^(0+128)+2),f
  1764  00A2  289D               	goto	u1877
  1765  00A3                     l2212:
  1766                           
  1767                           ;lab3.c: 146:       defensa2:
  1768  00A3  1283               	bcf	3,5	;RP0=0, select bank0
  1769  00A4  1303               	bcf	3,6	;RP1=0, select bank0
  1770  00A5  086C               	movf	_units,w
  1771  00A6  0099               	movwf	25	;volatile
  1772  00A7                     l2214:
  1773                           
  1774                           ;lab3.c: 147:         while(RCIF == 0);
  1775  00A7  3002               	movlw	2
  1776  00A8  1683               	bsf	3,5	;RP0=1, select bank1
  1777  00A9  1303               	bcf	3,6	;RP1=0, select bank1
  1778  00AA  00AC               	movwf	(??_mensaje^(0+128)+2)
  1779  00AB  3045               	movlw	69
  1780  00AC  00AB               	movwf	(??_mensaje^(0+128)+1)
  1781  00AD  30A9               	movlw	169
  1782  00AE  00AA               	movwf	??_mensaje^(0+128)
  1783  00AF                     u1887:
  1784  00AF  0BAA               	decfsz	??_mensaje^(0+128),f
  1785  00B0  28AF               	goto	u1887
  1786  00B1  0BAB               	decfsz	(??_mensaje^(0+128)+1),f
  1787  00B2  28AF               	goto	u1887
  1788  00B3  0BAC               	decfsz	(??_mensaje^(0+128)+2),f
  1789  00B4  28AF               	goto	u1887
  1790  00B5                     l2216:
  1791                           
  1792                           ;lab3.c: 148:          dec = RCREG -48;
  1793  00B5  30A0               	movlw	(low ((STR_3-__stringbase)| (0+32768)))& (0+255)
  1794  00B6  120A  118A  23A7  120A  118A  	fcall	_printf
  1795  00BB                     l2218:
  1796                           
  1797                           ;lab3.c: 149: 
  1798  00BB  3002               	movlw	2
  1799  00BC  1683               	bsf	3,5	;RP0=1, select bank1
  1800  00BD  1303               	bcf	3,6	;RP1=0, select bank1
  1801  00BE  00AC               	movwf	(??_mensaje^(0+128)+2)
  1802  00BF  3045               	movlw	69
  1803  00C0  00AB               	movwf	(??_mensaje^(0+128)+1)
  1804  00C1  30A9               	movlw	169
  1805  00C2  00AA               	movwf	??_mensaje^(0+128)
  1806  00C3                     u1897:
  1807  00C3  0BAA               	decfsz	??_mensaje^(0+128),f
  1808  00C4  28C3               	goto	u1897
  1809  00C5  0BAB               	decfsz	(??_mensaje^(0+128)+1),f
  1810  00C6  28C3               	goto	u1897
  1811  00C7  0BAC               	decfsz	(??_mensaje^(0+128)+2),f
  1812  00C8  28C3               	goto	u1897
  1813  00C9                     l2220:
  1814                           
  1815                           ;lab3.c: 150:         if(cen == 2){
  1816  00C9  3028               	movlw	(low (((STR_5+29)-__stringbase)| (0+32768)))& (0+255)
  1817  00CA  120A  118A  23A7  120A  118A  	fcall	_printf
  1818                           
  1819                           ;lab3.c: 152:                goto defensa2;
  1820  00CF  1683               	bsf	3,5	;RP0=1, select bank1
  1821  00D0  1303               	bcf	3,6	;RP1=0, select bank1
  1822  00D1  0828               	movf	_pot2^(0+128),w
  1823  00D2  120A  118A  252B  120A  118A  	fcall	_division
  1824  00D7                     l2222:
  1825                           
  1826                           ;lab3.c: 153:            }
  1827  00D7  3002               	movlw	2
  1828  00D8  1683               	bsf	3,5	;RP0=1, select bank1
  1829  00D9  1303               	bcf	3,6	;RP1=0, select bank1
  1830  00DA  00AC               	movwf	(??_mensaje^(0+128)+2)
  1831  00DB  3045               	movlw	69
  1832  00DC  00AB               	movwf	(??_mensaje^(0+128)+1)
  1833  00DD  30A9               	movlw	169
  1834  00DE  00AA               	movwf	??_mensaje^(0+128)
  1835  00DF                     u1907:
  1836  00DF  0BAA               	decfsz	??_mensaje^(0+128),f
  1837  00E0  28DF               	goto	u1907
  1838  00E1  0BAB               	decfsz	(??_mensaje^(0+128)+1),f
  1839  00E2  28DF               	goto	u1907
  1840  00E3  0BAC               	decfsz	(??_mensaje^(0+128)+2),f
  1841  00E4  28DF               	goto	u1907
  1842  00E5                     l2224:
  1843                           
  1844                           ;lab3.c: 154:        }
  1845  00E5  300B               	movlw	(low ((STR_5-__stringbase)| (0+32768)))& (0+255)
  1846  00E6  120A  118A  23A7  120A  118A  	fcall	_printf
  1847  00EB                     l2226:
  1848                           
  1849                           ;lab3.c: 155: 
  1850  00EB  3002               	movlw	2
  1851  00EC  1683               	bsf	3,5	;RP0=1, select bank1
  1852  00ED  1303               	bcf	3,6	;RP1=0, select bank1
  1853  00EE  00AC               	movwf	(??_mensaje^(0+128)+2)
  1854  00EF  3045               	movlw	69
  1855  00F0  00AB               	movwf	(??_mensaje^(0+128)+1)
  1856  00F1  30A9               	movlw	169
  1857  00F2  00AA               	movwf	??_mensaje^(0+128)
  1858  00F3                     u1917:
  1859  00F3  0BAA               	decfsz	??_mensaje^(0+128),f
  1860  00F4  28F3               	goto	u1917
  1861  00F5  0BAB               	decfsz	(??_mensaje^(0+128)+1),f
  1862  00F6  28F3               	goto	u1917
  1863  00F7  0BAC               	decfsz	(??_mensaje^(0+128)+2),f
  1864  00F8  28F3               	goto	u1917
  1865  00F9                     l2228:
  1866                           
  1867                           ;lab3.c: 156:     printf("Ingresar Unidades: \r");
  1868  00F9  309D               	movlw	(low ((STR_2-__stringbase)| (0+32768)))& (0+255)
  1869  00FA  120A  118A  23A7  120A  118A  	fcall	_printf
  1870  00FF                     l2230:
  1871                           
  1872                           ;lab3.c: 157:       defensa3:
  1873  00FF  3002               	movlw	2
  1874  0100  1683               	bsf	3,5	;RP0=1, select bank1
  1875  0101  1303               	bcf	3,6	;RP1=0, select bank1
  1876  0102  00AC               	movwf	(??_mensaje^(0+128)+2)
  1877  0103  3045               	movlw	69
  1878  0104  00AB               	movwf	(??_mensaje^(0+128)+1)
  1879  0105  30A9               	movlw	169
  1880  0106  00AA               	movwf	??_mensaje^(0+128)
  1881  0107                     u1927:
  1882  0107  0BAA               	decfsz	??_mensaje^(0+128),f
  1883  0108  2907               	goto	u1927
  1884  0109  0BAB               	decfsz	(??_mensaje^(0+128)+1),f
  1885  010A  2907               	goto	u1927
  1886  010B  0BAC               	decfsz	(??_mensaje^(0+128)+2),f
  1887  010C  2907               	goto	u1927
  1888  010D                     l2232:
  1889                           
  1890                           ;lab3.c: 158:        while(RCIF == 0);
  1891  010D  087B               	movf	_hundreds,w
  1892  010E  1283               	bcf	3,5	;RP0=0, select bank0
  1893  010F  1303               	bcf	3,6	;RP1=0, select bank0
  1894  0110  0099               	movwf	25	;volatile
  1895  0111                     l2234:
  1896                           
  1897                           ;lab3.c: 159:         uni = RCREG - 48;
  1898  0111  3002               	movlw	2
  1899  0112  1683               	bsf	3,5	;RP0=1, select bank1
  1900  0113  1303               	bcf	3,6	;RP1=0, select bank1
  1901  0114  00AC               	movwf	(??_mensaje^(0+128)+2)
  1902  0115  3045               	movlw	69
  1903  0116  00AB               	movwf	(??_mensaje^(0+128)+1)
  1904  0117  30A9               	movlw	169
  1905  0118  00AA               	movwf	??_mensaje^(0+128)
  1906  0119                     u1937:
  1907  0119  0BAA               	decfsz	??_mensaje^(0+128),f
  1908  011A  2919               	goto	u1937
  1909  011B  0BAB               	decfsz	(??_mensaje^(0+128)+1),f
  1910  011C  2919               	goto	u1937
  1911  011D  0BAC               	decfsz	(??_mensaje^(0+128)+2),f
  1912  011E  2919               	goto	u1937
  1913  011F                     l2236:
  1914                           
  1915                           ;lab3.c: 160: 
  1916  011F  302E               	movlw	46
  1917  0120  1283               	bcf	3,5	;RP0=0, select bank0
  1918  0121  1303               	bcf	3,6	;RP1=0, select bank0
  1919  0122  0099               	movwf	25	;volatile
  1920  0123                     l2238:
  1921                           
  1922                           ;lab3.c: 161:        if(cen == 2 && dec == 5){
  1923  0123  3002               	movlw	2
  1924  0124  1683               	bsf	3,5	;RP0=1, select bank1
  1925  0125  1303               	bcf	3,6	;RP1=0, select bank1
  1926  0126  00AC               	movwf	(??_mensaje^(0+128)+2)
  1927  0127  3045               	movlw	69
  1928  0128  00AB               	movwf	(??_mensaje^(0+128)+1)
  1929  0129  30A9               	movlw	169
  1930  012A  00AA               	movwf	??_mensaje^(0+128)
  1931  012B                     u1947:
  1932  012B  0BAA               	decfsz	??_mensaje^(0+128),f
  1933  012C  292B               	goto	u1947
  1934  012D  0BAB               	decfsz	(??_mensaje^(0+128)+1),f
  1935  012E  292B               	goto	u1947
  1936  012F  0BAC               	decfsz	(??_mensaje^(0+128)+2),f
  1937  0130  292B               	goto	u1947
  1938  0131                     l2240:
  1939                           
  1940                           ;lab3.c: 162:            while(RCREG > '5'){
  1941  0131  087A               	movf	_tens,w
  1942  0132  1283               	bcf	3,5	;RP0=0, select bank0
  1943  0133  1303               	bcf	3,6	;RP1=0, select bank0
  1944  0134  0099               	movwf	25	;volatile
  1945  0135                     l2242:
  1946                           
  1947                           ;lab3.c: 163:                goto defensa3;
  1948  0135  3002               	movlw	2
  1949  0136  1683               	bsf	3,5	;RP0=1, select bank1
  1950  0137  1303               	bcf	3,6	;RP1=0, select bank1
  1951  0138  00AC               	movwf	(??_mensaje^(0+128)+2)
  1952  0139  3045               	movlw	69
  1953  013A  00AB               	movwf	(??_mensaje^(0+128)+1)
  1954  013B  30A9               	movlw	169
  1955  013C  00AA               	movwf	??_mensaje^(0+128)
  1956  013D                     u1957:
  1957  013D  0BAA               	decfsz	??_mensaje^(0+128),f
  1958  013E  293D               	goto	u1957
  1959  013F  0BAB               	decfsz	(??_mensaje^(0+128)+1),f
  1960  0140  293D               	goto	u1957
  1961  0141  0BAC               	decfsz	(??_mensaje^(0+128)+2),f
  1962  0142  293D               	goto	u1957
  1963  0143                     l2244:
  1964                           
  1965                           ;lab3.c: 164:            }
  1966  0143  1283               	bcf	3,5	;RP0=0, select bank0
  1967  0144  1303               	bcf	3,6	;RP1=0, select bank0
  1968  0145  086C               	movf	_units,w
  1969  0146  0099               	movwf	25	;volatile
  1970  0147                     l2246:
  1971                           
  1972                           ;lab3.c: 165:        }
  1973  0147  3002               	movlw	2
  1974  0148  1683               	bsf	3,5	;RP0=1, select bank1
  1975  0149  1303               	bcf	3,6	;RP1=0, select bank1
  1976  014A  00AC               	movwf	(??_mensaje^(0+128)+2)
  1977  014B  3045               	movlw	69
  1978  014C  00AB               	movwf	(??_mensaje^(0+128)+1)
  1979  014D  30A9               	movlw	169
  1980  014E  00AA               	movwf	??_mensaje^(0+128)
  1981  014F                     u1967:
  1982  014F  0BAA               	decfsz	??_mensaje^(0+128),f
  1983  0150  294F               	goto	u1967
  1984  0151  0BAB               	decfsz	(??_mensaje^(0+128)+1),f
  1985  0152  294F               	goto	u1967
  1986  0153  0BAC               	decfsz	(??_mensaje^(0+128)+2),f
  1987  0154  294F               	goto	u1967
  1988  0155                     l2248:
  1989                           
  1990                           ;lab3.c: 166:       con = concat(cen, dec);
  1991  0155  30A0               	movlw	(low ((STR_3-__stringbase)| (0+32768)))& (0+255)
  1992  0156  120A  118A  23A7  120A  118A  	fcall	_printf
  1993  015B                     l2250:
  1994                           
  1995                           ;lab3.c: 167:       full = concat(con, uni);
  1996  015B  3002               	movlw	2
  1997  015C  1683               	bsf	3,5	;RP0=1, select bank1
  1998  015D  1303               	bcf	3,6	;RP1=0, select bank1
  1999  015E  00AC               	movwf	(??_mensaje^(0+128)+2)
  2000  015F  3045               	movlw	69
  2001  0160  00AB               	movwf	(??_mensaje^(0+128)+1)
  2002  0161  30A9               	movlw	169
  2003  0162  00AA               	movwf	??_mensaje^(0+128)
  2004  0163                     u1977:
  2005  0163  0BAA               	decfsz	??_mensaje^(0+128),f
  2006  0164  2963               	goto	u1977
  2007  0165  0BAB               	decfsz	(??_mensaje^(0+128)+1),f
  2008  0166  2963               	goto	u1977
  2009  0167  0BAC               	decfsz	(??_mensaje^(0+128)+2),f
  2010  0168  2963               	goto	u1977
  2011  0169                     l2252:
  2012                           
  2013                           ;lab3.c: 168:       _delay((unsigned long)((250)*(4000000/4000.0)));
  2014  0169  3028               	movlw	(low (((STR_5+29)-__stringbase)| (0+32768)))& (0+255)
  2015  016A  120A  118A  23A7  120A  118A  	fcall	_printf
  2016  016F                     l2254:
  2017                           
  2018                           ;lab3.c: 170: }
  2019  016F  308A               	movlw	(low ((STR_9-__stringbase)| (0+32768)))& (0+255)
  2020  0170  120A  118A  23A7  120A  118A  	fcall	_printf
  2021  0175                     l158:
  2022  0175  1283               	bcf	3,5	;RP0=0, select bank0
  2023  0176  1303               	bcf	3,6	;RP1=0, select bank0
  2024  0177  1E8C               	btfss	12,5	;volatile
  2025  0178  297A               	goto	u1691
  2026  0179  297B               	goto	u1690
  2027  017A                     u1691:
  2028  017A  2975               	goto	l158
  2029  017B                     u1690:
  2030  017B                     l2256:
  2031                           
  2032                           ;lab3.c: 173:     while(TXIF == 0);
  2033  017B  081A               	movf	26,w	;volatile
  2034  017C  3ED0               	addlw	208
  2035  017D  1683               	bsf	3,5	;RP0=1, select bank1
  2036  017E  1303               	bcf	3,6	;RP1=0, select bank1
  2037  017F  00AA               	movwf	??_mensaje^(0+128)
  2038  0180  082A               	movf	??_mensaje^(0+128),w
  2039  0181  1283               	bcf	3,5	;RP0=0, select bank0
  2040  0182  1303               	bcf	3,6	;RP1=0, select bank0
  2041  0183  00EA               	movwf	_cen
  2042  0184                     l2258:	
  2043                           ;lab3.c: 175:     return;
  2044                           
  2045                           
  2046                           ;lab3.c: 175:     return;
  2047  0184  3033               	movlw	51
  2048  0185  021A               	subwf	26,w	;volatile
  2049  0186  1803               	skipnc
  2050  0187  2989               	goto	u1701
  2051  0188  298A               	goto	u1700
  2052  0189                     u1701:
  2053  0189  2975               	goto	l158
  2054  018A                     u1700:
  2055  018A                     l2260:
  2056                           
  2057                           ;lab3.c: 179: {
  2058  018A  3076               	movlw	(low ((STR_10-__stringbase)| (0+32768)))& (0+255)
  2059  018B  120A  118A  23A7  120A  118A  	fcall	_printf
  2060  0190                     l165:
  2061  0190  1283               	bcf	3,5	;RP0=0, select bank0
  2062  0191  1303               	bcf	3,6	;RP1=0, select bank0
  2063  0192  1E8C               	btfss	12,5	;volatile
  2064  0193  2995               	goto	u1711
  2065  0194  2996               	goto	u1710
  2066  0195                     u1711:
  2067  0195  2990               	goto	l165
  2068  0196                     u1710:
  2069  0196                     l2262:
  2070                           
  2071                           ;lab3.c: 182:     sprintf(s1, "%d", a);
  2072  0196  081A               	movf	26,w	;volatile
  2073  0197  3ED0               	addlw	208
  2074  0198  1683               	bsf	3,5	;RP0=1, select bank1
  2075  0199  1303               	bcf	3,6	;RP1=0, select bank1
  2076  019A  00AA               	movwf	??_mensaje^(0+128)
  2077  019B  082A               	movf	??_mensaje^(0+128),w
  2078  019C  00A7               	movwf	_dec^(0+128)
  2079                           
  2080                           ;lab3.c: 184:     strcat(s1, s2);
  2081  019D  3002               	movlw	2
  2082  019E  1283               	bcf	3,5	;RP0=0, select bank0
  2083  019F  1303               	bcf	3,6	;RP1=0, select bank0
  2084  01A0  066A               	xorwf	_cen,w
  2085  01A1  1D03               	btfss	3,2
  2086  01A2  29A4               	goto	u1721
  2087  01A3  29A5               	goto	u1720
  2088  01A4                     u1721:
  2089  01A4  29AB               	goto	l2268
  2090  01A5                     u1720:
  2091  01A5                     l2266:
  2092                           
  2093                           ;lab3.c: 185:     int c = atoi(s1);
  2094  01A5  3036               	movlw	54
  2095  01A6  021A               	subwf	26,w	;volatile
  2096  01A7  1803               	skipnc
  2097  01A8  29AA               	goto	u1731
  2098  01A9  29AB               	goto	u1730
  2099  01AA                     u1731:
  2100  01AA  2990               	goto	l165
  2101  01AB                     u1730:
  2102  01AB                     l2268:
  2103  01AB  3061               	movlw	(low ((STR_11-__stringbase)| (0+32768)))& (0+255)
  2104  01AC  120A  118A  23A7  120A  118A  	fcall	_printf
  2105  01B1                     l173:
  2106  01B1  1283               	bcf	3,5	;RP0=0, select bank0
  2107  01B2  1303               	bcf	3,6	;RP1=0, select bank0
  2108  01B3  1E8C               	btfss	12,5	;volatile
  2109  01B4  29B6               	goto	u1741
  2110  01B5  29B7               	goto	u1740
  2111  01B6                     u1741:
  2112  01B6  29B1               	goto	l173
  2113  01B7                     u1740:
  2114  01B7                     l2270:
  2115  01B7  081A               	movf	26,w	;volatile
  2116  01B8  3ED0               	addlw	208
  2117  01B9  1683               	bsf	3,5	;RP0=1, select bank1
  2118  01BA  1303               	bcf	3,6	;RP1=0, select bank1
  2119  01BB  00AA               	movwf	??_mensaje^(0+128)
  2120  01BC  082A               	movf	??_mensaje^(0+128),w
  2121  01BD  00A6               	movwf	_uni^(0+128)
  2122  01BE  3002               	movlw	2
  2123  01BF  1283               	bcf	3,5	;RP0=0, select bank0
  2124  01C0  1303               	bcf	3,6	;RP1=0, select bank0
  2125  01C1  066A               	xorwf	_cen,w
  2126  01C2  1D03               	btfss	3,2
  2127  01C3  29C5               	goto	u1751
  2128  01C4  29C6               	goto	u1750
  2129  01C5                     u1751:
  2130  01C5  29D6               	goto	l2278
  2131  01C6                     u1750:
  2132  01C6                     l2272:
  2133  01C6  3005               	movlw	5
  2134  01C7  1683               	bsf	3,5	;RP0=1, select bank1
  2135  01C8  1303               	bcf	3,6	;RP1=0, select bank1
  2136  01C9  0627               	xorwf	_dec^(0+128),w
  2137  01CA  1D03               	btfss	3,2
  2138  01CB  29CD               	goto	u1761
  2139  01CC  29CE               	goto	u1760
  2140  01CD                     u1761:
  2141  01CD  29D6               	goto	l2278
  2142  01CE                     u1760:
  2143  01CE                     l2276:
  2144  01CE  3036               	movlw	54
  2145  01CF  1283               	bcf	3,5	;RP0=0, select bank0
  2146  01D0  1303               	bcf	3,6	;RP1=0, select bank0
  2147  01D1  021A               	subwf	26,w	;volatile
  2148  01D2  1803               	skipnc
  2149  01D3  29D5               	goto	u1771
  2150  01D4  29D6               	goto	u1770
  2151  01D5                     u1771:
  2152  01D5  29B1               	goto	l173
  2153  01D6                     u1770:
  2154  01D6                     l2278:
  2155  01D6  1283               	bcf	3,5	;RP0=0, select bank0
  2156  01D7  086A               	movf	_cen,w
  2157  01D8  1683               	bsf	3,5	;RP0=1, select bank1
  2158  01D9  1303               	bcf	3,6	;RP1=0, select bank1
  2159  01DA  00AA               	movwf	??_mensaje^(0+128)
  2160  01DB  01AB               	clrf	(??_mensaje^(0+128)+1)
  2161  01DC  082A               	movf	??_mensaje^(0+128),w
  2162  01DD  1283               	bcf	3,5	;RP0=0, select bank0
  2163  01DE  1303               	bcf	3,6	;RP1=0, select bank0
  2164  01DF  00BA               	movwf	concat@a
  2165  01E0  1683               	bsf	3,5	;RP0=1, select bank1
  2166  01E1  1303               	bcf	3,6	;RP1=0, select bank1
  2167  01E2  082B               	movf	(??_mensaje+1)^(0+128),w
  2168  01E3  1283               	bcf	3,5	;RP0=0, select bank0
  2169  01E4  1303               	bcf	3,6	;RP1=0, select bank0
  2170  01E5  00BB               	movwf	concat@a+1
  2171  01E6  1683               	bsf	3,5	;RP0=1, select bank1
  2172  01E7  1303               	bcf	3,6	;RP1=0, select bank1
  2173  01E8  0827               	movf	_dec^(0+128),w
  2174  01E9  00AC               	movwf	(??_mensaje+2)^(0+128)
  2175  01EA  01AD               	clrf	((??_mensaje+2)^(0+128)+1)
  2176  01EB  082C               	movf	(??_mensaje+2)^(0+128),w
  2177  01EC  1283               	bcf	3,5	;RP0=0, select bank0
  2178  01ED  1303               	bcf	3,6	;RP1=0, select bank0
  2179  01EE  00BC               	movwf	concat@b
  2180  01EF  1683               	bsf	3,5	;RP0=1, select bank1
  2181  01F0  1303               	bcf	3,6	;RP1=0, select bank1
  2182  01F1  082D               	movf	(??_mensaje+3)^(0+128),w
  2183  01F2  1283               	bcf	3,5	;RP0=0, select bank0
  2184  01F3  1303               	bcf	3,6	;RP1=0, select bank0
  2185  01F4  00BD               	movwf	concat@b+1
  2186  01F5  120A  118A  26FA  120A  118A  	fcall	_concat
  2187  01FA  1283               	bcf	3,5	;RP0=0, select bank0
  2188  01FB  1303               	bcf	3,6	;RP1=0, select bank0
  2189  01FC  083A               	movf	?_concat,w
  2190  01FD  1683               	bsf	3,5	;RP0=1, select bank1
  2191  01FE  1303               	bcf	3,6	;RP1=0, select bank1
  2192  01FF  00AE               	movwf	(??_mensaje+4)^(0+128)
  2193  0200  082E               	movf	(??_mensaje+4)^(0+128),w
  2194  0201  00A4               	movwf	_con^(0+128)
  2195  0202  0824               	movf	_con^(0+128),w
  2196  0203  00AA               	movwf	??_mensaje^(0+128)
  2197  0204  01AB               	clrf	(??_mensaje^(0+128)+1)
  2198  0205  082A               	movf	??_mensaje^(0+128),w
  2199  0206  1283               	bcf	3,5	;RP0=0, select bank0
  2200  0207  1303               	bcf	3,6	;RP1=0, select bank0
  2201  0208  00BA               	movwf	concat@a
  2202  0209  1683               	bsf	3,5	;RP0=1, select bank1
  2203  020A  1303               	bcf	3,6	;RP1=0, select bank1
  2204  020B  082B               	movf	(??_mensaje+1)^(0+128),w
  2205  020C  1283               	bcf	3,5	;RP0=0, select bank0
  2206  020D  1303               	bcf	3,6	;RP1=0, select bank0
  2207  020E  00BB               	movwf	concat@a+1
  2208  020F  1683               	bsf	3,5	;RP0=1, select bank1
  2209  0210  1303               	bcf	3,6	;RP1=0, select bank1
  2210  0211  0826               	movf	_uni^(0+128),w
  2211  0212  00AC               	movwf	(??_mensaje+2)^(0+128)
  2212  0213  01AD               	clrf	((??_mensaje+2)^(0+128)+1)
  2213  0214  082C               	movf	(??_mensaje+2)^(0+128),w
  2214  0215  1283               	bcf	3,5	;RP0=0, select bank0
  2215  0216  1303               	bcf	3,6	;RP1=0, select bank0
  2216  0217  00BC               	movwf	concat@b
  2217  0218  1683               	bsf	3,5	;RP0=1, select bank1
  2218  0219  1303               	bcf	3,6	;RP1=0, select bank1
  2219  021A  082D               	movf	(??_mensaje+3)^(0+128),w
  2220  021B  1283               	bcf	3,5	;RP0=0, select bank0
  2221  021C  1303               	bcf	3,6	;RP1=0, select bank0
  2222  021D  00BD               	movwf	concat@b+1
  2223  021E  120A  118A  26FA  120A  118A  	fcall	_concat
  2224  0223  1283               	bcf	3,5	;RP0=0, select bank0
  2225  0224  1303               	bcf	3,6	;RP1=0, select bank0
  2226  0225  083B               	movf	?_concat+1,w
  2227  0226  1683               	bsf	3,5	;RP0=1, select bank1
  2228  0227  1303               	bcf	3,6	;RP1=0, select bank1
  2229  0228  00A1               	movwf	(_full+1)^(0+128)
  2230  0229  1283               	bcf	3,5	;RP0=0, select bank0
  2231  022A  1303               	bcf	3,6	;RP1=0, select bank0
  2232  022B  083A               	movf	?_concat,w
  2233  022C  1683               	bsf	3,5	;RP0=1, select bank1
  2234  022D  1303               	bcf	3,6	;RP1=0, select bank1
  2235  022E  00A0               	movwf	_full^(0+128)
  2236  022F                     l2280:
  2237  022F  3002               	movlw	2
  2238  0230  1683               	bsf	3,5	;RP0=1, select bank1
  2239  0231  1303               	bcf	3,6	;RP1=0, select bank1
  2240  0232  00AC               	movwf	(??_mensaje^(0+128)+2)
  2241  0233  3045               	movlw	69
  2242  0234  00AB               	movwf	(??_mensaje^(0+128)+1)
  2243  0235  30A9               	movlw	169
  2244  0236  00AA               	movwf	??_mensaje^(0+128)
  2245  0237                     u1987:
  2246  0237  0BAA               	decfsz	??_mensaje^(0+128),f
  2247  0238  2A37               	goto	u1987
  2248  0239  0BAB               	decfsz	(??_mensaje^(0+128)+1),f
  2249  023A  2A37               	goto	u1987
  2250  023B  0BAC               	decfsz	(??_mensaje^(0+128)+2),f
  2251  023C  2A37               	goto	u1987
  2252  023D                     l2282:
  2253  023D  1683               	bsf	3,5	;RP0=1, select bank1
  2254  023E  1303               	bcf	3,6	;RP1=0, select bank1
  2255  023F  0821               	movf	(_full+1)^(0+128),w
  2256  0240  1283               	bcf	3,5	;RP0=0, select bank0
  2257  0241  1303               	bcf	3,6	;RP1=0, select bank0
  2258  0242  00B2               	movwf	?_printf+1
  2259  0243  1683               	bsf	3,5	;RP0=1, select bank1
  2260  0244  1303               	bcf	3,6	;RP1=0, select bank1
  2261  0245  0820               	movf	_full^(0+128),w
  2262  0246  1283               	bcf	3,5	;RP0=0, select bank0
  2263  0247  1303               	bcf	3,6	;RP1=0, select bank0
  2264  0248  00B1               	movwf	?_printf
  2265  0249  3048               	movlw	(low ((STR_12-__stringbase)| (0+32768)))& (0+255)
  2266  024A  120A  118A  23A7  120A  118A  	fcall	_printf
  2267  024F                     l180:
  2268  024F  0008               	return
  2269  0250                     __end_of_mensaje:
  2270                           
  2271                           	psect	text7
  2272  03A7                     __ptext7:	
  2273 ;; *************** function _printf *****************
  2274 ;; Defined at:
  2275 ;;		line 13 in file "C:\Program Files\Microchip\xc8\v2.32\pic\sources\c90\common\printf.c"
  2276 ;; Parameters:    Size  Location     Type
  2277 ;;  f               1    wreg     PTR const unsigned char 
  2278 ;;		 -> STR_12(25), STR_11(21), STR_10(20), STR_9(19), 
  2279 ;;		 -> STR_8(2), STR_7(3), STR_6(3), STR_5(31), 
  2280 ;;		 -> STR_4(2), STR_3(3), STR_2(3), STR_1(30), 
  2281 ;; Auto vars:     Size  Location     Type
  2282 ;;  f               1   22[BANK0 ] PTR const unsigned char 
  2283 ;;		 -> STR_12(25), STR_11(21), STR_10(20), STR_9(19), 
  2284 ;;		 -> STR_8(2), STR_7(3), STR_6(3), STR_5(31), 
  2285 ;;		 -> STR_4(2), STR_3(3), STR_2(3), STR_1(30), 
  2286 ;;  pb              2   23[BANK0 ] struct __prbuf
  2287 ;;  ap              1   21[BANK0 ] PTR void [1]
  2288 ;;		 -> ?_sprintf(2), ?_printf(2), 
  2289 ;; Return value:  Size  Location     Type
  2290 ;;                  2   17[BANK0 ] int 
  2291 ;; Registers used:
  2292 ;;		wreg, fsr0l, fsr0h, status,2, status,0, btemp+1, pclath, cstack
  2293 ;; Tracked objects:
  2294 ;;		On entry : 0/0
  2295 ;;		On exit  : 0/0
  2296 ;;		Unchanged: 0/0
  2297 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  2298 ;;      Params:         0       2       0       0       0
  2299 ;;      Locals:         0       4       0       0       0
  2300 ;;      Temps:          0       2       0       0       0
  2301 ;;      Totals:         0       8       0       0       0
  2302 ;;Total ram usage:        8 bytes
  2303 ;; Hardware stack levels used: 1
  2304 ;; Hardware stack levels required when called: 3
  2305 ;; This function calls:
  2306 ;;		__doprnt
  2307 ;; This function is called by:
  2308 ;;		_mensaje
  2309 ;; This function uses a non-reentrant model
  2310 ;;
  2311                           
  2312                           
  2313                           ;psect for function _printf
  2314  03A7                     _printf:
  2315                           
  2316                           ;incstack = 0
  2317                           ; Regs used in _printf: [wreg-fsr0h+status,2+status,0+btemp+1+pclath+cstack]
  2318                           ;printf@f stored from wreg
  2319  03A7  1283               	bcf	3,5	;RP0=0, select bank0
  2320  03A8  1303               	bcf	3,6	;RP1=0, select bank0
  2321  03A9  00B6               	movwf	printf@f
  2322  03AA                     l2168:
  2323  03AA  01B7               	clrf	printf@pb
  2324  03AB                     l2170:
  2325  03AB  3001               	movlw	(low (fp__putch-fpbase))& (0+255)
  2326  03AC  00B3               	movwf	??_printf
  2327  03AD  0833               	movf	??_printf,w
  2328  03AE  00B8               	movwf	low ((printf@pb| 0+1))
  2329  03AF                     l2172:
  2330  03AF  3031               	movlw	(low (?_printf| 0))& (0+255)
  2331  03B0  00B3               	movwf	??_printf
  2332  03B1  0833               	movf	??_printf,w
  2333  03B2  00B5               	movwf	printf@ap
  2334  03B3                     l2174:
  2335                           
  2336                           ;	Return value of _printf is never used
  2337  03B3  0836               	movf	printf@f,w
  2338  03B4  00B3               	movwf	??_printf
  2339  03B5  0833               	movf	??_printf,w
  2340  03B6  00A6               	movwf	__doprnt@f
  2341  03B7  3035               	movlw	(low (printf@ap| 0))& (0+255)
  2342  03B8  00B4               	movwf	??_printf+1
  2343  03B9  0834               	movf	??_printf+1,w
  2344  03BA  00A7               	movwf	__doprnt@ap
  2345  03BB  3037               	movlw	(low (printf@pb| 0))& (0+255)
  2346  03BC  120A  118A  2250  120A  118A  	fcall	__doprnt
  2347  03C1                     l752:
  2348  03C1  0008               	return
  2349  03C2                     __end_of_printf:
  2350                           
  2351                           	psect	text8
  2352  052B                     __ptext8:	
  2353 ;; *************** function _division *****************
  2354 ;; Defined at:
  2355 ;;		line 123 in file "lab3.c"
  2356 ;; Parameters:    Size  Location     Type
  2357 ;;  valor           1    wreg     unsigned char 
  2358 ;; Auto vars:     Size  Location     Type
  2359 ;;  valor           1    9[COMMON] unsigned char 
  2360 ;; Return value:  Size  Location     Type
  2361 ;;                  1    wreg      unsigned char 
  2362 ;; Registers used:
  2363 ;;		wreg, status,2, status,0, pclath, cstack
  2364 ;; Tracked objects:
  2365 ;;		On entry : 0/0
  2366 ;;		On exit  : 0/0
  2367 ;;		Unchanged: 0/0
  2368 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  2369 ;;      Params:         0       0       0       0       0
  2370 ;;      Locals:         1       0       0       0       0
  2371 ;;      Temps:          0       3       0       0       0
  2372 ;;      Totals:         1       3       0       0       0
  2373 ;;Total ram usage:        4 bytes
  2374 ;; Hardware stack levels used: 1
  2375 ;; Hardware stack levels required when called: 2
  2376 ;; This function calls:
  2377 ;;		___awdiv
  2378 ;;		___awmod
  2379 ;; This function is called by:
  2380 ;;		_mensaje
  2381 ;; This function uses a non-reentrant model
  2382 ;;
  2383                           
  2384                           
  2385                           ;psect for function _division
  2386  052B                     _division:
  2387                           
  2388                           ;incstack = 0
  2389                           ; Regs used in _division: [wreg+status,2+status,0+pclath+cstack]
  2390                           ;division@valor stored from wreg
  2391  052B  00F9               	movwf	division@valor
  2392  052C                     l2160:
  2393                           
  2394                           ;lab3.c: 124:     TXREG = hundreds;
  2395  052C  3032               	movlw	50
  2396  052D  00F2               	movwf	___awdiv@divisor
  2397  052E  3000               	movlw	0
  2398  052F  00F3               	movwf	___awdiv@divisor+1
  2399  0530  0879               	movf	division@valor,w
  2400  0531  1283               	bcf	3,5	;RP0=0, select bank0
  2401  0532  1303               	bcf	3,6	;RP1=0, select bank0
  2402  0533  00A4               	movwf	??_division
  2403  0534  01A5               	clrf	??_division+1
  2404  0535  0824               	movf	??_division,w
  2405  0536  00F4               	movwf	___awdiv@dividend
  2406  0537  0825               	movf	??_division+1,w
  2407  0538  00F5               	movwf	___awdiv@dividend+1
  2408  0539  120A  118A  2596  120A  118A  	fcall	___awdiv
  2409  053E  0872               	movf	?___awdiv,w
  2410  053F  1283               	bcf	3,5	;RP0=0, select bank0
  2411  0540  1303               	bcf	3,6	;RP1=0, select bank0
  2412  0541  00A6               	movwf	??_division+2
  2413  0542  0826               	movf	??_division+2,w
  2414  0543  00FB               	movwf	_hundreds
  2415                           
  2416                           ;lab3.c: 125:     _delay((unsigned long)((250)*(4000000/4000.0)));
  2417  0544  3064               	movlw	100
  2418  0545  00F2               	movwf	___awmod@divisor
  2419  0546  3000               	movlw	0
  2420  0547  00F3               	movwf	___awmod@divisor+1
  2421  0548  0879               	movf	division@valor,w
  2422  0549  00A4               	movwf	??_division
  2423  054A  01A5               	clrf	??_division+1
  2424  054B  0824               	movf	??_division,w
  2425  054C  00F4               	movwf	___awmod@dividend
  2426  054D  0825               	movf	??_division+1,w
  2427  054E  00F5               	movwf	___awmod@dividend+1
  2428  054F  120A  118A  265D  120A  118A  	fcall	___awmod
  2429  0554  0872               	movf	?___awmod,w
  2430  0555  1283               	bcf	3,5	;RP0=0, select bank0
  2431  0556  1303               	bcf	3,6	;RP1=0, select bank0
  2432  0557  00A6               	movwf	??_division+2
  2433  0558  0826               	movf	??_division+2,w
  2434  0559  00EB               	movwf	_residuo
  2435                           
  2436                           ;lab3.c: 126:     TXREG = 46;
  2437  055A  300A               	movlw	10
  2438  055B  00F2               	movwf	___awdiv@divisor
  2439  055C  3000               	movlw	0
  2440  055D  00F3               	movwf	___awdiv@divisor+1
  2441  055E  086B               	movf	_residuo,w
  2442  055F  00A4               	movwf	??_division
  2443  0560  01A5               	clrf	??_division+1
  2444  0561  0824               	movf	??_division,w
  2445  0562  00F4               	movwf	___awdiv@dividend
  2446  0563  0825               	movf	??_division+1,w
  2447  0564  00F5               	movwf	___awdiv@dividend+1
  2448  0565  120A  118A  2596  120A  118A  	fcall	___awdiv
  2449  056A  0872               	movf	?___awdiv,w
  2450  056B  1283               	bcf	3,5	;RP0=0, select bank0
  2451  056C  1303               	bcf	3,6	;RP1=0, select bank0
  2452  056D  00A6               	movwf	??_division+2
  2453  056E  0826               	movf	??_division+2,w
  2454  056F  00FA               	movwf	_tens
  2455                           
  2456                           ;lab3.c: 127:     _delay((unsigned long)((250)*(4000000/4000.0)));
  2457  0570  300A               	movlw	10
  2458  0571  00F2               	movwf	___awmod@divisor
  2459  0572  3000               	movlw	0
  2460  0573  00F3               	movwf	___awmod@divisor+1
  2461  0574  086B               	movf	_residuo,w
  2462  0575  00A4               	movwf	??_division
  2463  0576  01A5               	clrf	??_division+1
  2464  0577  0824               	movf	??_division,w
  2465  0578  00F4               	movwf	___awmod@dividend
  2466  0579  0825               	movf	??_division+1,w
  2467  057A  00F5               	movwf	___awmod@dividend+1
  2468  057B  120A  118A  265D  120A  118A  	fcall	___awmod
  2469  0580  0872               	movf	?___awmod,w
  2470  0581  1283               	bcf	3,5	;RP0=0, select bank0
  2471  0582  1303               	bcf	3,6	;RP1=0, select bank0
  2472  0583  00A6               	movwf	??_division+2
  2473  0584  0826               	movf	??_division+2,w
  2474  0585  00EC               	movwf	_units
  2475  0586                     l2162:
  2476                           
  2477                           ;lab3.c: 128:     TXREG = tens;
  2478  0586  087B               	movf	_hundreds,w
  2479  0587  3E30               	addlw	48
  2480  0588  00A4               	movwf	??_division
  2481  0589  0824               	movf	??_division,w
  2482  058A  00FB               	movwf	_hundreds
  2483  058B                     l2164:
  2484                           
  2485                           ;lab3.c: 129:     _delay((unsigned long)((250)*(4000000/4000.0)));
  2486  058B  087A               	movf	_tens,w
  2487  058C  3E30               	addlw	48
  2488  058D  00A4               	movwf	??_division
  2489  058E  0824               	movf	??_division,w
  2490  058F  00FA               	movwf	_tens
  2491  0590                     l2166:
  2492                           
  2493                           ;lab3.c: 130:     TXREG = units;
  2494  0590  086C               	movf	_units,w
  2495  0591  3E30               	addlw	48
  2496  0592  00A4               	movwf	??_division
  2497  0593  0824               	movf	??_division,w
  2498  0594  00EC               	movwf	_units
  2499  0595                     l154:
  2500  0595  0008               	return
  2501  0596                     __end_of_division:
  2502                           
  2503                           	psect	text9
  2504  065D                     __ptext9:	
  2505 ;; *************** function ___awmod *****************
  2506 ;; Defined at:
  2507 ;;		line 5 in file "C:\Program Files\Microchip\xc8\v2.32\pic\sources\c90\common\awmod.c"
  2508 ;; Parameters:    Size  Location     Type
  2509 ;;  divisor         2    2[COMMON] int 
  2510 ;;  dividend        2    4[COMMON] int 
  2511 ;; Auto vars:     Size  Location     Type
  2512 ;;  sign            1    8[COMMON] unsigned char 
  2513 ;;  counter         1    7[COMMON] unsigned char 
  2514 ;; Return value:  Size  Location     Type
  2515 ;;                  2    2[COMMON] int 
  2516 ;; Registers used:
  2517 ;;		wreg, status,2, status,0
  2518 ;; Tracked objects:
  2519 ;;		On entry : 0/0
  2520 ;;		On exit  : 0/0
  2521 ;;		Unchanged: 0/0
  2522 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  2523 ;;      Params:         4       0       0       0       0
  2524 ;;      Locals:         2       0       0       0       0
  2525 ;;      Temps:          1       0       0       0       0
  2526 ;;      Totals:         7       0       0       0       0
  2527 ;;Total ram usage:        7 bytes
  2528 ;; Hardware stack levels used: 1
  2529 ;; Hardware stack levels required when called: 1
  2530 ;; This function calls:
  2531 ;;		Nothing
  2532 ;; This function is called by:
  2533 ;;		_division
  2534 ;; This function uses a non-reentrant model
  2535 ;;
  2536                           
  2537                           
  2538                           ;psect for function ___awmod
  2539  065D                     ___awmod:
  2540  065D                     l1712:	
  2541                           ;incstack = 0
  2542                           ; Regs used in ___awmod: [wreg+status,2+status,0]
  2543                           
  2544  065D  01F8               	clrf	___awmod@sign
  2545  065E                     l1714:
  2546  065E  1FF5               	btfss	___awmod@dividend+1,7
  2547  065F  2E61               	goto	u1171
  2548  0660  2E62               	goto	u1170
  2549  0661                     u1171:
  2550  0661  2E69               	goto	l1720
  2551  0662                     u1170:
  2552  0662                     l1716:
  2553  0662  09F4               	comf	___awmod@dividend,f
  2554  0663  09F5               	comf	___awmod@dividend+1,f
  2555  0664  0AF4               	incf	___awmod@dividend,f
  2556  0665  1903               	skipnz
  2557  0666  0AF5               	incf	___awmod@dividend+1,f
  2558  0667                     l1718:
  2559  0667  01F8               	clrf	___awmod@sign
  2560  0668  0AF8               	incf	___awmod@sign,f
  2561  0669                     l1720:
  2562  0669  1FF3               	btfss	___awmod@divisor+1,7
  2563  066A  2E6C               	goto	u1181
  2564  066B  2E6D               	goto	u1180
  2565  066C                     u1181:
  2566  066C  2E72               	goto	l1724
  2567  066D                     u1180:
  2568  066D                     l1722:
  2569  066D  09F2               	comf	___awmod@divisor,f
  2570  066E  09F3               	comf	___awmod@divisor+1,f
  2571  066F  0AF2               	incf	___awmod@divisor,f
  2572  0670  1903               	skipnz
  2573  0671  0AF3               	incf	___awmod@divisor+1,f
  2574  0672                     l1724:
  2575  0672  0872               	movf	___awmod@divisor,w
  2576  0673  0473               	iorwf	___awmod@divisor+1,w
  2577  0674  1903               	btfsc	3,2
  2578  0675  2E77               	goto	u1191
  2579  0676  2E78               	goto	u1190
  2580  0677                     u1191:
  2581  0677  2EA7               	goto	l1742
  2582  0678                     u1190:
  2583  0678                     l1726:
  2584  0678  01F7               	clrf	___awmod@counter
  2585  0679  0AF7               	incf	___awmod@counter,f
  2586  067A  2E86               	goto	l1732
  2587  067B                     l1728:
  2588  067B  3001               	movlw	1
  2589  067C                     u1205:
  2590  067C  1003               	clrc
  2591  067D  0DF2               	rlf	___awmod@divisor,f
  2592  067E  0DF3               	rlf	___awmod@divisor+1,f
  2593  067F  3EFF               	addlw	-1
  2594  0680  1D03               	skipz
  2595  0681  2E7C               	goto	u1205
  2596  0682                     l1730:
  2597  0682  3001               	movlw	1
  2598  0683  00F6               	movwf	??___awmod
  2599  0684  0876               	movf	??___awmod,w
  2600  0685  07F7               	addwf	___awmod@counter,f
  2601  0686                     l1732:
  2602  0686  1FF3               	btfss	___awmod@divisor+1,7
  2603  0687  2E89               	goto	u1211
  2604  0688  2E8A               	goto	u1210
  2605  0689                     u1211:
  2606  0689  2E7B               	goto	l1728
  2607  068A                     u1210:
  2608  068A                     l1734:
  2609  068A  0873               	movf	___awmod@divisor+1,w
  2610  068B  0275               	subwf	___awmod@dividend+1,w
  2611  068C  1D03               	skipz
  2612  068D  2E90               	goto	u1225
  2613  068E  0872               	movf	___awmod@divisor,w
  2614  068F  0274               	subwf	___awmod@dividend,w
  2615  0690                     u1225:
  2616  0690  1C03               	skipc
  2617  0691  2E93               	goto	u1221
  2618  0692  2E94               	goto	u1220
  2619  0693                     u1221:
  2620  0693  2E9A               	goto	l1738
  2621  0694                     u1220:
  2622  0694                     l1736:
  2623  0694  0872               	movf	___awmod@divisor,w
  2624  0695  02F4               	subwf	___awmod@dividend,f
  2625  0696  0873               	movf	___awmod@divisor+1,w
  2626  0697  1C03               	skipc
  2627  0698  03F5               	decf	___awmod@dividend+1,f
  2628  0699  02F5               	subwf	___awmod@dividend+1,f
  2629  069A                     l1738:
  2630  069A  3001               	movlw	1
  2631  069B                     u1235:
  2632  069B  1003               	clrc
  2633  069C  0CF3               	rrf	___awmod@divisor+1,f
  2634  069D  0CF2               	rrf	___awmod@divisor,f
  2635  069E  3EFF               	addlw	-1
  2636  069F  1D03               	skipz
  2637  06A0  2E9B               	goto	u1235
  2638  06A1                     l1740:
  2639  06A1  3001               	movlw	1
  2640  06A2  02F7               	subwf	___awmod@counter,f
  2641  06A3  1D03               	btfss	3,2
  2642  06A4  2EA6               	goto	u1241
  2643  06A5  2EA7               	goto	u1240
  2644  06A6                     u1241:
  2645  06A6  2E8A               	goto	l1734
  2646  06A7                     u1240:
  2647  06A7                     l1742:
  2648  06A7  0878               	movf	___awmod@sign,w
  2649  06A8  1903               	btfsc	3,2
  2650  06A9  2EAB               	goto	u1251
  2651  06AA  2EAC               	goto	u1250
  2652  06AB                     u1251:
  2653  06AB  2EB1               	goto	l1746
  2654  06AC                     u1250:
  2655  06AC                     l1744:
  2656  06AC  09F4               	comf	___awmod@dividend,f
  2657  06AD  09F5               	comf	___awmod@dividend+1,f
  2658  06AE  0AF4               	incf	___awmod@dividend,f
  2659  06AF  1903               	skipnz
  2660  06B0  0AF5               	incf	___awmod@dividend+1,f
  2661  06B1                     l1746:
  2662  06B1  0875               	movf	___awmod@dividend+1,w
  2663  06B2  00F3               	movwf	?___awmod+1
  2664  06B3  0874               	movf	___awmod@dividend,w
  2665  06B4  00F2               	movwf	?___awmod
  2666  06B5                     l441:
  2667  06B5  0008               	return
  2668  06B6                     __end_of___awmod:
  2669                           
  2670                           	psect	text10
  2671  0596                     __ptext10:	
  2672 ;; *************** function ___awdiv *****************
  2673 ;; Defined at:
  2674 ;;		line 5 in file "C:\Program Files\Microchip\xc8\v2.32\pic\sources\c90\common\awdiv.c"
  2675 ;; Parameters:    Size  Location     Type
  2676 ;;  divisor         2    2[COMMON] int 
  2677 ;;  dividend        2    4[COMMON] int 
  2678 ;; Auto vars:     Size  Location     Type
  2679 ;;  quotient        2    2[BANK0 ] int 
  2680 ;;  sign            1    1[BANK0 ] unsigned char 
  2681 ;;  counter         1    0[BANK0 ] unsigned char 
  2682 ;; Return value:  Size  Location     Type
  2683 ;;                  2    2[COMMON] int 
  2684 ;; Registers used:
  2685 ;;		wreg, status,2, status,0
  2686 ;; Tracked objects:
  2687 ;;		On entry : 0/0
  2688 ;;		On exit  : 0/0
  2689 ;;		Unchanged: 0/0
  2690 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  2691 ;;      Params:         4       0       0       0       0
  2692 ;;      Locals:         0       4       0       0       0
  2693 ;;      Temps:          1       0       0       0       0
  2694 ;;      Totals:         5       4       0       0       0
  2695 ;;Total ram usage:        9 bytes
  2696 ;; Hardware stack levels used: 1
  2697 ;; Hardware stack levels required when called: 1
  2698 ;; This function calls:
  2699 ;;		Nothing
  2700 ;; This function is called by:
  2701 ;;		_division
  2702 ;; This function uses a non-reentrant model
  2703 ;;
  2704                           
  2705                           
  2706                           ;psect for function ___awdiv
  2707  0596                     ___awdiv:
  2708  0596                     l2116:	
  2709                           ;incstack = 0
  2710                           ; Regs used in ___awdiv: [wreg+status,2+status,0]
  2711                           
  2712  0596  1283               	bcf	3,5	;RP0=0, select bank0
  2713  0597  1303               	bcf	3,6	;RP1=0, select bank0
  2714  0598  01A1               	clrf	___awdiv@sign
  2715  0599                     l2118:
  2716  0599  1FF3               	btfss	___awdiv@divisor+1,7
  2717  059A  2D9C               	goto	u1591
  2718  059B  2D9D               	goto	u1590
  2719  059C                     u1591:
  2720  059C  2DA4               	goto	l2124
  2721  059D                     u1590:
  2722  059D                     l2120:
  2723  059D  09F2               	comf	___awdiv@divisor,f
  2724  059E  09F3               	comf	___awdiv@divisor+1,f
  2725  059F  0AF2               	incf	___awdiv@divisor,f
  2726  05A0  1903               	skipnz
  2727  05A1  0AF3               	incf	___awdiv@divisor+1,f
  2728  05A2                     l2122:
  2729  05A2  01A1               	clrf	___awdiv@sign
  2730  05A3  0AA1               	incf	___awdiv@sign,f
  2731  05A4                     l2124:
  2732  05A4  1FF5               	btfss	___awdiv@dividend+1,7
  2733  05A5  2DA7               	goto	u1601
  2734  05A6  2DA8               	goto	u1600
  2735  05A7                     u1601:
  2736  05A7  2DB1               	goto	l2130
  2737  05A8                     u1600:
  2738  05A8                     l2126:
  2739  05A8  09F4               	comf	___awdiv@dividend,f
  2740  05A9  09F5               	comf	___awdiv@dividend+1,f
  2741  05AA  0AF4               	incf	___awdiv@dividend,f
  2742  05AB  1903               	skipnz
  2743  05AC  0AF5               	incf	___awdiv@dividend+1,f
  2744  05AD                     l2128:
  2745  05AD  3001               	movlw	1
  2746  05AE  00F6               	movwf	??___awdiv
  2747  05AF  0876               	movf	??___awdiv,w
  2748  05B0  06A1               	xorwf	___awdiv@sign,f
  2749  05B1                     l2130:
  2750  05B1  01A2               	clrf	___awdiv@quotient
  2751  05B2  01A3               	clrf	___awdiv@quotient+1
  2752  05B3                     l2132:
  2753  05B3  0872               	movf	___awdiv@divisor,w
  2754  05B4  0473               	iorwf	___awdiv@divisor+1,w
  2755  05B5  1903               	btfsc	3,2
  2756  05B6  2DB8               	goto	u1611
  2757  05B7  2DB9               	goto	u1610
  2758  05B8                     u1611:
  2759  05B8  2DF0               	goto	l2152
  2760  05B9                     u1610:
  2761  05B9                     l2134:
  2762  05B9  01A0               	clrf	___awdiv@counter
  2763  05BA  0AA0               	incf	___awdiv@counter,f
  2764  05BB  2DC7               	goto	l2140
  2765  05BC                     l2136:
  2766  05BC  3001               	movlw	1
  2767  05BD                     u1625:
  2768  05BD  1003               	clrc
  2769  05BE  0DF2               	rlf	___awdiv@divisor,f
  2770  05BF  0DF3               	rlf	___awdiv@divisor+1,f
  2771  05C0  3EFF               	addlw	-1
  2772  05C1  1D03               	skipz
  2773  05C2  2DBD               	goto	u1625
  2774  05C3                     l2138:
  2775  05C3  3001               	movlw	1
  2776  05C4  00F6               	movwf	??___awdiv
  2777  05C5  0876               	movf	??___awdiv,w
  2778  05C6  07A0               	addwf	___awdiv@counter,f
  2779  05C7                     l2140:
  2780  05C7  1FF3               	btfss	___awdiv@divisor+1,7
  2781  05C8  2DCA               	goto	u1631
  2782  05C9  2DCB               	goto	u1630
  2783  05CA                     u1631:
  2784  05CA  2DBC               	goto	l2136
  2785  05CB                     u1630:
  2786  05CB                     l2142:
  2787  05CB  3001               	movlw	1
  2788  05CC                     u1645:
  2789  05CC  1003               	clrc
  2790  05CD  0DA2               	rlf	___awdiv@quotient,f
  2791  05CE  0DA3               	rlf	___awdiv@quotient+1,f
  2792  05CF  3EFF               	addlw	-1
  2793  05D0  1D03               	skipz
  2794  05D1  2DCC               	goto	u1645
  2795  05D2  0873               	movf	___awdiv@divisor+1,w
  2796  05D3  0275               	subwf	___awdiv@dividend+1,w
  2797  05D4  1D03               	skipz
  2798  05D5  2DD8               	goto	u1655
  2799  05D6  0872               	movf	___awdiv@divisor,w
  2800  05D7  0274               	subwf	___awdiv@dividend,w
  2801  05D8                     u1655:
  2802  05D8  1C03               	skipc
  2803  05D9  2DDB               	goto	u1651
  2804  05DA  2DDC               	goto	u1650
  2805  05DB                     u1651:
  2806  05DB  2DE3               	goto	l2148
  2807  05DC                     u1650:
  2808  05DC                     l2144:
  2809  05DC  0872               	movf	___awdiv@divisor,w
  2810  05DD  02F4               	subwf	___awdiv@dividend,f
  2811  05DE  0873               	movf	___awdiv@divisor+1,w
  2812  05DF  1C03               	skipc
  2813  05E0  03F5               	decf	___awdiv@dividend+1,f
  2814  05E1  02F5               	subwf	___awdiv@dividend+1,f
  2815  05E2                     l2146:
  2816  05E2  1422               	bsf	___awdiv@quotient,0
  2817  05E3                     l2148:
  2818  05E3  3001               	movlw	1
  2819  05E4                     u1665:
  2820  05E4  1003               	clrc
  2821  05E5  0CF3               	rrf	___awdiv@divisor+1,f
  2822  05E6  0CF2               	rrf	___awdiv@divisor,f
  2823  05E7  3EFF               	addlw	-1
  2824  05E8  1D03               	skipz
  2825  05E9  2DE4               	goto	u1665
  2826  05EA                     l2150:
  2827  05EA  3001               	movlw	1
  2828  05EB  02A0               	subwf	___awdiv@counter,f
  2829  05EC  1D03               	btfss	3,2
  2830  05ED  2DEF               	goto	u1671
  2831  05EE  2DF0               	goto	u1670
  2832  05EF                     u1671:
  2833  05EF  2DCB               	goto	l2142
  2834  05F0                     u1670:
  2835  05F0                     l2152:
  2836  05F0  0821               	movf	___awdiv@sign,w
  2837  05F1  1903               	btfsc	3,2
  2838  05F2  2DF4               	goto	u1681
  2839  05F3  2DF5               	goto	u1680
  2840  05F4                     u1681:
  2841  05F4  2DFA               	goto	l2156
  2842  05F5                     u1680:
  2843  05F5                     l2154:
  2844  05F5  09A2               	comf	___awdiv@quotient,f
  2845  05F6  09A3               	comf	___awdiv@quotient+1,f
  2846  05F7  0AA2               	incf	___awdiv@quotient,f
  2847  05F8  1903               	skipnz
  2848  05F9  0AA3               	incf	___awdiv@quotient+1,f
  2849  05FA                     l2156:
  2850  05FA  0823               	movf	___awdiv@quotient+1,w
  2851  05FB  00F3               	movwf	?___awdiv+1
  2852  05FC  0822               	movf	___awdiv@quotient,w
  2853  05FD  00F2               	movwf	?___awdiv
  2854  05FE                     l428:
  2855  05FE  0008               	return
  2856  05FF                     __end_of___awdiv:
  2857                           
  2858                           	psect	text11
  2859  06FA                     __ptext11:	
  2860 ;; *************** function _concat *****************
  2861 ;; Defined at:
  2862 ;;		line 212 in file "lab3.c"
  2863 ;; Parameters:    Size  Location     Type
  2864 ;;  a               2   26[BANK0 ] int 
  2865 ;;  b               2   28[BANK0 ] int 
  2866 ;; Auto vars:     Size  Location     Type
  2867 ;;  s1             20   51[BANK0 ] unsigned char [20]
  2868 ;;  s2             20   31[BANK0 ] unsigned char [20]
  2869 ;;  c               2   71[BANK0 ] int 
  2870 ;; Return value:  Size  Location     Type
  2871 ;;                  2   26[BANK0 ] int 
  2872 ;; Registers used:
  2873 ;;		wreg, fsr0l, fsr0h, status,2, status,0, btemp+1, pclath, cstack
  2874 ;; Tracked objects:
  2875 ;;		On entry : 0/0
  2876 ;;		On exit  : 0/0
  2877 ;;		Unchanged: 0/0
  2878 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  2879 ;;      Params:         0       4       0       0       0
  2880 ;;      Locals:         0      42       0       0       0
  2881 ;;      Temps:          0       1       0       0       0
  2882 ;;      Totals:         0      47       0       0       0
  2883 ;;Total ram usage:       47 bytes
  2884 ;; Hardware stack levels used: 1
  2885 ;; Hardware stack levels required when called: 4
  2886 ;; This function calls:
  2887 ;;		_atoi
  2888 ;;		_sprintf
  2889 ;;		_strcat
  2890 ;; This function is called by:
  2891 ;;		_mensaje
  2892 ;; This function uses a non-reentrant model
  2893 ;;
  2894                           
  2895                           
  2896                           ;psect for function _concat
  2897  06FA                     _concat:
  2898  06FA                     l2178:	
  2899                           ;incstack = 0
  2900                           ; Regs used in _concat: [wreg-fsr0h+status,2+status,0+btemp+1+pclath+cstack]
  2901                           
  2902  06FA  305E               	movlw	(low (((STR_12+22)-__stringbase)| (0+32768)))& (0+255)
  2903  06FB  1283               	bcf	3,5	;RP0=0, select bank0
  2904  06FC  1303               	bcf	3,6	;RP1=0, select bank0
  2905  06FD  00BE               	movwf	??_concat
  2906  06FE  083E               	movf	??_concat,w
  2907  06FF  00B1               	movwf	sprintf@f
  2908  0700  083B               	movf	concat@a+1,w
  2909  0701  00B3               	movwf	?_sprintf+2
  2910  0702  083A               	movf	concat@a,w
  2911  0703  00B2               	movwf	?_sprintf+1
  2912  0704  3053               	movlw	(low (concat@s1| 0))& (0+255)
  2913  0705  120A  118A  2386  120A  118A  	fcall	_sprintf
  2914  070A  305E               	movlw	(low (((STR_12+22)-__stringbase)| (0+32768)))& (0+255)
  2915  070B  1283               	bcf	3,5	;RP0=0, select bank0
  2916  070C  1303               	bcf	3,6	;RP1=0, select bank0
  2917  070D  00BE               	movwf	??_concat
  2918  070E  083E               	movf	??_concat,w
  2919  070F  00B1               	movwf	sprintf@f
  2920  0710  083D               	movf	concat@b+1,w
  2921  0711  00B3               	movwf	?_sprintf+2
  2922  0712  083C               	movf	concat@b,w
  2923  0713  00B2               	movwf	?_sprintf+1
  2924  0714  303F               	movlw	(low (concat@s2| 0))& (0+255)
  2925  0715  120A  118A  2386  120A  118A  	fcall	_sprintf
  2926  071A                     l2180:
  2927  071A  303F               	movlw	(low (concat@s2| 0))& (0+255)
  2928  071B  1283               	bcf	3,5	;RP0=0, select bank0
  2929  071C  1303               	bcf	3,6	;RP1=0, select bank0
  2930  071D  00BE               	movwf	??_concat
  2931  071E  083E               	movf	??_concat,w
  2932  071F  00F2               	movwf	strcat@from
  2933  0720  3053               	movlw	(low (concat@s1| 0))& (0+255)
  2934  0721  120A  118A  27AB  120A  118A  	fcall	_strcat
  2935  0726                     l2182:
  2936  0726  3053               	movlw	(low (concat@s1| 0))& (0+255)
  2937  0727  120A  118A  24A8  120A  118A  	fcall	_atoi
  2938  072C  0879               	movf	?_atoi+1,w
  2939  072D  1283               	bcf	3,5	;RP0=0, select bank0
  2940  072E  1303               	bcf	3,6	;RP1=0, select bank0
  2941  072F  00E8               	movwf	concat@c+1
  2942  0730  0878               	movf	?_atoi,w
  2943  0731  00E7               	movwf	concat@c
  2944  0732                     l2184:
  2945  0732  0868               	movf	concat@c+1,w
  2946  0733  00BB               	movwf	?_concat+1
  2947  0734  0867               	movf	concat@c,w
  2948  0735  00BA               	movwf	?_concat
  2949  0736                     l189:
  2950  0736  0008               	return
  2951  0737                     __end_of_concat:
  2952                           
  2953                           	psect	text12
  2954  07AB                     __ptext12:	
  2955 ;; *************** function _strcat *****************
  2956 ;; Defined at:
  2957 ;;		line 8 in file "C:\Program Files\Microchip\xc8\v2.32\pic\sources\c90\common\strcat.c"
  2958 ;; Parameters:    Size  Location     Type
  2959 ;;  to              1    wreg     PTR unsigned char 
  2960 ;;		 -> concat@s1(20), 
  2961 ;;  from            1    2[COMMON] PTR const unsigned char 
  2962 ;;		 -> concat@s2(20), 
  2963 ;; Auto vars:     Size  Location     Type
  2964 ;;  to              1    4[COMMON] PTR unsigned char 
  2965 ;;		 -> concat@s1(20), 
  2966 ;;  cp              1    5[COMMON] PTR unsigned char 
  2967 ;;		 -> concat@s1(20), 
  2968 ;; Return value:  Size  Location     Type
  2969 ;;                  1    wreg      PTR unsigned char 
  2970 ;; Registers used:
  2971 ;;		wreg, fsr0l, fsr0h, status,2, status,0
  2972 ;; Tracked objects:
  2973 ;;		On entry : 0/0
  2974 ;;		On exit  : 0/0
  2975 ;;		Unchanged: 0/0
  2976 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  2977 ;;      Params:         1       0       0       0       0
  2978 ;;      Locals:         2       0       0       0       0
  2979 ;;      Temps:          1       0       0       0       0
  2980 ;;      Totals:         4       0       0       0       0
  2981 ;;Total ram usage:        4 bytes
  2982 ;; Hardware stack levels used: 1
  2983 ;; Hardware stack levels required when called: 1
  2984 ;; This function calls:
  2985 ;;		Nothing
  2986 ;; This function is called by:
  2987 ;;		_concat
  2988 ;; This function uses a non-reentrant model
  2989 ;;
  2990                           
  2991                           
  2992                           ;psect for function _strcat
  2993  07AB                     _strcat:
  2994                           
  2995                           ;incstack = 0
  2996                           ; Regs used in _strcat: [wreg-fsr0h+status,2+status,0]
  2997                           ;strcat@to stored from wreg
  2998  07AB  00F4               	movwf	strcat@to
  2999  07AC                     l1624:
  3000  07AC  0874               	movf	strcat@to,w
  3001  07AD  00F3               	movwf	??_strcat
  3002  07AE  0873               	movf	??_strcat,w
  3003  07AF  00F5               	movwf	strcat@cp
  3004  07B0  2FB5               	goto	l1628
  3005  07B1                     l1626:
  3006  07B1  3001               	movlw	1
  3007  07B2  00F3               	movwf	??_strcat
  3008  07B3  0873               	movf	??_strcat,w
  3009  07B4  07F5               	addwf	strcat@cp,f
  3010  07B5                     l1628:
  3011  07B5  0875               	movf	strcat@cp,w
  3012  07B6  0084               	movwf	4
  3013  07B7  1383               	bcf	3,7	;select IRP bank0
  3014  07B8  0800               	movf	0,w
  3015  07B9  1D03               	btfss	3,2
  3016  07BA  2FBC               	goto	u991
  3017  07BB  2FBD               	goto	u990
  3018  07BC                     u991:
  3019  07BC  2FB1               	goto	l1626
  3020  07BD                     u990:
  3021  07BD  2FC6               	goto	l1632
  3022  07BE                     l1630:
  3023  07BE  3001               	movlw	1
  3024  07BF  00F3               	movwf	??_strcat
  3025  07C0  0873               	movf	??_strcat,w
  3026  07C1  07F5               	addwf	strcat@cp,f
  3027  07C2  3001               	movlw	1
  3028  07C3  00F3               	movwf	??_strcat
  3029  07C4  0873               	movf	??_strcat,w
  3030  07C5  07F2               	addwf	strcat@from,f
  3031  07C6                     l1632:
  3032  07C6  0872               	movf	strcat@from,w
  3033  07C7  0084               	movwf	4
  3034  07C8  0800               	movf	0,w
  3035  07C9  00F3               	movwf	??_strcat
  3036  07CA  0875               	movf	strcat@cp,w
  3037  07CB  0084               	movwf	4
  3038  07CC  0873               	movf	??_strcat,w
  3039  07CD  0080               	movwf	0
  3040  07CE  0800               	movf	0,w
  3041  07CF  1D03               	btfss	3,2
  3042  07D0  2FD2               	goto	u1001
  3043  07D1  2FD3               	goto	u1000
  3044  07D2                     u1001:
  3045  07D2  2FBE               	goto	l1630
  3046  07D3                     u1000:
  3047  07D3                     l806:
  3048  07D3  0008               	return
  3049  07D4                     __end_of_strcat:
  3050                           
  3051                           	psect	text13
  3052  0386                     __ptext13:	
  3053 ;; *************** function _sprintf *****************
  3054 ;; Defined at:
  3055 ;;		line 13 in file "C:\Program Files\Microchip\xc8\v2.32\pic\sources\c90\common\sprintf.c"
  3056 ;; Parameters:    Size  Location     Type
  3057 ;;  wh              1    wreg     PTR unsigned char 
  3058 ;;		 -> concat@s2(20), concat@s1(20), 
  3059 ;;  f               1   17[BANK0 ] PTR const unsigned char 
  3060 ;;		 -> STR_14(3), STR_13(3), 
  3061 ;; Auto vars:     Size  Location     Type
  3062 ;;  wh              1   22[BANK0 ] PTR unsigned char 
  3063 ;;		 -> concat@s2(20), concat@s1(20), 
  3064 ;;  pb              2   24[BANK0 ] struct __prbuf
  3065 ;;  ap              1   23[BANK0 ] PTR void [1]
  3066 ;;		 -> ?_sprintf(2), ?_printf(2), 
  3067 ;; Return value:  Size  Location     Type
  3068 ;;                  2   17[BANK0 ] int 
  3069 ;; Registers used:
  3070 ;;		wreg, fsr0l, fsr0h, status,2, status,0, btemp+1, pclath, cstack
  3071 ;; Tracked objects:
  3072 ;;		On entry : 0/0
  3073 ;;		On exit  : 0/0
  3074 ;;		Unchanged: 0/0
  3075 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  3076 ;;      Params:         0       3       0       0       0
  3077 ;;      Locals:         0       4       0       0       0
  3078 ;;      Temps:          0       2       0       0       0
  3079 ;;      Totals:         0       9       0       0       0
  3080 ;;Total ram usage:        9 bytes
  3081 ;; Hardware stack levels used: 1
  3082 ;; Hardware stack levels required when called: 3
  3083 ;; This function calls:
  3084 ;;		__doprnt
  3085 ;; This function is called by:
  3086 ;;		_concat
  3087 ;; This function uses a non-reentrant model
  3088 ;;
  3089                           
  3090                           
  3091                           ;psect for function _sprintf
  3092  0386                     _sprintf:
  3093                           
  3094                           ;incstack = 0
  3095                           ; Regs used in _sprintf: [wreg-fsr0h+status,2+status,0+btemp+1+pclath+cstack]
  3096                           ;sprintf@wh stored from wreg
  3097  0386  1283               	bcf	3,5	;RP0=0, select bank0
  3098  0387  1303               	bcf	3,6	;RP1=0, select bank0
  3099  0388  00B6               	movwf	sprintf@wh
  3100  0389                     l2070:
  3101  0389  0836               	movf	sprintf@wh,w
  3102  038A  00B4               	movwf	??_sprintf
  3103  038B  0834               	movf	??_sprintf,w
  3104  038C  00B8               	movwf	sprintf@pb
  3105  038D                     l2072:
  3106  038D  01B9               	clrf	low ((sprintf@pb| 0+1))
  3107  038E                     l2074:
  3108  038E  3032               	movlw	(low ((?_sprintf| 0+1)))& (0+255)
  3109  038F  00B4               	movwf	??_sprintf
  3110  0390  0834               	movf	??_sprintf,w
  3111  0391  00B7               	movwf	sprintf@ap
  3112  0392                     l2076:
  3113  0392  0831               	movf	sprintf@f,w
  3114  0393  00B4               	movwf	??_sprintf
  3115  0394  0834               	movf	??_sprintf,w
  3116  0395  00A6               	movwf	__doprnt@f
  3117  0396  3037               	movlw	(low (sprintf@ap| 0))& (0+255)
  3118  0397  00B5               	movwf	??_sprintf+1
  3119  0398  0835               	movf	??_sprintf+1,w
  3120  0399  00A7               	movwf	__doprnt@ap
  3121  039A  3038               	movlw	(low (sprintf@pb| 0))& (0+255)
  3122  039B  120A  118A  2250  120A  118A  	fcall	__doprnt
  3123  03A0                     l2078:
  3124  03A0  1283               	bcf	3,5	;RP0=0, select bank0
  3125  03A1  1303               	bcf	3,6	;RP1=0, select bank0
  3126  03A2  0838               	movf	sprintf@pb,w
  3127  03A3  0084               	movwf	4
  3128  03A4  1383               	bcf	3,7	;select IRP bank0
  3129  03A5  0180               	clrf	0
  3130  03A6                     l797:
  3131  03A6  0008               	return
  3132  03A7                     __end_of_sprintf:
  3133                           
  3134                           	psect	text14
  3135  0250                     __ptext14:	
  3136 ;; *************** function __doprnt *****************
  3137 ;; Defined at:
  3138 ;;		line 471 in file "C:\Program Files\Microchip\xc8\v2.32\pic\sources\c90\common\doprnt.c"
  3139 ;; Parameters:    Size  Location     Type
  3140 ;;  pb              1    wreg     PTR struct __prbuf
  3141 ;;		 -> sprintf@pb(2), printf@pb(2), 
  3142 ;;  f               1    6[BANK0 ] PTR const unsigned char 
  3143 ;;		 -> STR_14(3), STR_13(3), STR_12(25), STR_11(21), 
  3144 ;;		 -> STR_10(20), STR_9(19), STR_8(2), STR_7(3), 
  3145 ;;		 -> STR_6(3), STR_5(31), STR_4(2), STR_3(3), 
  3146 ;;		 -> STR_2(3), STR_1(30), 
  3147 ;;  ap              1    7[BANK0 ] PTR PTR void 
  3148 ;;		 -> sprintf@ap(1), printf@ap(1), 
  3149 ;; Auto vars:     Size  Location     Type
  3150 ;;  pb              1   16[BANK0 ] PTR struct __prbuf
  3151 ;;		 -> sprintf@pb(2), printf@pb(2), 
  3152 ;;  tmpval          4    0        struct .
  3153 ;;  val             2   13[BANK0 ] unsigned int 
  3154 ;;  cp              2    0        PTR const unsigned char 
  3155 ;;  len             2    0        unsigned int 
  3156 ;;  c               1   15[BANK0 ] unsigned char 
  3157 ;;  prec            1   12[BANK0 ] char 
  3158 ;;  flag            1   11[BANK0 ] unsigned char 
  3159 ;; Return value:  Size  Location     Type
  3160 ;;                  2    6[BANK0 ] int 
  3161 ;; Registers used:
  3162 ;;		wreg, fsr0l, fsr0h, status,2, status,0, btemp+1, pclath, cstack
  3163 ;; Tracked objects:
  3164 ;;		On entry : 0/0
  3165 ;;		On exit  : 0/0
  3166 ;;		Unchanged: 0/0
  3167 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  3168 ;;      Params:         0       2       0       0       0
  3169 ;;      Locals:         0       6       0       0       0
  3170 ;;      Temps:          0       3       0       0       0
  3171 ;;      Totals:         0      11       0       0       0
  3172 ;;Total ram usage:       11 bytes
  3173 ;; Hardware stack levels used: 1
  3174 ;; Hardware stack levels required when called: 2
  3175 ;; This function calls:
  3176 ;;		Absolute function
  3177 ;;		___lwdiv
  3178 ;;		___lwmod
  3179 ;;		_putch
  3180 ;; This function is called by:
  3181 ;;		_printf
  3182 ;;		_sprintf
  3183 ;; This function uses a non-reentrant model
  3184 ;;
  3185                           
  3186                           
  3187                           ;psect for function __doprnt
  3188  0250                     __doprnt:
  3189                           
  3190                           ;incstack = 0
  3191                           ; Regs used in __doprnt: [wreg-fsr0h+status,2+status,0+btemp+1+pclath+cstack]
  3192                           ;__doprnt@pb stored from wreg
  3193  0250  1283               	bcf	3,5	;RP0=0, select bank0
  3194  0251  1303               	bcf	3,6	;RP1=0, select bank0
  3195  0252  00B0               	movwf	__doprnt@pb
  3196  0253                     l1998:
  3197                           
  3198                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c90\common\doprnt.c: 471: _doprnt(stru
      +                          ct __prbuf * pb, register const char * f, register va_list ap);C:\Program Files\Microchi
      +                          p\xc8\v2.32\pic\sources\c90\common\doprnt.c: 472: {;C:\Program Files\Microchip\xc8\v2.32
      +                          \pic\sources\c90\common\doprnt.c: 512:  char c;;C:\Program Files\Microchip\xc8\v2.32\pic
      +                          \sources\c90\common\doprnt.c: 521:  signed char prec;;C:\Program Files\Microchip\xc8\v2.
      +                          32\pic\sources\c90\common\doprnt.c: 525:  unsigned char flag;;C:\Program Files\Microchip
      +                          \xc8\v2.32\pic\sources\c90\common\doprnt.c: 543:  } tmpval;
  3199  0253  2B6F               	goto	l2060
  3200  0254                     l2000:
  3201                           
  3202                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c90\common\doprnt.c: 555:   if(c != '%
      +                          ')
  3203  0254  3025               	movlw	37
  3204  0255  062F               	xorwf	__doprnt@c,w
  3205  0256  1903               	btfsc	3,2
  3206  0257  2A59               	goto	u1431
  3207  0258  2A5A               	goto	u1430
  3208  0259                     u1431:
  3209  0259  2A80               	goto	l2010
  3210  025A                     u1430:
  3211  025A                     l2002:
  3212  025A  0A30               	incf	__doprnt@pb,w
  3213  025B  0084               	movwf	4
  3214  025C  1383               	bcf	3,7	;select IRP bank0
  3215  025D  0800               	movf	0,w
  3216  025E  1903               	btfsc	3,2
  3217  025F  2A61               	goto	u1441
  3218  0260  2A62               	goto	u1440
  3219  0261                     u1441:
  3220  0261  2A71               	goto	l2006
  3221  0262                     u1440:
  3222  0262                     l2004:
  3223  0262  082F               	movf	__doprnt@c,w
  3224  0263  00A8               	movwf	??__doprnt
  3225  0264  0828               	movf	??__doprnt,w
  3226  0265  00F2               	movwf	putch@data
  3227  0266  0A30               	incf	__doprnt@pb,w
  3228  0267  0084               	movwf	4
  3229  0268  0800               	movf	0,w
  3230  0269  120A  118A  2026  120A  118A  	fcall	fptable
  3231  026E  1283               	bcf	3,5	;RP0=0, select bank0
  3232  026F  1303               	bcf	3,6	;RP1=0, select bank0
  3233  0270  2A53               	goto	l1998
  3234  0271                     l2006:
  3235  0271  082F               	movf	__doprnt@c,w
  3236  0272  00A8               	movwf	??__doprnt
  3237  0273  0830               	movf	__doprnt@pb,w
  3238  0274  0084               	movwf	4
  3239  0275  0800               	movf	0,w
  3240  0276  0084               	movwf	4
  3241  0277  0828               	movf	??__doprnt,w
  3242  0278  0080               	movwf	0
  3243  0279                     l2008:
  3244  0279  3001               	movlw	1
  3245  027A  00A8               	movwf	??__doprnt
  3246  027B  0830               	movf	__doprnt@pb,w
  3247  027C  0084               	movwf	4
  3248  027D  0828               	movf	??__doprnt,w
  3249  027E  0780               	addwf	0,f
  3250  027F  2A53               	goto	l1998
  3251  0280                     l2010:
  3252                           
  3253                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c90\common\doprnt.c: 565:   flag = 0;
  3254  0280  01AB               	clrf	__doprnt@flag
  3255  0281                     l2014:	
  3256                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c90\common\doprnt.c: 661:   switch(c =
      +                           *f++) {
  3257                           
  3258  0281  3001               	movlw	1
  3259  0282  07A6               	addwf	__doprnt@f,f
  3260  0283  30FF               	movlw	-1
  3261  0284  0726               	addwf	__doprnt@f,w
  3262  0285  0084               	movwf	4
  3263  0286  120A  118A  2400  120A  118A  	fcall	stringdir
  3264  028B  00AF               	movwf	__doprnt@c
  3265  028C  00A8               	movwf	??__doprnt
  3266  028D  01A9               	clrf	??__doprnt+1
  3267                           
  3268                           ; Switch on 2 bytes has been partitioned into a top level switch of size 1, and 1 sub-sw
      +                          itches
  3269                           ; Switch size 1, requested type "simple"
  3270                           ; Number of cases is 1, Range of values is 0 to 0
  3271                           ; switch strategies available:
  3272                           ; Name         Instructions Cycles
  3273                           ; simple_byte            4     3 (average)
  3274                           ; direct_byte           11     8 (fixed)
  3275                           ; jumptable            260     6 (fixed)
  3276                           ;	Chosen strategy is simple_byte
  3277  028E  0829               	movf	??__doprnt+1,w
  3278  028F  3A00               	xorlw	0	; case 0
  3279  0290  1903               	skipnz
  3280  0291  2A93               	goto	l2326
  3281  0292  2B6F               	goto	l2060
  3282  0293                     l2326:
  3283                           
  3284                           ; Switch size 1, requested type "simple"
  3285                           ; Number of cases is 3, Range of values is 0 to 105
  3286                           ; switch strategies available:
  3287                           ; Name         Instructions Cycles
  3288                           ; simple_byte           10     6 (average)
  3289                           ; jumptable            260     6 (fixed)
  3290                           ;	Chosen strategy is simple_byte
  3291  0293  0828               	movf	??__doprnt,w
  3292  0294  3A00               	xorlw	0	; case 0
  3293  0295  1903               	skipnz
  3294  0296  2B83               	goto	l2062
  3295  0297  3A64               	xorlw	100	; case 100
  3296  0298  1903               	skipnz
  3297  0299  2A9E               	goto	l2016
  3298  029A  3A0D               	xorlw	13	; case 105
  3299  029B  1903               	skipnz
  3300  029C  2A9E               	goto	l2016
  3301  029D  2B6F               	goto	l2060
  3302  029E                     l2016:
  3303                           
  3304                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c90\common\doprnt.c: 1279:   {;C:\Prog
      +                          ram Files\Microchip\xc8\v2.32\pic\sources\c90\common\doprnt.c: 1285:     val = (unsigned
      +                           int)(*(int *)__va_arg((*(int **)ap), (int)0));
  3305  029E  0827               	movf	__doprnt@ap,w
  3306  029F  0084               	movwf	4
  3307  02A0  1383               	bcf	3,7	;select IRP bank0
  3308  02A1  0800               	movf	0,w
  3309  02A2  00A8               	movwf	??__doprnt
  3310  02A3  3002               	movlw	2
  3311  02A4  0780               	addwf	0,f
  3312  02A5  0828               	movf	??__doprnt,w
  3313  02A6  0084               	movwf	4
  3314  02A7  0800               	movf	0,w
  3315  02A8  00AD               	movwf	__doprnt@val
  3316  02A9  0A84               	incf	4,f
  3317  02AA  0800               	movf	0,w
  3318  02AB  00AE               	movwf	__doprnt@val+1
  3319  02AC                     l2018:
  3320                           
  3321                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c90\common\doprnt.c: 1287:    if((int)
      +                          val < 0) {
  3322  02AC  1FAE               	btfss	__doprnt@val+1,7
  3323  02AD  2AAF               	goto	u1451
  3324  02AE  2AB0               	goto	u1450
  3325  02AF                     u1451:
  3326  02AF  2AB9               	goto	l2024
  3327  02B0                     u1450:
  3328  02B0                     l2020:
  3329                           
  3330                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c90\common\doprnt.c: 1288:     flag |=
      +                           0x03;
  3331  02B0  3003               	movlw	3
  3332  02B1  00A8               	movwf	??__doprnt
  3333  02B2  0828               	movf	??__doprnt,w
  3334  02B3  04AB               	iorwf	__doprnt@flag,f
  3335  02B4                     l2022:
  3336                           
  3337                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c90\common\doprnt.c: 1289:     val = -
      +                          val;
  3338  02B4  09AD               	comf	__doprnt@val,f
  3339  02B5  09AE               	comf	__doprnt@val+1,f
  3340  02B6  0AAD               	incf	__doprnt@val,f
  3341  02B7  1903               	skipnz
  3342  02B8  0AAE               	incf	__doprnt@val+1,f
  3343  02B9                     l2024:
  3344                           
  3345                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c90\common\doprnt.c: 1292:   };C:\Prog
      +                          ram Files\Microchip\xc8\v2.32\pic\sources\c90\common\doprnt.c: 1331:    for(c = 1 ; c !=
      +                           sizeof dpowers/sizeof dpowers[0] ; c++)
  3346  02B9  01AF               	clrf	__doprnt@c
  3347  02BA  0AAF               	incf	__doprnt@c,f
  3348  02BB                     l2030:
  3349                           
  3350                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c90\common\doprnt.c: 1332:     if(val 
      +                          < dpowers[c])
  3351  02BB  082F               	movf	__doprnt@c,w
  3352  02BC  00A8               	movwf	??__doprnt
  3353  02BD  0728               	addwf	??__doprnt,w
  3354  02BE  3E01               	addlw	low ((_dpowers-__stringbase)| (0+32768))
  3355  02BF  0084               	movwf	4
  3356  02C0  120A  118A  2400  120A  118A  	fcall	stringdir
  3357  02C5  00A9               	movwf	??__doprnt+1
  3358  02C6  120A  118A  2400  120A  118A  	fcall	stringdir
  3359  02CB  00AA               	movwf	??__doprnt+2
  3360  02CC  082A               	movf	??__doprnt+2,w
  3361  02CD  022E               	subwf	__doprnt@val+1,w
  3362  02CE  1D03               	skipz
  3363  02CF  2AD2               	goto	u1465
  3364  02D0  0829               	movf	??__doprnt+1,w
  3365  02D1  022D               	subwf	__doprnt@val,w
  3366  02D2                     u1465:
  3367  02D2  1803               	skipnc
  3368  02D3  2AD5               	goto	u1461
  3369  02D4  2AD6               	goto	u1460
  3370  02D5                     u1461:
  3371  02D5  2AD7               	goto	l2034
  3372  02D6                     u1460:
  3373  02D6  2AE1               	goto	l2036
  3374  02D7                     l2034:
  3375  02D7  3001               	movlw	1
  3376  02D8  00A8               	movwf	??__doprnt
  3377  02D9  0828               	movf	??__doprnt,w
  3378  02DA  07AF               	addwf	__doprnt@c,f
  3379  02DB  3005               	movlw	5
  3380  02DC  062F               	xorwf	__doprnt@c,w
  3381  02DD  1D03               	btfss	3,2
  3382  02DE  2AE0               	goto	u1471
  3383  02DF  2AE1               	goto	u1470
  3384  02E0                     u1471:
  3385  02E0  2ABB               	goto	l2030
  3386  02E1                     u1470:
  3387  02E1                     l2036:
  3388                           
  3389                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c90\common\doprnt.c: 1448:   {;C:\Prog
      +                          ram Files\Microchip\xc8\v2.32\pic\sources\c90\common\doprnt.c: 1464:    if(flag & 0x03)
  3390  02E1  082B               	movf	__doprnt@flag,w
  3391  02E2  3903               	andlw	3
  3392  02E3  1903               	btfsc	3,2
  3393  02E4  2AE6               	goto	u1481
  3394  02E5  2AE7               	goto	u1480
  3395  02E6                     u1481:
  3396  02E6  2B0A               	goto	l2046
  3397  02E7                     u1480:
  3398  02E7                     l2038:
  3399  02E7  0A30               	incf	__doprnt@pb,w
  3400  02E8  0084               	movwf	4
  3401  02E9  1383               	bcf	3,7	;select IRP bank0
  3402  02EA  0800               	movf	0,w
  3403  02EB  1903               	btfsc	3,2
  3404  02EC  2AEE               	goto	u1491
  3405  02ED  2AEF               	goto	u1490
  3406  02EE                     u1491:
  3407  02EE  2AFC               	goto	l2042
  3408  02EF                     u1490:
  3409  02EF                     l2040:
  3410  02EF  302D               	movlw	45
  3411  02F0  00A8               	movwf	??__doprnt
  3412  02F1  0828               	movf	??__doprnt,w
  3413  02F2  00F2               	movwf	putch@data
  3414  02F3  0A30               	incf	__doprnt@pb,w
  3415  02F4  0084               	movwf	4
  3416  02F5  0800               	movf	0,w
  3417  02F6  120A  118A  2026  120A  118A  	fcall	fptable
  3418  02FB  2B0A               	goto	l2046
  3419  02FC                     l2042:
  3420  02FC  302D               	movlw	45
  3421  02FD  00A8               	movwf	??__doprnt
  3422  02FE  0830               	movf	__doprnt@pb,w
  3423  02FF  0084               	movwf	4
  3424  0300  0800               	movf	0,w
  3425  0301  0084               	movwf	4
  3426  0302  0828               	movf	??__doprnt,w
  3427  0303  0080               	movwf	0
  3428  0304                     l2044:
  3429  0304  3001               	movlw	1
  3430  0305  00A8               	movwf	??__doprnt
  3431  0306  0830               	movf	__doprnt@pb,w
  3432  0307  0084               	movwf	4
  3433  0308  0828               	movf	??__doprnt,w
  3434  0309  0780               	addwf	0,f
  3435  030A                     l2046:
  3436                           
  3437                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c90\common\doprnt.c: 1495:   };C:\Prog
      +                          ram Files\Microchip\xc8\v2.32\pic\sources\c90\common\doprnt.c: 1498:   prec = c;
  3438  030A  1283               	bcf	3,5	;RP0=0, select bank0
  3439  030B  1303               	bcf	3,6	;RP1=0, select bank0
  3440  030C  082F               	movf	__doprnt@c,w
  3441  030D  00A8               	movwf	??__doprnt
  3442  030E  0828               	movf	??__doprnt,w
  3443  030F  00AC               	movwf	__doprnt@prec
  3444                           
  3445                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c90\common\doprnt.c: 1500:   while(pre
      +                          c--) {
  3446  0310  2B64               	goto	l2058
  3447  0311                     l2048:
  3448                           
  3449                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c90\common\doprnt.c: 1504:    {;C:\Pro
      +                          gram Files\Microchip\xc8\v2.32\pic\sources\c90\common\doprnt.c: 1515:     c = (val / dpo
      +                          wers[(unsigned char)prec]) % 10 + '0';
  3450  0311  300A               	movlw	10
  3451  0312  00A0               	movwf	___lwmod@divisor
  3452  0313  3000               	movlw	0
  3453  0314  00A1               	movwf	___lwmod@divisor+1
  3454  0315  082C               	movf	__doprnt@prec,w
  3455  0316  00A8               	movwf	??__doprnt
  3456  0317  0728               	addwf	??__doprnt,w
  3457  0318  3E01               	addlw	low ((_dpowers-__stringbase)| (0+32768))
  3458  0319  0084               	movwf	4
  3459  031A  120A  118A  2400  120A  118A  	fcall	stringdir
  3460  031F  00F2               	movwf	___lwdiv@divisor
  3461  0320  120A  118A  2400  120A  118A  	fcall	stringdir
  3462  0325  00F3               	movwf	___lwdiv@divisor+1
  3463  0326  082E               	movf	__doprnt@val+1,w
  3464  0327  00F5               	movwf	___lwdiv@dividend+1
  3465  0328  082D               	movf	__doprnt@val,w
  3466  0329  00F4               	movwf	___lwdiv@dividend
  3467  032A  120A  118A  26B6  120A  118A  	fcall	___lwdiv
  3468  032F  0873               	movf	?___lwdiv+1,w
  3469  0330  1283               	bcf	3,5	;RP0=0, select bank0
  3470  0331  1303               	bcf	3,6	;RP1=0, select bank0
  3471  0332  00A3               	movwf	___lwmod@dividend+1
  3472  0333  0872               	movf	?___lwdiv,w
  3473  0334  00A2               	movwf	___lwmod@dividend
  3474  0335  120A  118A  2737  120A  118A  	fcall	___lwmod
  3475  033A  1283               	bcf	3,5	;RP0=0, select bank0
  3476  033B  1303               	bcf	3,6	;RP1=0, select bank0
  3477  033C  0820               	movf	?___lwmod,w
  3478  033D  3E30               	addlw	48
  3479  033E  00A9               	movwf	??__doprnt+1
  3480  033F  0829               	movf	??__doprnt+1,w
  3481  0340  00AF               	movwf	__doprnt@c
  3482  0341                     l2050:
  3483  0341  0A30               	incf	__doprnt@pb,w
  3484  0342  0084               	movwf	4
  3485  0343  1383               	bcf	3,7	;select IRP bank0
  3486  0344  0800               	movf	0,w
  3487  0345  1903               	btfsc	3,2
  3488  0346  2B48               	goto	u1501
  3489  0347  2B49               	goto	u1500
  3490  0348                     u1501:
  3491  0348  2B56               	goto	l2054
  3492  0349                     u1500:
  3493  0349                     l2052:
  3494  0349  082F               	movf	__doprnt@c,w
  3495  034A  00A8               	movwf	??__doprnt
  3496  034B  0828               	movf	??__doprnt,w
  3497  034C  00F2               	movwf	putch@data
  3498  034D  0A30               	incf	__doprnt@pb,w
  3499  034E  0084               	movwf	4
  3500  034F  0800               	movf	0,w
  3501  0350  120A  118A  2026  120A  118A  	fcall	fptable
  3502  0355  2B64               	goto	l2058
  3503  0356                     l2054:
  3504  0356  082F               	movf	__doprnt@c,w
  3505  0357  00A8               	movwf	??__doprnt
  3506  0358  0830               	movf	__doprnt@pb,w
  3507  0359  0084               	movwf	4
  3508  035A  0800               	movf	0,w
  3509  035B  0084               	movwf	4
  3510  035C  0828               	movf	??__doprnt,w
  3511  035D  0080               	movwf	0
  3512  035E                     l2056:
  3513  035E  3001               	movlw	1
  3514  035F  00A8               	movwf	??__doprnt
  3515  0360  0830               	movf	__doprnt@pb,w
  3516  0361  0084               	movwf	4
  3517  0362  0828               	movf	??__doprnt,w
  3518  0363  0780               	addwf	0,f
  3519  0364                     l2058:
  3520                           
  3521                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c90\common\doprnt.c: 1500:   while(pre
      +                          c--) {
  3522  0364  30FF               	movlw	255
  3523  0365  1283               	bcf	3,5	;RP0=0, select bank0
  3524  0366  1303               	bcf	3,6	;RP1=0, select bank0
  3525  0367  00A8               	movwf	??__doprnt
  3526  0368  0828               	movf	??__doprnt,w
  3527  0369  07AC               	addwf	__doprnt@prec,f
  3528  036A  0A2C               	incf	__doprnt@prec,w
  3529  036B  1D03               	btfss	3,2
  3530  036C  2B6E               	goto	u1511
  3531  036D  2B6F               	goto	u1510
  3532  036E                     u1511:
  3533  036E  2B11               	goto	l2048
  3534  036F                     u1510:
  3535  036F                     l2060:
  3536                           
  3537                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c90\common\doprnt.c: 553:  while((c = 
      +                          *f++)) {
  3538  036F  3001               	movlw	1
  3539  0370  1283               	bcf	3,5	;RP0=0, select bank0
  3540  0371  1303               	bcf	3,6	;RP1=0, select bank0
  3541  0372  07A6               	addwf	__doprnt@f,f
  3542  0373  30FF               	movlw	-1
  3543  0374  0726               	addwf	__doprnt@f,w
  3544  0375  0084               	movwf	4
  3545  0376  120A  118A  2400  120A  118A  	fcall	stringdir
  3546  037B  00A8               	movwf	??__doprnt
  3547  037C  0828               	movf	??__doprnt,w
  3548  037D  00AF               	movwf	__doprnt@c
  3549  037E  082F               	movf	__doprnt@c,w
  3550  037F  1D03               	btfss	3,2
  3551  0380  2B82               	goto	u1521
  3552  0381  2B83               	goto	u1520
  3553  0382                     u1521:
  3554  0382  2A54               	goto	l2000
  3555  0383                     u1520:
  3556  0383                     l2062:
  3557                           
  3558                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c90\common\doprnt.c: 1566:  return 0;
  3559  0383  01A6               	clrf	?__doprnt
  3560  0384  01A7               	clrf	?__doprnt+1
  3561  0385                     l790:
  3562  0385  0008               	return
  3563  0386                     __end_of__doprnt:
  3564                           
  3565                           	psect	text15
  3566  03F3                     __ptext15:	
  3567 ;; *************** function _putch *****************
  3568 ;; Defined at:
  3569 ;;		line 206 in file "lab3.c"
  3570 ;; Parameters:    Size  Location     Type
  3571 ;;  data            1    2[COMMON] unsigned char 
  3572 ;; Auto vars:     Size  Location     Type
  3573 ;;		None
  3574 ;; Return value:  Size  Location     Type
  3575 ;;                  1    wreg      void 
  3576 ;; Registers used:
  3577 ;;		wreg
  3578 ;; Tracked objects:
  3579 ;;		On entry : 0/0
  3580 ;;		On exit  : 0/0
  3581 ;;		Unchanged: 0/0
  3582 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  3583 ;;      Params:         1       0       0       0       0
  3584 ;;      Locals:         0       0       0       0       0
  3585 ;;      Temps:          0       0       0       0       0
  3586 ;;      Totals:         1       0       0       0       0
  3587 ;;Total ram usage:        1 bytes
  3588 ;; Hardware stack levels used: 1
  3589 ;; Hardware stack levels required when called: 1
  3590 ;; This function calls:
  3591 ;;		Nothing
  3592 ;; This function is called by:
  3593 ;;		_printf
  3594 ;;		__doprnt
  3595 ;; This function uses a non-reentrant model
  3596 ;;
  3597                           
  3598                           
  3599                           ;psect for function _putch
  3600  03F3                     _putch:
  3601  03F3                     l1460:	
  3602                           ;incstack = 0
  3603                           ; Regs used in _putch: [wreg]
  3604                           
  3605  03F3                     l183:
  3606  03F3  1283               	bcf	3,5	;RP0=0, select bank0
  3607  03F4  1303               	bcf	3,6	;RP1=0, select bank0
  3608  03F5  1E0C               	btfss	12,4	;volatile
  3609  03F6  2BF8               	goto	u691
  3610  03F7  2BF9               	goto	u690
  3611  03F8                     u691:
  3612  03F8  2BF3               	goto	l183
  3613  03F9                     u690:
  3614  03F9                     l1462:
  3615  03F9  0872               	movf	putch@data,w
  3616  03FA  0099               	movwf	25	;volatile
  3617  03FB                     l186:
  3618  03FB  0008               	return
  3619  03FC                     __end_of_putch:
  3620                           
  3621                           	psect	text16
  3622  0737                     __ptext16:	
  3623 ;; *************** function ___lwmod *****************
  3624 ;; Defined at:
  3625 ;;		line 5 in file "C:\Program Files\Microchip\xc8\v2.32\pic\sources\c90\common\lwmod.c"
  3626 ;; Parameters:    Size  Location     Type
  3627 ;;  divisor         2    0[BANK0 ] unsigned int 
  3628 ;;  dividend        2    2[BANK0 ] unsigned int 
  3629 ;; Auto vars:     Size  Location     Type
  3630 ;;  counter         1    5[BANK0 ] unsigned char 
  3631 ;; Return value:  Size  Location     Type
  3632 ;;                  2    0[BANK0 ] unsigned int 
  3633 ;; Registers used:
  3634 ;;		wreg, status,2, status,0
  3635 ;; Tracked objects:
  3636 ;;		On entry : 0/0
  3637 ;;		On exit  : 0/0
  3638 ;;		Unchanged: 0/0
  3639 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  3640 ;;      Params:         0       4       0       0       0
  3641 ;;      Locals:         0       1       0       0       0
  3642 ;;      Temps:          0       1       0       0       0
  3643 ;;      Totals:         0       6       0       0       0
  3644 ;;Total ram usage:        6 bytes
  3645 ;; Hardware stack levels used: 1
  3646 ;; Hardware stack levels required when called: 1
  3647 ;; This function calls:
  3648 ;;		Nothing
  3649 ;; This function is called by:
  3650 ;;		__doprnt
  3651 ;; This function uses a non-reentrant model
  3652 ;;
  3653                           
  3654                           
  3655                           ;psect for function ___lwmod
  3656  0737                     ___lwmod:
  3657  0737                     l1976:	
  3658                           ;incstack = 0
  3659                           ; Regs used in ___lwmod: [wreg+status,2+status,0]
  3660                           
  3661  0737  1283               	bcf	3,5	;RP0=0, select bank0
  3662  0738  1303               	bcf	3,6	;RP1=0, select bank0
  3663  0739  0820               	movf	___lwmod@divisor,w
  3664  073A  0421               	iorwf	___lwmod@divisor+1,w
  3665  073B  1903               	btfsc	3,2
  3666  073C  2F3E               	goto	u1371
  3667  073D  2F3F               	goto	u1370
  3668  073E                     u1371:
  3669  073E  2F6E               	goto	l1994
  3670  073F                     u1370:
  3671  073F                     l1978:
  3672  073F  01A5               	clrf	___lwmod@counter
  3673  0740  0AA5               	incf	___lwmod@counter,f
  3674  0741  2F4D               	goto	l1984
  3675  0742                     l1980:
  3676  0742  3001               	movlw	1
  3677  0743                     u1385:
  3678  0743  1003               	clrc
  3679  0744  0DA0               	rlf	___lwmod@divisor,f
  3680  0745  0DA1               	rlf	___lwmod@divisor+1,f
  3681  0746  3EFF               	addlw	-1
  3682  0747  1D03               	skipz
  3683  0748  2F43               	goto	u1385
  3684  0749                     l1982:
  3685  0749  3001               	movlw	1
  3686  074A  00A4               	movwf	??___lwmod
  3687  074B  0824               	movf	??___lwmod,w
  3688  074C  07A5               	addwf	___lwmod@counter,f
  3689  074D                     l1984:
  3690  074D  1FA1               	btfss	___lwmod@divisor+1,7
  3691  074E  2F50               	goto	u1391
  3692  074F  2F51               	goto	u1390
  3693  0750                     u1391:
  3694  0750  2F42               	goto	l1980
  3695  0751                     u1390:
  3696  0751                     l1986:
  3697  0751  0821               	movf	___lwmod@divisor+1,w
  3698  0752  0223               	subwf	___lwmod@dividend+1,w
  3699  0753  1D03               	skipz
  3700  0754  2F57               	goto	u1405
  3701  0755  0820               	movf	___lwmod@divisor,w
  3702  0756  0222               	subwf	___lwmod@dividend,w
  3703  0757                     u1405:
  3704  0757  1C03               	skipc
  3705  0758  2F5A               	goto	u1401
  3706  0759  2F5B               	goto	u1400
  3707  075A                     u1401:
  3708  075A  2F61               	goto	l1990
  3709  075B                     u1400:
  3710  075B                     l1988:
  3711  075B  0820               	movf	___lwmod@divisor,w
  3712  075C  02A2               	subwf	___lwmod@dividend,f
  3713  075D  0821               	movf	___lwmod@divisor+1,w
  3714  075E  1C03               	skipc
  3715  075F  03A3               	decf	___lwmod@dividend+1,f
  3716  0760  02A3               	subwf	___lwmod@dividend+1,f
  3717  0761                     l1990:
  3718  0761  3001               	movlw	1
  3719  0762                     u1415:
  3720  0762  1003               	clrc
  3721  0763  0CA1               	rrf	___lwmod@divisor+1,f
  3722  0764  0CA0               	rrf	___lwmod@divisor,f
  3723  0765  3EFF               	addlw	-1
  3724  0766  1D03               	skipz
  3725  0767  2F62               	goto	u1415
  3726  0768                     l1992:
  3727  0768  3001               	movlw	1
  3728  0769  02A5               	subwf	___lwmod@counter,f
  3729  076A  1D03               	btfss	3,2
  3730  076B  2F6D               	goto	u1421
  3731  076C  2F6E               	goto	u1420
  3732  076D                     u1421:
  3733  076D  2F51               	goto	l1986
  3734  076E                     u1420:
  3735  076E                     l1994:
  3736  076E  0823               	movf	___lwmod@dividend+1,w
  3737  076F  00A1               	movwf	?___lwmod+1
  3738  0770  0822               	movf	___lwmod@dividend,w
  3739  0771  00A0               	movwf	?___lwmod
  3740  0772                     l557:
  3741  0772  0008               	return
  3742  0773                     __end_of___lwmod:
  3743                           
  3744                           	psect	text17
  3745  06B6                     __ptext17:	
  3746 ;; *************** function ___lwdiv *****************
  3747 ;; Defined at:
  3748 ;;		line 5 in file "C:\Program Files\Microchip\xc8\v2.32\pic\sources\c90\common\lwdiv.c"
  3749 ;; Parameters:    Size  Location     Type
  3750 ;;  divisor         2    2[COMMON] unsigned int 
  3751 ;;  dividend        2    4[COMMON] unsigned int 
  3752 ;; Auto vars:     Size  Location     Type
  3753 ;;  quotient        2    7[COMMON] unsigned int 
  3754 ;;  counter         1    9[COMMON] unsigned char 
  3755 ;; Return value:  Size  Location     Type
  3756 ;;                  2    2[COMMON] unsigned int 
  3757 ;; Registers used:
  3758 ;;		wreg, status,2, status,0
  3759 ;; Tracked objects:
  3760 ;;		On entry : 0/0
  3761 ;;		On exit  : 0/0
  3762 ;;		Unchanged: 0/0
  3763 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  3764 ;;      Params:         4       0       0       0       0
  3765 ;;      Locals:         3       0       0       0       0
  3766 ;;      Temps:          1       0       0       0       0
  3767 ;;      Totals:         8       0       0       0       0
  3768 ;;Total ram usage:        8 bytes
  3769 ;; Hardware stack levels used: 1
  3770 ;; Hardware stack levels required when called: 1
  3771 ;; This function calls:
  3772 ;;		Nothing
  3773 ;; This function is called by:
  3774 ;;		__doprnt
  3775 ;; This function uses a non-reentrant model
  3776 ;;
  3777                           
  3778                           
  3779                           ;psect for function ___lwdiv
  3780  06B6                     ___lwdiv:
  3781  06B6                     l1466:	
  3782                           ;incstack = 0
  3783                           ; Regs used in ___lwdiv: [wreg+status,2+status,0]
  3784                           
  3785  06B6  01F7               	clrf	___lwdiv@quotient
  3786  06B7  01F8               	clrf	___lwdiv@quotient+1
  3787  06B8                     l1468:
  3788  06B8  0872               	movf	___lwdiv@divisor,w
  3789  06B9  0473               	iorwf	___lwdiv@divisor+1,w
  3790  06BA  1903               	btfsc	3,2
  3791  06BB  2EBD               	goto	u701
  3792  06BC  2EBE               	goto	u700
  3793  06BD                     u701:
  3794  06BD  2EF5               	goto	l1488
  3795  06BE                     u700:
  3796  06BE                     l1470:
  3797  06BE  01F9               	clrf	___lwdiv@counter
  3798  06BF  0AF9               	incf	___lwdiv@counter,f
  3799  06C0  2ECC               	goto	l1476
  3800  06C1                     l1472:
  3801  06C1  3001               	movlw	1
  3802  06C2                     u715:
  3803  06C2  1003               	clrc
  3804  06C3  0DF2               	rlf	___lwdiv@divisor,f
  3805  06C4  0DF3               	rlf	___lwdiv@divisor+1,f
  3806  06C5  3EFF               	addlw	-1
  3807  06C6  1D03               	skipz
  3808  06C7  2EC2               	goto	u715
  3809  06C8                     l1474:
  3810  06C8  3001               	movlw	1
  3811  06C9  00F6               	movwf	??___lwdiv
  3812  06CA  0876               	movf	??___lwdiv,w
  3813  06CB  07F9               	addwf	___lwdiv@counter,f
  3814  06CC                     l1476:
  3815  06CC  1FF3               	btfss	___lwdiv@divisor+1,7
  3816  06CD  2ECF               	goto	u721
  3817  06CE  2ED0               	goto	u720
  3818  06CF                     u721:
  3819  06CF  2EC1               	goto	l1472
  3820  06D0                     u720:
  3821  06D0                     l1478:
  3822  06D0  3001               	movlw	1
  3823  06D1                     u735:
  3824  06D1  1003               	clrc
  3825  06D2  0DF7               	rlf	___lwdiv@quotient,f
  3826  06D3  0DF8               	rlf	___lwdiv@quotient+1,f
  3827  06D4  3EFF               	addlw	-1
  3828  06D5  1D03               	skipz
  3829  06D6  2ED1               	goto	u735
  3830  06D7  0873               	movf	___lwdiv@divisor+1,w
  3831  06D8  0275               	subwf	___lwdiv@dividend+1,w
  3832  06D9  1D03               	skipz
  3833  06DA  2EDD               	goto	u745
  3834  06DB  0872               	movf	___lwdiv@divisor,w
  3835  06DC  0274               	subwf	___lwdiv@dividend,w
  3836  06DD                     u745:
  3837  06DD  1C03               	skipc
  3838  06DE  2EE0               	goto	u741
  3839  06DF  2EE1               	goto	u740
  3840  06E0                     u741:
  3841  06E0  2EE8               	goto	l1484
  3842  06E1                     u740:
  3843  06E1                     l1480:
  3844  06E1  0872               	movf	___lwdiv@divisor,w
  3845  06E2  02F4               	subwf	___lwdiv@dividend,f
  3846  06E3  0873               	movf	___lwdiv@divisor+1,w
  3847  06E4  1C03               	skipc
  3848  06E5  03F5               	decf	___lwdiv@dividend+1,f
  3849  06E6  02F5               	subwf	___lwdiv@dividend+1,f
  3850  06E7                     l1482:
  3851  06E7  1477               	bsf	___lwdiv@quotient,0
  3852  06E8                     l1484:
  3853  06E8  3001               	movlw	1
  3854  06E9                     u755:
  3855  06E9  1003               	clrc
  3856  06EA  0CF3               	rrf	___lwdiv@divisor+1,f
  3857  06EB  0CF2               	rrf	___lwdiv@divisor,f
  3858  06EC  3EFF               	addlw	-1
  3859  06ED  1D03               	skipz
  3860  06EE  2EE9               	goto	u755
  3861  06EF                     l1486:
  3862  06EF  3001               	movlw	1
  3863  06F0  02F9               	subwf	___lwdiv@counter,f
  3864  06F1  1D03               	btfss	3,2
  3865  06F2  2EF4               	goto	u761
  3866  06F3  2EF5               	goto	u760
  3867  06F4                     u761:
  3868  06F4  2ED0               	goto	l1478
  3869  06F5                     u760:
  3870  06F5                     l1488:
  3871  06F5  0878               	movf	___lwdiv@quotient+1,w
  3872  06F6  00F3               	movwf	?___lwdiv+1
  3873  06F7  0877               	movf	___lwdiv@quotient,w
  3874  06F8  00F2               	movwf	?___lwdiv
  3875  06F9                     l547:
  3876  06F9  0008               	return
  3877  06FA                     __end_of___lwdiv:
  3878                           
  3879                           	psect	text18
  3880  04A8                     __ptext18:	
  3881 ;; *************** function _atoi *****************
  3882 ;; Defined at:
  3883 ;;		line 5 in file "C:\Program Files\Microchip\xc8\v2.32\pic\sources\c90\common\atoi.c"
  3884 ;; Parameters:    Size  Location     Type
  3885 ;;  s               1    wreg     PTR const unsigned char 
  3886 ;;		 -> concat@s1(20), 
  3887 ;; Auto vars:     Size  Location     Type
  3888 ;;  s               1    5[BANK0 ] PTR const unsigned char 
  3889 ;;		 -> concat@s1(20), 
  3890 ;;  a               2    3[BANK0 ] int 
  3891 ;;  sign            1    2[BANK0 ] unsigned char 
  3892 ;; Return value:  Size  Location     Type
  3893 ;;                  2    8[COMMON] int 
  3894 ;; Registers used:
  3895 ;;		wreg, fsr0l, fsr0h, status,2, status,0, pclath, cstack
  3896 ;; Tracked objects:
  3897 ;;		On entry : 0/0
  3898 ;;		On exit  : 0/0
  3899 ;;		Unchanged: 0/0
  3900 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  3901 ;;      Params:         2       0       0       0       0
  3902 ;;      Locals:         0       4       0       0       0
  3903 ;;      Temps:          0       2       0       0       0
  3904 ;;      Totals:         2       6       0       0       0
  3905 ;;Total ram usage:        8 bytes
  3906 ;; Hardware stack levels used: 1
  3907 ;; Hardware stack levels required when called: 2
  3908 ;; This function calls:
  3909 ;;		___wmul
  3910 ;;		_isdigit
  3911 ;; This function is called by:
  3912 ;;		_concat
  3913 ;; This function uses a non-reentrant model
  3914 ;;
  3915                           
  3916                           
  3917                           ;psect for function _atoi
  3918  04A8                     _atoi:
  3919                           
  3920                           ;incstack = 0
  3921                           ; Regs used in _atoi: [wreg-fsr0h+status,2+status,0+pclath+cstack]
  3922                           ;atoi@s stored from wreg
  3923  04A8  1283               	bcf	3,5	;RP0=0, select bank0
  3924  04A9  1303               	bcf	3,6	;RP1=0, select bank0
  3925  04AA  00A5               	movwf	atoi@s
  3926  04AB                     l2082:
  3927  04AB  2CB0               	goto	l2086
  3928  04AC                     l2084:
  3929  04AC  3001               	movlw	1
  3930  04AD  00A0               	movwf	??_atoi
  3931  04AE  0820               	movf	??_atoi,w
  3932  04AF  07A5               	addwf	atoi@s,f
  3933  04B0                     l2086:
  3934  04B0  0825               	movf	atoi@s,w
  3935  04B1  0084               	movwf	4
  3936  04B2  3020               	movlw	32
  3937  04B3  1383               	bcf	3,7	;select IRP bank0
  3938  04B4  0600               	xorwf	0,w
  3939  04B5  1903               	btfsc	3,2
  3940  04B6  2CB8               	goto	u1531
  3941  04B7  2CB9               	goto	u1530
  3942  04B8                     u1531:
  3943  04B8  2CAC               	goto	l2084
  3944  04B9                     u1530:
  3945  04B9                     l2088:
  3946  04B9  0825               	movf	atoi@s,w
  3947  04BA  0084               	movwf	4
  3948  04BB  3009               	movlw	9
  3949  04BC  0600               	xorwf	0,w
  3950  04BD  1903               	btfsc	3,2
  3951  04BE  2CC0               	goto	u1541
  3952  04BF  2CC1               	goto	u1540
  3953  04C0                     u1541:
  3954  04C0  2CAC               	goto	l2084
  3955  04C1                     u1540:
  3956  04C1                     l2090:
  3957  04C1  01A3               	clrf	atoi@a
  3958  04C2  01A4               	clrf	atoi@a+1
  3959  04C3  01A2               	clrf	atoi@sign
  3960  04C4                     l2092:
  3961  04C4  0825               	movf	atoi@s,w
  3962  04C5  0084               	movwf	4
  3963  04C6  302D               	movlw	45
  3964  04C7  0600               	xorwf	0,w
  3965  04C8  1D03               	btfss	3,2
  3966  04C9  2CCB               	goto	u1551
  3967  04CA  2CCC               	goto	u1550
  3968  04CB                     u1551:
  3969  04CB  2CD5               	goto	l2096
  3970  04CC                     u1550:
  3971  04CC                     l2094:
  3972  04CC  3001               	movlw	1
  3973  04CD  00A0               	movwf	??_atoi
  3974  04CE  0820               	movf	??_atoi,w
  3975  04CF  07A2               	addwf	atoi@sign,f
  3976  04D0  3001               	movlw	1
  3977  04D1  00A0               	movwf	??_atoi
  3978  04D2  0820               	movf	??_atoi,w
  3979  04D3  07A5               	addwf	atoi@s,f
  3980  04D4  2D07               	goto	l2104
  3981  04D5                     l2096:
  3982  04D5  0825               	movf	atoi@s,w
  3983  04D6  0084               	movwf	4
  3984  04D7  302B               	movlw	43
  3985  04D8  0600               	xorwf	0,w
  3986  04D9  1D03               	btfss	3,2
  3987  04DA  2CDC               	goto	u1561
  3988  04DB  2CDD               	goto	u1560
  3989  04DC                     u1561:
  3990  04DC  2D07               	goto	l2104
  3991  04DD                     u1560:
  3992  04DD                     l2098:
  3993  04DD  3001               	movlw	1
  3994  04DE  00A0               	movwf	??_atoi
  3995  04DF  0820               	movf	??_atoi,w
  3996  04E0  07A5               	addwf	atoi@s,f
  3997  04E1  2D07               	goto	l2104
  3998  04E2                     l2100:
  3999  04E2  1283               	bcf	3,5	;RP0=0, select bank0
  4000  04E3  1303               	bcf	3,6	;RP1=0, select bank0
  4001  04E4  0825               	movf	atoi@s,w
  4002  04E5  0084               	movwf	4
  4003  04E6  0824               	movf	atoi@a+1,w
  4004  04E7  00F3               	movwf	___wmul@multiplier+1
  4005  04E8  0823               	movf	atoi@a,w
  4006  04E9  00F2               	movwf	___wmul@multiplier
  4007  04EA  300A               	movlw	10
  4008  04EB  00F4               	movwf	___wmul@multiplicand
  4009  04EC  3000               	movlw	0
  4010  04ED  00F5               	movwf	___wmul@multiplicand+1
  4011  04EE  120A  118A  27D4  120A  118A  	fcall	___wmul
  4012  04F3  1383               	bcf	3,7	;select IRP bank0
  4013  04F4  0800               	movf	0,w
  4014  04F5  0772               	addwf	?___wmul,w
  4015  04F6  1283               	bcf	3,5	;RP0=0, select bank0
  4016  04F7  1303               	bcf	3,6	;RP1=0, select bank0
  4017  04F8  00A0               	movwf	??_atoi
  4018  04F9  3000               	movlw	0
  4019  04FA  1803               	skipnc
  4020  04FB  3001               	movlw	1
  4021  04FC  0773               	addwf	?___wmul+1,w
  4022  04FD  00A1               	movwf	??_atoi+1
  4023  04FE  0820               	movf	??_atoi,w
  4024  04FF  3ED0               	addlw	208
  4025  0500  00A3               	movwf	atoi@a
  4026  0501  0821               	movf	??_atoi+1,w
  4027  0502  1803               	skipnc
  4028  0503  3E01               	addlw	1
  4029  0504  3EFF               	addlw	255
  4030  0505  00A4               	movwf	atoi@a+1
  4031  0506  2CDD               	goto	l2098
  4032  0507                     l2104:
  4033  0507  0825               	movf	atoi@s,w
  4034  0508  0084               	movwf	4
  4035  0509  0800               	movf	0,w
  4036  050A  120A  118A  23D8  120A  118A  	fcall	_isdigit
  4037  050F  1803               	btfsc	3,0
  4038  0510  2D12               	goto	u1571
  4039  0511  2D13               	goto	u1570
  4040  0512                     u1571:
  4041  0512  2CE2               	goto	l2100
  4042  0513                     u1570:
  4043  0513                     l2106:
  4044  0513  1283               	bcf	3,5	;RP0=0, select bank0
  4045  0514  1303               	bcf	3,6	;RP1=0, select bank0
  4046  0515  0822               	movf	atoi@sign,w
  4047  0516  1903               	btfsc	3,2
  4048  0517  2D19               	goto	u1581
  4049  0518  2D1A               	goto	u1580
  4050  0519                     u1581:
  4051  0519  2D26               	goto	l2112
  4052  051A                     u1580:
  4053  051A                     l2108:
  4054  051A  0923               	comf	atoi@a,w
  4055  051B  00A0               	movwf	??_atoi
  4056  051C  0924               	comf	atoi@a+1,w
  4057  051D  00A1               	movwf	??_atoi+1
  4058  051E  0AA0               	incf	??_atoi,f
  4059  051F  1903               	skipnz
  4060  0520  0AA1               	incf	??_atoi+1,f
  4061  0521  0820               	movf	??_atoi,w
  4062  0522  00F8               	movwf	?_atoi
  4063  0523  0821               	movf	??_atoi+1,w
  4064  0524  00F9               	movwf	?_atoi+1
  4065  0525  2D2A               	goto	l738
  4066  0526                     l2112:
  4067  0526  0824               	movf	atoi@a+1,w
  4068  0527  00F9               	movwf	?_atoi+1
  4069  0528  0823               	movf	atoi@a,w
  4070  0529  00F8               	movwf	?_atoi
  4071  052A                     l738:
  4072  052A  0008               	return
  4073  052B                     __end_of_atoi:
  4074                           
  4075                           	psect	text19
  4076  03D8                     __ptext19:	
  4077 ;; *************** function _isdigit *****************
  4078 ;; Defined at:
  4079 ;;		line 8 in file "C:\Program Files\Microchip\xc8\v2.32\pic\sources\c90\common\isdigit.c"
  4080 ;; Parameters:    Size  Location     Type
  4081 ;;  c               1    wreg     unsigned char 
  4082 ;; Auto vars:     Size  Location     Type
  4083 ;;  c               1    3[COMMON] unsigned char 
  4084 ;; Return value:  Size  Location     Type
  4085 ;;		None               void
  4086 ;; Registers used:
  4087 ;;		wreg, status,2, status,0
  4088 ;; Tracked objects:
  4089 ;;		On entry : 0/0
  4090 ;;		On exit  : 0/0
  4091 ;;		Unchanged: 0/0
  4092 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  4093 ;;      Params:         0       0       0       0       0
  4094 ;;      Locals:         2       0       0       0       0
  4095 ;;      Temps:          0       0       0       0       0
  4096 ;;      Totals:         2       0       0       0       0
  4097 ;;Total ram usage:        2 bytes
  4098 ;; Hardware stack levels used: 1
  4099 ;; Hardware stack levels required when called: 1
  4100 ;; This function calls:
  4101 ;;		Nothing
  4102 ;; This function is called by:
  4103 ;;		_atoi
  4104 ;; This function uses a non-reentrant model
  4105 ;;
  4106                           
  4107                           
  4108                           ;psect for function _isdigit
  4109  03D8                     _isdigit:
  4110                           
  4111                           ;incstack = 0
  4112                           ; Regs used in _isdigit: [wreg+status,2+status,0]
  4113                           ;isdigit@c stored from wreg
  4114  03D8  00F3               	movwf	isdigit@c
  4115  03D9                     l1528:
  4116  03D9  01F2               	clrf	_isdigit$1026
  4117  03DA                     l1530:
  4118  03DA  303A               	movlw	58
  4119  03DB  0273               	subwf	isdigit@c,w
  4120  03DC  1803               	skipnc
  4121  03DD  2BDF               	goto	u871
  4122  03DE  2BE0               	goto	u870
  4123  03DF                     u871:
  4124  03DF  2BE8               	goto	l1536
  4125  03E0                     u870:
  4126  03E0                     l1532:
  4127  03E0  3030               	movlw	48
  4128  03E1  0273               	subwf	isdigit@c,w
  4129  03E2  1C03               	skipc
  4130  03E3  2BE5               	goto	u881
  4131  03E4  2BE6               	goto	u880
  4132  03E5                     u881:
  4133  03E5  2BE8               	goto	l1536
  4134  03E6                     u880:
  4135  03E6                     l1534:
  4136  03E6  01F2               	clrf	_isdigit$1026
  4137  03E7  0AF2               	incf	_isdigit$1026,f
  4138  03E8                     l1536:
  4139  03E8  0C72               	rrf	_isdigit$1026,w
  4140  03E9                     l743:
  4141  03E9  0008               	return
  4142  03EA                     __end_of_isdigit:
  4143                           
  4144                           	psect	text20
  4145  07D4                     __ptext20:	
  4146 ;; *************** function ___wmul *****************
  4147 ;; Defined at:
  4148 ;;		line 15 in file "C:\Program Files\Microchip\xc8\v2.32\pic\sources\c90\common\Umul16.c"
  4149 ;; Parameters:    Size  Location     Type
  4150 ;;  multiplier      2    2[COMMON] unsigned int 
  4151 ;;  multiplicand    2    4[COMMON] unsigned int 
  4152 ;; Auto vars:     Size  Location     Type
  4153 ;;  product         2    6[COMMON] unsigned int 
  4154 ;; Return value:  Size  Location     Type
  4155 ;;                  2    2[COMMON] unsigned int 
  4156 ;; Registers used:
  4157 ;;		wreg, status,2, status,0
  4158 ;; Tracked objects:
  4159 ;;		On entry : 0/0
  4160 ;;		On exit  : 0/0
  4161 ;;		Unchanged: 0/0
  4162 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  4163 ;;      Params:         4       0       0       0       0
  4164 ;;      Locals:         2       0       0       0       0
  4165 ;;      Temps:          0       0       0       0       0
  4166 ;;      Totals:         6       0       0       0       0
  4167 ;;Total ram usage:        6 bytes
  4168 ;; Hardware stack levels used: 1
  4169 ;; Hardware stack levels required when called: 1
  4170 ;; This function calls:
  4171 ;;		Nothing
  4172 ;; This function is called by:
  4173 ;;		_atoi
  4174 ;; This function uses a non-reentrant model
  4175 ;;
  4176                           
  4177                           
  4178                           ;psect for function ___wmul
  4179  07D4                     ___wmul:
  4180  07D4                     l1514:	
  4181                           ;incstack = 0
  4182                           ; Regs used in ___wmul: [wreg+status,2+status,0]
  4183                           
  4184  07D4  01F6               	clrf	___wmul@product
  4185  07D5  01F7               	clrf	___wmul@product+1
  4186  07D6                     l1516:
  4187  07D6  1C72               	btfss	___wmul@multiplier,0
  4188  07D7  2FD9               	goto	u831
  4189  07D8  2FDA               	goto	u830
  4190  07D9                     u831:
  4191  07D9  2FE0               	goto	l275
  4192  07DA                     u830:
  4193  07DA                     l1518:
  4194  07DA  0874               	movf	___wmul@multiplicand,w
  4195  07DB  07F6               	addwf	___wmul@product,f
  4196  07DC  1803               	skipnc
  4197  07DD  0AF7               	incf	___wmul@product+1,f
  4198  07DE  0875               	movf	___wmul@multiplicand+1,w
  4199  07DF  07F7               	addwf	___wmul@product+1,f
  4200  07E0                     l275:
  4201  07E0  3001               	movlw	1
  4202  07E1                     u845:
  4203  07E1  1003               	clrc
  4204  07E2  0DF4               	rlf	___wmul@multiplicand,f
  4205  07E3  0DF5               	rlf	___wmul@multiplicand+1,f
  4206  07E4  3EFF               	addlw	-1
  4207  07E5  1D03               	skipz
  4208  07E6  2FE1               	goto	u845
  4209  07E7                     l1520:
  4210  07E7  3001               	movlw	1
  4211  07E8                     u855:
  4212  07E8  1003               	clrc
  4213  07E9  0CF3               	rrf	___wmul@multiplier+1,f
  4214  07EA  0CF2               	rrf	___wmul@multiplier,f
  4215  07EB  3EFF               	addlw	-1
  4216  07EC  1D03               	skipz
  4217  07ED  2FE8               	goto	u855
  4218  07EE                     l1522:
  4219  07EE  0872               	movf	___wmul@multiplier,w
  4220  07EF  0473               	iorwf	___wmul@multiplier+1,w
  4221  07F0  1D03               	btfss	3,2
  4222  07F1  2FF3               	goto	u861
  4223  07F2  2FF4               	goto	u860
  4224  07F3                     u861:
  4225  07F3  2FD6               	goto	l1516
  4226  07F4                     u860:
  4227  07F4                     l1524:
  4228  07F4  0877               	movf	___wmul@product+1,w
  4229  07F5  00F3               	movwf	?___wmul+1
  4230  07F6  0876               	movf	___wmul@product,w
  4231  07F7  00F2               	movwf	?___wmul
  4232  07F8                     l277:
  4233  07F8  0008               	return
  4234  07F9                     __end_of___wmul:
  4235                           
  4236                           	psect	text21
  4237  0FF9                     __ptext21:	
  4238 ;; *************** function _isr *****************
  4239 ;; Defined at:
  4240 ;;		line 58 in file "lab3.c"
  4241 ;; Parameters:    Size  Location     Type
  4242 ;;		None
  4243 ;; Auto vars:     Size  Location     Type
  4244 ;;		None
  4245 ;; Return value:  Size  Location     Type
  4246 ;;                  1    wreg      void 
  4247 ;; Registers used:
  4248 ;;		None
  4249 ;; Tracked objects:
  4250 ;;		On entry : 0/0
  4251 ;;		On exit  : 0/0
  4252 ;;		Unchanged: 0/0
  4253 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  4254 ;;      Params:         0       0       0       0       0
  4255 ;;      Locals:         0       0       0       0       0
  4256 ;;      Temps:          2       0       0       0       0
  4257 ;;      Totals:         2       0       0       0       0
  4258 ;;Total ram usage:        2 bytes
  4259 ;; Hardware stack levels used: 1
  4260 ;; This function calls:
  4261 ;;		Nothing
  4262 ;; This function is called by:
  4263 ;;		Interrupt level 1
  4264 ;; This function uses a non-reentrant model
  4265 ;;
  4266                           
  4267                           
  4268                           ;psect for function _isr
  4269  0FF9                     _isr:
  4270  0FF9                     i1l140:
  4271  0FF9  0871               	movf	??_isr+1,w
  4272  0FFA  008A               	movwf	10
  4273  0FFB  0E70               	swapf	??_isr,w
  4274  0FFC  0083               	movwf	3
  4275  0FFD  0EFE               	swapf	btemp,f
  4276  0FFE  0E7E               	swapf	btemp,w
  4277  0FFF  0009               	retfie
  4278  1000                     __end_of_isr:
  4279  0002                     
  4280                           	psect	intentry
  4281  0004                     __pintentry:	
  4282                           ;incstack = 0
  4283                           ; Regs used in _isr: []
  4284                           
  4285  0004                     interrupt_function:
  4286  007E                     saved_w	set	btemp
  4287  0004  00FE               	movwf	btemp
  4288  0005  0E03               	swapf	3,w
  4289  0006  00F0               	movwf	??_isr
  4290  0007  080A               	movf	10,w
  4291  0008  00F1               	movwf	??_isr+1
  4292  0009  120A  158A  2FF9   	ljmp	_isr
  4293                           
  4294                           	psect	functab
  4295  0026                     __pfunctab:
  4296  0026                     __fptable:
  4297  0026                     fptable:
  4298  0026  00FF               	movwf	(btemp+1)& (0+127)
  4299  0027  3000               	movlw	high fptable
  4300  0028  008A               	movwf	10
  4301  0029  087F               	movf	(btemp+1)& (0+127),w
  4302  002A  0782               	addwf	2,f
  4303  002B                     fpbase:
  4304  002B  282B               	goto	fpbase	; Call via a null pointer and you will get stuck here.
  4305  002C                     fp__putch:
  4306  002C  120A  118A  2BF3   	ljmp	_putch
  4307  002F                     __end_of__fptable:
  4308  007E                     btemp	set	126	;btemp
  4309  007E                     wtemp0	set	126
  4310                           
  4311                           	psect	config
  4312                           
  4313                           ;Config register CONFIG1 @ 0x2007
  4314                           ;	Oscillator Selection bits
  4315                           ;	FOSC = INTRC_NOCLKOUT, INTOSCIO oscillator: I/O function on RA6/OSC2/CLKOUT pin, I/O f
      +                          unction on RA7/OSC1/CLKIN
  4316                           ;	Watchdog Timer Enable bit
  4317                           ;	WDTE = OFF, WDT disabled and can be enabled by SWDTEN bit of the WDTCON register
  4318                           ;	Power-up Timer Enable bit
  4319                           ;	PWRTE = OFF, PWRT disabled
  4320                           ;	RE3/MCLR pin function select bit
  4321                           ;	MCLRE = OFF, RE3/MCLR pin function is digital input, MCLR internally tied to VDD
  4322                           ;	Code Protection bit
  4323                           ;	CP = OFF, Program memory code protection is disabled
  4324                           ;	Data Code Protection bit
  4325                           ;	CPD = OFF, Data memory code protection is disabled
  4326                           ;	Brown Out Reset Selection bits
  4327                           ;	BOREN = OFF, BOR disabled
  4328                           ;	Internal External Switchover bit
  4329                           ;	IESO = OFF, Internal/External Switchover mode is disabled
  4330                           ;	Fail-Safe Clock Monitor Enabled bit
  4331                           ;	FCMEN = OFF, Fail-Safe Clock Monitor is disabled
  4332                           ;	Low Voltage Programming Enable bit
  4333                           ;	LVP = OFF, RB3 pin has digital I/O, HV on MCLR must be used for programming
  4334                           ;	In-Circuit Debugger Mode bit
  4335                           ;	DEBUG = 0x1, unprogrammed default
  4336  2007                     	org	8199
  4337  2007  20D4               	dw	8404
  4338                           
  4339                           ;Config register CONFIG2 @ 0x2008
  4340                           ;	Brown-out Reset Selection bit
  4341                           ;	BOR4V = BOR40V, Brown-out Reset set to 4.0V
  4342                           ;	Flash Program Memory Self Write Enable bits
  4343                           ;	WRT = OFF, Write protection off
  4344  2008                     	org	8200
  4345  2008  3FFF               	dw	16383

Data Sizes:
    Strings     152
    Constant    10
    Data        0
    BSS         15
    Persistent  0
    Stack       0

Auto Spaces:
    Space          Size  Autos    Used
    COMMON           14     10      12
    BANK0            80     74      77
    BANK1            80      5      15
    BANK3            96      0       0
    BANK2            96      0       0

Pointer List with Targets:

    strcat@from	PTR const unsigned char  size(1) Largest target is 20
		 -> concat@s2(BANK0[20]), 

    strcat@to	PTR unsigned char  size(1) Largest target is 20
		 -> concat@s1(BANK0[20]), 

    strcat@cp	PTR unsigned char  size(1) Largest target is 20
		 -> concat@s1(BANK0[20]), 

    sprintf@f	PTR const unsigned char  size(1) Largest target is 3
		 -> STR_14(CODE[3]), STR_13(CODE[3]), 

    sprintf@ap	PTR void [1] size(1) Largest target is 2
		 -> ?_sprintf(BANK0[2]), ?_printf(BANK0[2]), 

    sprintf@wh	PTR unsigned char  size(1) Largest target is 20
		 -> concat@s2(BANK0[20]), concat@s1(BANK0[20]), 

    pb.func	PTR FTN(unsigned char ,)void  size(1) Largest target is 1
		 -> Absolute function(), putch(), 

    pb.ptr	PTR unsigned char  size(1) Largest target is 20
		 -> NULL(NULL[0]), concat@s2(BANK0[20]), concat@s1(BANK0[20]), 

    _doprnt@ap	PTR PTR void  size(1) Largest target is 1
		 -> sprintf@ap(BANK0[1]), printf@ap(BANK0[1]), 

    _doprnt@f	PTR const unsigned char  size(1) Largest target is 31
		 -> STR_14(CODE[3]), STR_13(CODE[3]), STR_12(CODE[25]), STR_11(CODE[21]), 
		 -> STR_10(CODE[20]), STR_9(CODE[19]), STR_8(CODE[2]), STR_7(CODE[3]), 
		 -> STR_6(CODE[3]), STR_5(CODE[31]), STR_4(CODE[2]), STR_3(CODE[3]), 
		 -> STR_2(CODE[3]), STR_1(CODE[30]), 

    _doprnt@pb.func	PTR FTN(unsigned char ,)void  size(1) Largest target is 1
		 -> Absolute function(), putch(), 

    _doprnt@pb.ptr	PTR unsigned char  size(1) Largest target is 20
		 -> NULL(NULL[0]), concat@s2(BANK0[20]), concat@s1(BANK0[20]), 

    _doprnt@pb	PTR struct __prbuf size(1) Largest target is 3
		 -> sprintf@pb(BANK0[2]), printf@pb(BANK0[2]), 

    printf@f	PTR const unsigned char  size(1) Largest target is 31
		 -> STR_12(CODE[25]), STR_11(CODE[21]), STR_10(CODE[20]), STR_9(CODE[19]), 
		 -> STR_8(CODE[2]), STR_7(CODE[3]), STR_6(CODE[3]), STR_5(CODE[31]), 
		 -> STR_4(CODE[2]), STR_3(CODE[3]), STR_2(CODE[3]), STR_1(CODE[30]), 

    printf@ap	PTR void [1] size(1) Largest target is 2
		 -> ?_sprintf(BANK0[2]), ?_printf(BANK0[2]), 

    S1028__prbuf$func	PTR FTN(unsigned char ,)void  size(1) Largest target is 1
		 -> Absolute function(), putch(), 

    pb.func	PTR FTN(unsigned char ,)void  size(1) Largest target is 1
		 -> Absolute function(), putch(), 

    S1028__prbuf$ptr	PTR unsigned char  size(1) Largest target is 20
		 -> NULL(NULL[0]), concat@s2(BANK0[20]), concat@s1(BANK0[20]), 

    pb.ptr	PTR unsigned char  size(1) Largest target is 20
		 -> NULL(NULL[0]), concat@s2(BANK0[20]), concat@s1(BANK0[20]), 

    atoi@s	PTR const unsigned char  size(1) Largest target is 20
		 -> concat@s1(BANK0[20]), 

    sp__strcat	PTR unsigned char  size(1) Largest target is 20
		 -> concat@s1(BANK0[20]), 


Critical Paths under _main in COMMON

    _setup->_spiInit
    _mensaje->_division
    _division->___awmod
    _concat->_atoi
    __doprnt->___lwdiv
    ___lwmod->___lwdiv
    _atoi->___wmul

Critical Paths under _isr in COMMON

    None.

Critical Paths under _main in BANK0

    _mensaje->_concat
    _printf->__doprnt
    _division->___awdiv
    _concat->_sprintf
    _sprintf->__doprnt
    __doprnt->___lwmod

Critical Paths under _isr in BANK0

    None.

Critical Paths under _main in BANK1

    _main->_mensaje

Critical Paths under _isr in BANK1

    None.

Critical Paths under _main in BANK3

    None.

Critical Paths under _isr in BANK3

    None.

Critical Paths under _main in BANK2

    None.

Critical Paths under _isr in BANK2

    None.

Call Graph Tables:

 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (0) _main                                                 1     1      0    9221
                                             73 BANK0      1     1      0
                            _mensaje
                              _setup
                            _spiRead
                           _spiWrite
 ---------------------------------------------------------------------------------
 (1) _spiWrite                                             1     1      0      22
                                              2 COMMON     1     1      0
 ---------------------------------------------------------------------------------
 (1) _spiRead                                              0     0      0       0
                     _spiReceiveWait
 ---------------------------------------------------------------------------------
 (2) _spiReceiveWait                                       0     0      0       0
 ---------------------------------------------------------------------------------
 (1) _setup                                                0     0      0     360
                            _spiInit
 ---------------------------------------------------------------------------------
 (2) _spiInit                                              4     1      3     360
                                              2 COMMON     4     1      3
 ---------------------------------------------------------------------------------
 (1) _mensaje                                              5     5      0    8839
                                              0 BANK1      5     5      0
                             _concat
                           _division
                             _printf
 ---------------------------------------------------------------------------------
 (2) _printf                                               8     6      2    2949
                                             17 BANK0      8     6      2
                            __doprnt
 ---------------------------------------------------------------------------------
 (2) _division                                             4     4      0    1467
                                              9 COMMON     1     1      0
                                              4 BANK0      3     3      0
                            ___awdiv
                            ___awmod
 ---------------------------------------------------------------------------------
 (3) ___awmod                                              7     3      4     600
                                              2 COMMON     7     3      4
 ---------------------------------------------------------------------------------
 (3) ___awdiv                                              9     5      4     805
                                              2 COMMON     5     1      4
                                              0 BANK0      4     4      0
 ---------------------------------------------------------------------------------
 (2) _concat                                              47    43      4    4423
                                             26 BANK0     47    43      4
                               _atoi
                            _sprintf
                             _strcat
 ---------------------------------------------------------------------------------
 (3) _strcat                                               4     3      1     207
                                              2 COMMON     4     3      1
 ---------------------------------------------------------------------------------
 (3) _sprintf                                              9     6      3    2845
                                             17 BANK0      9     6      3
                            __doprnt
 ---------------------------------------------------------------------------------
 (3) __doprnt                                             19    17      2    2330
                                              6 BANK0     11     9      2
                   Absolute function *
                            ___lwdiv
                            ___lwmod
                              _putch *
 ---------------------------------------------------------------------------------
 (4) _putch                                                1     0      1     181
                                              2 COMMON     1     0      1
 ---------------------------------------------------------------------------------
 (4) ___lwmod                                              6     2      4     412
                                              0 BANK0      6     2      4
                            ___lwdiv (ARG)
 ---------------------------------------------------------------------------------
 (4) ___lwdiv                                              8     4      4     314
                                              2 COMMON     8     4      4
 ---------------------------------------------------------------------------------
 (4) Absolute function(Fake)                               1     0      1       0
 ---------------------------------------------------------------------------------
 (3) _atoi                                                 8     6      2     682
                                              8 COMMON     2     0      2
                                              0 BANK0      6     6      0
                             ___wmul
                            _isdigit
 ---------------------------------------------------------------------------------
 (4) _isdigit                                              2     2      0      68
                                              2 COMMON     2     2      0
 ---------------------------------------------------------------------------------
 (4) ___wmul                                               6     2      4     244
                                              2 COMMON     6     2      4
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 4
 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (6) _isr                                                  2     2      0       0
                                              0 COMMON     2     2      0
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 6
 ---------------------------------------------------------------------------------

 Call Graph Graphs:

 _main (ROOT)
   _mensaje
     _concat
       _atoi
         ___wmul
         _isdigit
       _sprintf
         __doprnt
           Absolute function(Fake) *
           ___lwdiv *
           ___lwmod *
             ___lwdiv (ARG)
           _putch *
       _strcat
     _division
       ___awdiv
       ___awmod
     _printf
       __doprnt
   _setup
     _spiInit
   _spiRead
     _spiReceiveWait
   _spiWrite

 _isr (ROOT)

 Address spaces:
Name               Size   Autos  Total    Cost      Usage
BITCOMMON            E      0       0       0        0.0%
EEDATA             100      0       0       0        0.0%
NULL                 0      0       0       0        0.0%
CODE                 0      0       0       0        0.0%
COMMON               E      A       C       1       85.7%
BITSFR0              0      0       0       1        0.0%
SFR0                 0      0       0       1        0.0%
BITSFR1              0      0       0       2        0.0%
SFR1                 0      0       0       2        0.0%
STACK                0      0       0       2        0.0%
ABS                  0      0      68       3        0.0%
BITBANK0            50      0       0       4        0.0%
BITSFR3              0      0       0       4        0.0%
SFR3                 0      0       0       4        0.0%
BANK0               50     4A      4D       5       96.2%
BITSFR2              0      0       0       5        0.0%
SFR2                 0      0       0       5        0.0%
BITBANK1            50      0       0       6        0.0%
BANK1               50      5       F       7       18.8%
BITBANK3            60      0       0       8        0.0%
BANK3               60      0       0       9        0.0%
BITBANK2            60      0       0      10        0.0%
BANK2               60      0       0      11        0.0%
DATA                 0      0      68      12        0.0%


Microchip Technology PIC Macro Assembler V2.32 build 20210201212658 
Symbol Table                                                                                   Thu Aug 05 11:59:54 2021

                      pc 0002              _SSPSTATbits 0094                       l31 03D2  
                     l32 03D7                       l41 0FF8                       l35 07F9  
                     l38 07FF                       l49 03F2             ___awdiv@sign 0021  
                     fsr 0004      ___wmul@multiplicand 0074                      l151 07AA  
                    l154 0595                      l180 024F                      l173 01B1  
                    l165 0190                      l158 0175                      l183 03F3  
                    l441 06B5                      l186 03FB                      l275 07E0  
                    l428 05FE                      l277 07F8                      l189 0736  
                    l547 06F9                      l557 0772                      l806 07D3  
                    l743 03E9                      l752 03C1                      l738 052A  
                    l790 0385                      l797 03A6                      u700 06BE  
                    u701 06BD                      u720 06D0                      u721 06CF  
                    u715 06C2                      u740 06E1                      u741 06E0  
                    u830 07DA                      u831 07D9                      u735 06D1  
                    u760 06F5                      u761 06F4                      u745 06DD  
                    u690 03F9                      u755 06E9                      u691 03F8  
                    u860 07F4                      u861 07F3                      u845 07E1  
                    u870 03E0                      u855 07E8                      u871 03DF  
                    u880 03E6                      u881 03E5                      u990 07BD  
                    u991 07BC                      _dec 00A7                      _cen 006A  
                    _con 00A4                      _isr 0FF9                      _var 00A5  
                    fsr0 0004                      _uni 00A6                      indf 0000  
           ___awmod@sign 0078                     l2000 0254                     l2002 025A  
                   l2010 0280                     l2100 04E2                     l2020 02B0  
                   l2004 0262                     l2030 02BB                     l2022 02B4  
                   l2014 0281                     l2006 0271                     l2112 0526  
                   l2104 0507                     l2040 02EF                     l2024 02B9  
                   l2016 029E                     l2008 0279                     l2120 059D  
                   l2200 006D                     l2106 0513                     l2050 0341  
                   l2042 02FC                     l2034 02D7                     l2018 02AC  
                   l2130 05B1                     l2122 05A2                     l2210 0095  
                   l2202 0071                     l2108 051A                     l2052 0349  
                   l2044 0304                     l2036 02E1                     l2060 036F  
                   l2140 05C7                     l2132 05B3                     l2124 05A4  
                   l2116 0596                     l2220 00C9                     l2212 00A3  
                   l2204 007F                     l2300 064B                     l2054 0356  
                   l2038 02E7                     l2046 030A                     l2062 0383  
                   l2070 0389                     l2150 05EA                     l2142 05CB  
                   l2134 05B9                     l2126 05A8                     l2118 0599  
                   l2230 00FF                     l2222 00D7                     l2214 00A7  
                   l2206 0083                     l2302 064E                     l1520 07E7  
                   l2056 035E                     l2048 0311                     l2072 038D  
                   l2144 05DC                     l2136 05BC                     l2152 05F0  
                   l2128 05AD                     l2160 052C                     l2240 0131  
                   l2232 010D                     l2224 00E5                     l2216 00B5  
                   l2208 0091                     l2304 0653                     l1522 07EE  
                   l1514 07D4                     l1530 03DA                     l2090 04C1  
                   l2082 04AB                     l2058 0364                     l2074 038E  
                   l2154 05F5                     l2146 05E2                     l2138 05C3  
                   l2162 0586                     l2170 03AB                     l2250 015B  
                   l2242 0135                     l2234 0111                     l2226 00EB  
                   l2218 00BB                     l1524 07F4                     l1516 07D6  
                   l1532 03E0                     l2092 04C4                     l2084 04AC  
                   l1460 03F3                     l2076 0392                     l2180 071A  
                   l2156 05FA                     l2148 05E3                     l2164 058B  
                   l2172 03AF                     l2260 018A                     l2252 0169  
                   l2244 0143                     l2236 011F                     l2228 00F9  
                   l1518 07DA                     l1534 03E6                     l2094 04CC  
                   l2086 04B0                     l1470 06BE                     l1462 03F9  
                   l2326 0293                     l2078 03A0                     l1630 07BE  
                   l2182 0726                     l2166 0590                     l2174 03B3  
                   l2270 01B7                     l2262 0196                     l2254 016F  
                   l2246 0147                     l2238 0123                     l2190 0037  
                   l1536 03E8                     l1528 03D9                     l2096 04D5  
                   l2088 04B9                     l1480 06E1                     l1472 06C1  
                   l1632 07C6                     l1624 07AC                     l2184 0732  
                   l1720 0669                     l1712 065D                     l2168 03AA  
                   l2280 022F                     l2272 01C6                     l2256 017B  
                   l2248 0155                     l2192 0045                     l1800 0777  
                   l2098 04DD                     l1482 06E7                     l1474 06C8  
                   l1466 06B6                     l1626 07B1                     l2178 06FA  
                   l1730 0682                     l1722 066D                     l1714 065E  
                   l2282 023D                     l2266 01A5                     l2258 0184  
                   l2194 004B                     l1810 078E                     l1802 0780  
                   l2290 060F                     l1484 06E8                     l1476 06CC  
                   l1468 06B8                     l1628 07B5                     l1740 06A1  
                   l1732 0686                     l1724 0672                     l1716 0662  
                   l2276 01CE                     l2268 01AB                     l2196 0059  
                   l2188 002F                     l1820 079B                     l1812 0791  
                   l1804 0781                     l2292 0615                     l2284 05FF  
                   l1486 06EF                     l1478 06D0                     l1734 068A  
                   l1726 0678                     l1742 06A7                     l1718 0667  
                   l2278 01D6                     l2198 005F                     l1750 03C3  
                   l1830 07A4                     l1822 079C                     l1814 0795  
                   l1806 078A                     l2294 0621                     l2286 0604  
                   l1488 06F5                     l1744 06AC                     l1736 0694  
                   l1728 067B                     l1752 03CA                     l1832 07A7  
                   l1824 079F                     l1816 0797                     l1808 078D  
                   l1760 07F9                     l2296 063B                     l2288 0607  
                   l1746 06B1                     l1738 069A                     l1754 03CC  
                   l1834 07A8                     l1826 07A0                     l1818 079A  
                   l2298 0643                     l1756 03CE                     l1836 07A9  
                   l1828 07A3                     l1758 03D1                     l1790 0FF4  
                   l1792 03EA                     l1794 03EF                     l1980 0742  
                   l1990 0761                     l1982 0749                     l1798 0773  
                   l1992 0768                     l1984 074D                     l1976 0737  
                   l1986 0751                     l1978 073F                     l1994 076E  
                   l1988 075B                     l1998 0253                     ?_isr 0070  
                   STR_1 042F                     STR_2 04A2                     STR_3 04A5  
                   STR_4 042D                     STR_5 0410                     STR_6 04A2  
                   STR_7 04A5                     STR_8 042D                     STR_9 048F  
                   u1000 07D3                     u1001 07D2                     u1210 068A  
                   u1211 0689                     u1220 0694                     u1221 0693  
                   u1205 067C                     u1400 075B                     u1240 06A7  
                   u1401 075A                     u1241 06A6                     u1225 0690  
                   u1250 06AC                     u1170 0662                     u1251 06AB  
                   u1235 069B                     u1171 0661                     u1420 076E  
                   u1500 0349                     u1180 066D                     u1260 03CA  
                   u1421 076D                     u1405 0757                     u1501 0348  
                   u1181 066C                     u1261 03C9                     u1510 036F  
                   u1430 025A                     u1190 0678                     u1270 07FF  
                   u1415 0762                     u1511 036E                     u1431 0259  
                   u1191 0677                     u1271 07FE                     u1520 0383  
                   u1440 0262                     u1600 05A8                     u1521 0382  
                   u1441 0261                     u1601 05A7                     u1530 04B9  
                   u1370 073F                     u1450 02B0                     u1610 05B9  
                   u1531 04B8                     u1371 073E                     u1451 02AF  
                   u1611 05B8                     u1540 04C1                     u1460 02D6  
                   u1700 018A                     u1541 04C0                     u1461 02D5  
                   u1701 0189                     u1550 04CC                     u1390 0751  
                   u1470 02E1                     u1630 05CB                     u1710 0196  
                   u1551 04CB                     u1391 0750                     u1471 02E0  
                   u1631 05CA                     u1711 0195                     u1560 04DD  
                   u1480 02E7                     u1720 01A5                     u1561 04DC  
                   u1385 0743                     u1481 02E6                     u1465 02D2  
                   u1625 05BD                     u1721 01A4                     u1570 0513  
                   u1490 02EF                     u1650 05DC                     u1730 01AB  
                   u1571 0512                     u1491 02EE                     u1651 05DB  
                   u1731 01AA                     u1580 051A                     u1740 01B7  
                   u1581 0519                     u1645 05CC                     u1741 01B6  
                   u1670 05F0                     u1590 059D                     u1750 01C6  
                   u1671 05EF                     u1655 05D8                     u1591 059C  
                   u1751 01C5                     u1807 063F                     u1680 05F5  
                   u1760 01CE                     u1681 05F4                     u1665 05E4  
                   u1761 01CD                     u1817 0647                     u1770 01D6  
                   u1690 017B                     u1771 01D5                     u1691 017A  
                   u1907 00DF                     u1827 003F                     u1917 00F3  
                   u1837 0053                     u1927 0107                     u1847 0067  
                   u1937 0119                     u1857 0079                     u1947 012B  
                   u1867 008B                     u1787 060B                     u1957 013D  
                   u1877 009D                     u1797 0625                     u1967 014F  
                   u1887 00AF                     u1977 0163                     u1897 00C3  
                   u1987 0237                     _RCIF 0065                     _TXIF 0064  
                   _atoi 04A8                     _main 05FF                     _full 00A0  
                   _pot1 00A9                     _pot2 00A8                     _tens 007A  
                   btemp 007E                     start 000C                    ??_isr 0070  
                  ?_atoi 0078                    ?_main 0070          __end_of___awdiv 05FF  
                  STR_10 047B                    STR_11 0466                    STR_12 044D  
                  STR_13 0463                    STR_14 0463          __end_of___awmod 06B6  
                  _ANSEL 0188          ___awdiv@divisor 0072          __end_of___lwdiv 06FA  
                  i1l140 0FF9          __end_of___lwmod 0773          ___awdiv@counter 0020  
                  _RCREG 001A                    _SPBRG 0099                    _PORTB 0006  
                  _PORTC 0007                    _PORTD 0008          __end_of__doprnt 0386  
                  _TRISB 0086                    _TXREG 0019          __end_of_dpowers 0410  
        __end_of_isdigit 03EA          __end_of_mensaje 0250                    atoi@a 0023  
                  _setup 0773                    atoi@s 0025                    _putch 03F3  
                  fpbase 002B                    _units 006C                    pclath 000A  
        __end_of_spiInit 03D8          __end_of_spiRead 03F3                    status 0003  
                  wtemp0 007E          __end_of_sprintf 03A7          __initialization 000F  
           __end_of_atoi 052B             __end_of_main 065D                   ??_atoi 0020  
                 ??_main 0069         ___awdiv@dividend 0074                   ?_setup 0070  
                 ?_putch 0072                   _ANSELH 0189                   _SPBRGH 009A  
                 _TRISC2 043A                   _TRISC3 043B                   _TRISC5 043D  
                 _SSPCON 0014                   _SSPBUF 0013         __end_of__fptable 002F  
       __end_of_division 0596                   ___wmul 07D4                ??___awdiv 0076  
              ??___awmod 0076                ??___lwdiv 0076                ??___lwmod 0024  
                 _concat 06FA                ??__doprnt 0028         ___awdiv@quotient 0022  
        ___awmod@divisor 0072             __doprnt@flag 002B          ___awmod@counter 0077  
                 _printf 03A7             __doprnt@prec 002C                   _strcat 07AB  
                 fptable 0026                   fptotal 0002                ??_isdigit 0072  
              ??_mensaje 00AA                   saved_w 007E         __end_of_spiWrite 0FF9  
              ??_spiInit 0075                ??_spiRead 0072                ??_sprintf 0034  
__end_of__initialization 0022           __pcstackCOMMON 0070            __end_of_setup 07AB  
          __end_of_putch 03FC            division@valor 0079               __doprnt@ap 0027  
             __doprnt@pb 0030                  ??_setup 0076                  ??_putch 0073  
             __pbssBANK0 006A               __pbssBANK1 00A0               __pmaintext 05FF  
                ?___wmul 0072               __pintentry 0004                  ?_concat 003A  
__size_of_spiReceiveWait 0007                  ?_printf 0031                  ?_strcat 0072  
                _SSPSTAT 0094               __stringtab 0400                ?_division 0070  
              ?_spiWrite 0070                  ___awdiv 0596                  ___awmod 065D  
        __size_of___wmul 0025                  ___lwdiv 06B6                  ___lwmod 0737  
        __size_of_concat 003D                  __doprnt 0250                  __ptext1 0FF3  
                __ptext2 03EA                  __ptext3 07F9                  __ptext4 0773  
                __ptext5 03C2                  __ptext6 002F                  __ptext7 03A7  
                __ptext8 052B                  __ptext9 065D          __size_of_printf 001B  
        __size_of_strcat 0029                  _dpowers 0406                  _isdigit 03D8  
           __size_of_isr 0007                  _mensaje 002F         ___awmod@dividend 0074  
                _residuo 006B                  _spiInit 03C2                  _spiRead 03EA  
                concat@a 003A                  concat@b 003C                  concat@c 0067  
                _sprintf 0386     end_of_initialization 0022               ??_division 0024  
              _RCSTAbits 0018                  printf@f 0036               ??_spiWrite 0072  
              _PORTCbits 0007              spiWrite@dat 0072                _TXSTAbits 0098  
         _spiReceiveWait 07F9           __end_of___wmul 07F9              _BAUDCTLbits 0187  
         __end_of_concat 0737           __end_of_printf 03C2           __end_of_strcat 07D4  
    start_initialization 000F              __end_of_isr 1000   __end_of_spiReceiveWait 0800  
               ??___wmul 0076              __doprnt@val 002D                 ??_concat 003E  
               ??_printf 0033                 ??_strcat 0073              __pbssCOMMON 007A  
              ___latbits 0002            __pcstackBANK0 0020            __pcstackBANK1 00AA  
      __size_of__fptable 0009             _isdigit$1026 0072                __doprnt@c 002F  
              __doprnt@f 0026        __size_of_division 006B         ___lwdiv@dividend 0074  
        ?_spiReceiveWait 0070                __pfunctab 0026                 ?___awdiv 0072  
               ?___awmod 0072                 ?___lwdiv 0072                 ?___lwmod 0020  
               ?__doprnt 0026        __size_of_spiWrite 0006                __pstrings 0400  
               ?_isdigit 0070                 ?_mensaje 0070                 ?_spiInit 0072  
               ?_spiRead 0070         ___lwdiv@quotient 0077                 ?_sprintf 0031  
         __size_of_setup 0038           __size_of_putch 0009     spiInit@sTransmitEdge 0074  
      interrupt_function 0004           ___wmul@product 0076       spiInit@sDataSample 0072  
               _PIR1bits 000C               _ADCON0bits 001F              __stringbase 0405  
             _ADCON1bits 009F        ___wmul@multiplier 0072         __size_of___awdiv 0069  
       __size_of___awmod 0059         __size_of___lwdiv 0044         __size_of___lwmod 003C  
       __size_of__doprnt 0136       __end_of__stringtab 0406                 __fptable 0026  
             strcat@from 0072         __size_of_isdigit 0012         __size_of_mensaje 0221  
        ___lwdiv@divisor 0072          ___lwdiv@counter 0079                 __ptext10 0596  
               __ptext11 06FA                 __ptext20 07D4                 __ptext12 07AB  
               __ptext21 0FF9                 __ptext13 0386                 __ptext14 0250  
               __ptext15 03F3                 __ptext16 0737                 __ptext17 06B6  
               __ptext18 04A8                 __ptext19 03D8         __size_of_spiInit 0016  
       __size_of_spiRead 0009                 _division 052B                 _contador 00A2  
       __size_of_sprintf 0021            __size_of_atoi 0083            __size_of_main 005E  
               _hundreds 007B                 _spiWrite 0FF3                 concat@s1 0053  
               concat@s2 003F             spiInit@sType 0075                 atoi@sign 0022  
               fp__putch 002C        spiInit@sClockIdle 0073                putch@data 0072  
               isdigit@c 0073                 intlevel1 0026                sprintf@ap 0037  
              sprintf@pb 0038                sprintf@wh 0036         ___lwmod@dividend 0022  
       ??_spiReceiveWait 0072                stringcode 0400               _OSCCONbits 008F  
               printf@ap 0035                 printf@pb 0037                 sprintf@f 0031  
               strcat@cp 0075                 strcat@to 0074          ___lwmod@divisor 0020  
        ___lwmod@counter 0025                 stringdir 0400                 stringtab 0400  
